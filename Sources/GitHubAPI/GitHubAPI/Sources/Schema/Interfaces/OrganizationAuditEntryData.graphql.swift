// @generated
// This file was automatically generated and should not be edited.

import ApolloAPI

public extension Interfaces {
  /// Metadata for an audit entry with action org.*
  static let OrganizationAuditEntryData = ApolloAPI.Interface(
    name: "OrganizationAuditEntryData",
    keyFields: nil,
    implementingObjects: [
      "MembersCanDeleteReposClearAuditEntry",
      "MembersCanDeleteReposDisableAuditEntry",
      "MembersCanDeleteReposEnableAuditEntry",
      "OauthApplicationCreateAuditEntry",
      "OrgAddBillingManagerAuditEntry",
      "OrgAddMemberAuditEntry",
      "OrgBlockUserAuditEntry",
      "OrgConfigDisableCollaboratorsOnlyAuditEntry",
      "OrgConfigEnableCollaboratorsOnlyAuditEntry",
      "OrgCreateAuditEntry",
      "OrgDisableOauthAppRestrictionsAuditEntry",
      "OrgDisableSamlAuditEntry",
      "OrgDisableTwoFactorRequirementAuditEntry",
      "OrgEnableOauthAppRestrictionsAuditEntry",
      "OrgEnableSamlAuditEntry",
      "OrgEnableTwoFactorRequirementAuditEntry",
      "OrgInviteMemberAuditEntry",
      "OrgInviteToBusinessAuditEntry",
      "OrgOauthAppAccessApprovedAuditEntry",
      "OrgOauthAppAccessDeniedAuditEntry",
      "OrgOauthAppAccessRequestedAuditEntry",
      "OrgRemoveBillingManagerAuditEntry",
      "OrgRemoveMemberAuditEntry",
      "OrgRemoveOutsideCollaboratorAuditEntry",
      "OrgRestoreMemberAuditEntry",
      "OrgRestoreMemberMembershipOrganizationAuditEntryData",
      "OrgUnblockUserAuditEntry",
      "OrgUpdateDefaultRepositoryPermissionAuditEntry",
      "OrgUpdateMemberAuditEntry",
      "OrgUpdateMemberRepositoryCreationPermissionAuditEntry",
      "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry",
      "PrivateRepositoryForkingDisableAuditEntry",
      "PrivateRepositoryForkingEnableAuditEntry",
      "RepoAccessAuditEntry",
      "RepoAddMemberAuditEntry",
      "RepoAddTopicAuditEntry",
      "RepoArchivedAuditEntry",
      "RepoChangeMergeSettingAuditEntry",
      "RepoConfigDisableAnonymousGitAccessAuditEntry",
      "RepoConfigDisableCollaboratorsOnlyAuditEntry",
      "RepoConfigDisableContributorsOnlyAuditEntry",
      "RepoConfigDisableSockpuppetDisallowedAuditEntry",
      "RepoConfigEnableAnonymousGitAccessAuditEntry",
      "RepoConfigEnableCollaboratorsOnlyAuditEntry",
      "RepoConfigEnableContributorsOnlyAuditEntry",
      "RepoConfigEnableSockpuppetDisallowedAuditEntry",
      "RepoConfigLockAnonymousGitAccessAuditEntry",
      "RepoConfigUnlockAnonymousGitAccessAuditEntry",
      "RepoCreateAuditEntry",
      "RepoDestroyAuditEntry",
      "RepoRemoveMemberAuditEntry",
      "RepoRemoveTopicAuditEntry",
      "RepositoryVisibilityChangeDisableAuditEntry",
      "RepositoryVisibilityChangeEnableAuditEntry",
      "TeamAddMemberAuditEntry",
      "TeamAddRepositoryAuditEntry",
      "TeamChangeParentTeamAuditEntry",
      "TeamRemoveMemberAuditEntry",
      "TeamRemoveRepositoryAuditEntry"
    ]
  )
}