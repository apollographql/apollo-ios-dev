let ApolloCodegenFrontendBundle: String = #"var ApolloCodegenFrontend=function(e){"use strict";function t(e){return"object"==typeof e&&null!==e}function n(e,t){throw new Error(t??"Unexpected invariant triggered.")}const r=/\r\n|[\n\r]/g;function i(e,t){let i=0,o=1;for(const s of e.body.matchAll(r)){if("number"==typeof s.index||n(),s.index>=t)break;i=s.index+s[0].length,o+=1}return{line:o,column:t+1-i}}function o(e,t){const n=e.locationOffset.column-1,r="".padStart(n)+e.body,i=t.line-1,o=e.locationOffset.line-1,a=t.line+o,c=1===t.line?n:0,u=t.column+c,l=`${e.name}:${a}:${u}\n`,p=r.split(/\r\n|[\n\r]/g),d=p[i];if(d.length>120){const e=Math.floor(u/80),t=u%80,n=[];for(let e=0;e<d.length;e+=80)n.push(d.slice(e,e+80));return l+s([[`${a} |`,n[0]],...n.slice(1,e+1).map((e=>["|",e])),["|","^".padStart(t)],["|",n[e+1]]])}return l+s([[a-1+" |",p[i-1]],[`${a} |`,d],["|","^".padStart(u)],[`${a+1} |`,p[i+1]]])}function s(e){const t=e.filter((([e,t])=>void 0!==t)),n=Math.max(...t.map((([e])=>e.length)));return t.map((([e,t])=>e.padStart(n)+(t?" "+t:""))).join("\n")}class GraphQLError extends Error{constructor(e,n={}){const{nodes:r,source:o,positions:s,path:c,originalError:u,extensions:l}=n;super(e),this.name="GraphQLError",this.path=c??void 0,this.originalError=u??void 0,this.nodes=a(Array.isArray(r)?r:r?[r]:void 0);const p=a(this.nodes?.map((e=>e.loc)).filter((e=>null!=e)));this.source=o??p?.[0]?.source,this.positions=s??p?.map((e=>e.start)),this.locations=s&&o?s.map((e=>i(o,e))):p?.map((e=>i(e.source,e.start)));const d=t(u?.extensions)?u?.extensions:void 0;this.extensions=l??d??Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),null!=u?.stack?Object.defineProperty(this,"stack",{value:u.stack,writable:!0,configurable:!0}):null!=Error.captureStackTrace?Error.captureStackTrace(this,GraphQLError):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let e=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(e+="\n\n"+o((t=n.loc).source,i(t.source,t.start)));else if(this.source&&this.locations)for(const t of this.locations)e+="\n\n"+o(this.source,t);var t;return e}toJSON(){const e={message:this.message};return null!=this.locations&&(e.locations=this.locations),null!=this.path&&(e.path=this.path),null!=this.extensions&&Object.keys(this.extensions).length>0&&(e.extensions=this.extensions),e}}function a(e){return void 0===e||0===e.length?void 0:e}function c(e,t,n){return new GraphQLError(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Location{constructor(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class Token{constructor(e,t,n,r,i,o){this.kind=e,this.start=t,this.end=n,this.line=r,this.column=i,this.value=o,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const u={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentArgument:["name","value"],FragmentSpread:["name","arguments","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},l=new Set(Object.keys(u));function p(e){const t=e?.kind;return"string"==typeof t&&l.has(t)}const d={QUERY:"query",MUTATION:"mutation",SUBSCRIPTION:"subscription"},f={QUERY:"QUERY",MUTATION:"MUTATION",SUBSCRIPTION:"SUBSCRIPTION",FIELD:"FIELD",FRAGMENT_DEFINITION:"FRAGMENT_DEFINITION",FRAGMENT_SPREAD:"FRAGMENT_SPREAD",INLINE_FRAGMENT:"INLINE_FRAGMENT",VARIABLE_DEFINITION:"VARIABLE_DEFINITION",SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD_DEFINITION:"FIELD_DEFINITION",ARGUMENT_DEFINITION:"ARGUMENT_DEFINITION",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD_DEFINITION:"INPUT_FIELD_DEFINITION",FRAGMENT_VARIABLE_DEFINITION:"FRAGMENT_VARIABLE_DEFINITION"},h="Name",m="Document",v="OperationDefinition",y="VariableDefinition",g="SelectionSet",T="Field",E="Argument",b="FragmentArgument",N="FragmentSpread",S="InlineFragment",L="FragmentDefinition",w="Variable",I="IntValue",O="FloatValue",k="StringValue",_="BooleanValue",A="NullValue",D="EnumValue",x="ListValue",$="ObjectValue",F="ObjectField",G="Directive",Q="NamedType",C="ListType",R="NonNullType",V="SchemaDefinition",j="OperationTypeDefinition",M="ScalarTypeDefinition",U="ObjectTypeDefinition",P="FieldDefinition",B="InputValueDefinition",J="InterfaceTypeDefinition",q="UnionTypeDefinition",K="EnumTypeDefinition",z="EnumValueDefinition",Y="InputObjectTypeDefinition",H="DirectiveDefinition",W="SchemaExtension",X="ScalarTypeExtension",Z="ObjectTypeExtension",ee="InterfaceTypeExtension",te="UnionTypeExtension",ne="EnumTypeExtension",re="InputObjectTypeExtension";var ie=Object.freeze({__proto__:null,ARGUMENT:E,BOOLEAN:_,DIRECTIVE:G,DIRECTIVE_DEFINITION:H,DOCUMENT:m,ENUM:D,ENUM_TYPE_DEFINITION:K,ENUM_TYPE_EXTENSION:ne,ENUM_VALUE_DEFINITION:z,FIELD:T,FIELD_DEFINITION:P,FLOAT:O,FRAGMENT_ARGUMENT:b,FRAGMENT_DEFINITION:L,FRAGMENT_SPREAD:N,INLINE_FRAGMENT:S,INPUT_OBJECT_TYPE_DEFINITION:Y,INPUT_OBJECT_TYPE_EXTENSION:re,INPUT_VALUE_DEFINITION:B,INT:I,INTERFACE_TYPE_DEFINITION:J,INTERFACE_TYPE_EXTENSION:ee,LIST:x,LIST_TYPE:C,NAME:h,NAMED_TYPE:Q,NON_NULL_TYPE:R,NULL:A,OBJECT:$,OBJECT_FIELD:F,OBJECT_TYPE_DEFINITION:U,OBJECT_TYPE_EXTENSION:Z,OPERATION_DEFINITION:v,OPERATION_TYPE_DEFINITION:j,SCALAR_TYPE_DEFINITION:M,SCALAR_TYPE_EXTENSION:X,SCHEMA_DEFINITION:V,SCHEMA_EXTENSION:W,SELECTION_SET:g,STRING:k,UNION_TYPE_DEFINITION:q,UNION_TYPE_EXTENSION:te,VARIABLE:w,VARIABLE_DEFINITION:y});function oe(e){return 9===e||32===e}function se(e){return e>=48&&e<=57}function ae(e){return e>=97&&e<=122||e>=65&&e<=90}function ce(e){return ae(e)||95===e}function ue(e){return ae(e)||se(e)||95===e}function le(e){let t=Number.MAX_SAFE_INTEGER,n=null,r=-1;for(let i=0;i<e.length;++i){const o=e[i],s=pe(o);s!==o.length&&(n??=i,r=i,0!==i&&s<t&&(t=s))}return e.map(((e,n)=>0===n?e:e.slice(t))).slice(n??0,r+1)}function pe(e){let t=0;for(;t<e.length&&oe(e.charCodeAt(t));)++t;return t}function de(e){if(""===e)return!0;let t=!0,n=!1,r=!0,i=!1;for(let o=0;o<e.length;++o)switch(e.codePointAt(o)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:case 13:return!1;case 10:if(t&&!i)return!1;i=!0,t=!0,n=!1;break;case 9:case 32:n||=t;break;default:r&&=n,t=!1}return!t&&(!r||!i)}const fe={SOF:"<SOF>",EOF:"<EOF>",BANG:"!",DOLLAR:"$",AMP:"&",PAREN_L:"(",PAREN_R:")",SPREAD:"...",COLON:":",EQUALS:"=",AT:"@",BRACKET_L:"[",BRACKET_R:"]",BRACE_L:"{",PIPE:"|",BRACE_R:"}",NAME:"Name",INT:"Int",FLOAT:"Float",STRING:"String",BLOCK_STRING:"BlockString",COMMENT:"Comment"};class Lexer{constructor(e){const t=new Token(fe.SOF,0,0,0,0);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){this.lastToken=this.token;return this.token=this.lookahead()}lookahead(){let e=this.token;if(e.kind!==fe.EOF)do{if(e.next)e=e.next;else{const t=Ee(this,e.end);e.next=t,t.prev=e,e=t}}while(e.kind===fe.COMMENT);return e}}function he(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function me(e,t){return ve(e.charCodeAt(t))&&ye(e.charCodeAt(t+1))}function ve(e){return e>=55296&&e<=56319}function ye(e){return e>=56320&&e<=57343}function ge(e,t){const n=e.source.body.codePointAt(t);if(void 0===n)return fe.EOF;if(n>=32&&n<=126){const e=String.fromCodePoint(n);return'"'===e?"'\"'":`"${e}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function Te(e,t,n,r,i){const o=e.line,s=1+n-e.lineStart;return new Token(t,n,r,o,s,i)}function Ee(e,t){const n=e.source.body,r=n.length;let i=t;for(;i<r;){const t=n.charCodeAt(i);switch(t){case 65279:case 9:case 32:case 44:++i;continue;case 10:++i,++e.line,e.lineStart=i;continue;case 13:10===n.charCodeAt(i+1)?i+=2:++i,++e.line,e.lineStart=i;continue;case 35:return be(e,i);case 33:return Te(e,fe.BANG,i,i+1);case 36:return Te(e,fe.DOLLAR,i,i+1);case 38:return Te(e,fe.AMP,i,i+1);case 40:return Te(e,fe.PAREN_L,i,i+1);case 41:return Te(e,fe.PAREN_R,i,i+1);case 46:{const t=n.charCodeAt(i+1);if(46===t&&46===n.charCodeAt(i+2))return Te(e,fe.SPREAD,i,i+3);if(46===t)throw c(e.source,i,'Unexpected "..", did you mean "..."?');if(se(t)){const n=e.source.body.slice(i+1,Se(e,i+1,t));throw c(e.source,i,`Invalid number, expected digit before ".", did you mean "0.${n}"?`)}break}case 58:return Te(e,fe.COLON,i,i+1);case 61:return Te(e,fe.EQUALS,i,i+1);case 64:return Te(e,fe.AT,i,i+1);case 91:return Te(e,fe.BRACKET_L,i,i+1);case 93:return Te(e,fe.BRACKET_R,i,i+1);case 123:return Te(e,fe.BRACE_L,i,i+1);case 124:return Te(e,fe.PIPE,i,i+1);case 125:return Te(e,fe.BRACE_R,i,i+1);case 34:return 34===n.charCodeAt(i+1)&&34===n.charCodeAt(i+2)?Ae(e,i):Le(e,i)}if(se(t)||45===t)return Ne(e,i,t);if(ce(t))return De(e,i);throw c(e.source,i,39===t?"Unexpected single quote character ('), did you mean to use a double quote (\")?":he(t)||me(n,i)?`Unexpected character: ${ge(e,i)}.`:`Invalid character: ${ge(e,i)}.`)}return Te(e,fe.EOF,r,r)}function be(e,t){const n=e.source.body,r=n.length;let i=t+1;for(;i<r;){const e=n.charCodeAt(i);if(10===e||13===e)break;if(he(e))++i;else{if(!me(n,i))break;i+=2}}return Te(e,fe.COMMENT,t,i,n.slice(t+1,i))}function Ne(e,t,n){const r=e.source.body;let i=t,o=n,s=!1;if(45===o&&(o=r.charCodeAt(++i)),48===o){if(o=r.charCodeAt(++i),se(o))throw c(e.source,i,`Invalid number, unexpected digit after 0: ${ge(e,i)}.`)}else i=Se(e,i,o),o=r.charCodeAt(i);if(46===o&&(s=!0,o=r.charCodeAt(++i),i=Se(e,i,o),o=r.charCodeAt(i)),69!==o&&101!==o||(s=!0,o=r.charCodeAt(++i),43!==o&&45!==o||(o=r.charCodeAt(++i)),i=Se(e,i,o),o=r.charCodeAt(i)),46===o||ce(o))throw c(e.source,i,`Invalid number, expected digit but got: ${ge(e,i)}.`);return Te(e,s?fe.FLOAT:fe.INT,t,i,r.slice(t,i))}function Se(e,t,n){if(!se(n))throw c(e.source,t,`Invalid number, expected digit but got: ${ge(e,t)}.`);const r=e.source.body;let i=t+1;for(;se(r.charCodeAt(i));)++i;return i}function Le(e,t){const n=e.source.body,r=n.length;let i=t+1,o=i,s="";for(;i<r;){const r=n.charCodeAt(i);if(34===r)return s+=n.slice(o,i),Te(e,fe.STRING,t,i+1,s);if(92!==r){if(10===r||13===r)break;if(he(r))++i;else{if(!me(n,i))throw c(e.source,i,`Invalid character within String: ${ge(e,i)}.`);i+=2}}else{s+=n.slice(o,i);const t=117===n.charCodeAt(i+1)?123===n.charCodeAt(i+2)?we(e,i):Ie(e,i):_e(e,i);s+=t.value,i+=t.size,o=i}}throw c(e.source,i,"Unterminated string.")}function we(e,t){const n=e.source.body;let r=0,i=3;for(;i<12;){const e=n.charCodeAt(t+i++);if(125===e){if(i<5||!he(r))break;return{value:String.fromCodePoint(r),size:i}}if(r=r<<4|ke(e),r<0)break}throw c(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+i)}".`)}function Ie(e,t){const n=e.source.body,r=Oe(n,t+2);if(he(r))return{value:String.fromCodePoint(r),size:6};if(ve(r)&&92===n.charCodeAt(t+6)&&117===n.charCodeAt(t+7)){const e=Oe(n,t+8);if(ye(e))return{value:String.fromCodePoint(r,e),size:12}}throw c(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function Oe(e,t){return ke(e.charCodeAt(t))<<12|ke(e.charCodeAt(t+1))<<8|ke(e.charCodeAt(t+2))<<4|ke(e.charCodeAt(t+3))}function ke(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function _e(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:"\n",size:2};case 114:return{value:"\r",size:2};case 116:return{value:"\t",size:2}}throw c(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function Ae(e,t){const n=e.source.body,r=n.length;let i=e.lineStart,o=t+3,s=o,a="";const u=[];for(;o<r;){const r=n.charCodeAt(o);if(34===r&&34===n.charCodeAt(o+1)&&34===n.charCodeAt(o+2)){a+=n.slice(s,o),u.push(a);const r=Te(e,fe.BLOCK_STRING,t,o+3,le(u).join("\n"));return e.line+=u.length-1,e.lineStart=i,r}if(92!==r||34!==n.charCodeAt(o+1)||34!==n.charCodeAt(o+2)||34!==n.charCodeAt(o+3))if(10!==r&&13!==r)if(he(r))++o;else{if(!me(n,o))throw c(e.source,o,`Invalid character within String: ${ge(e,o)}.`);o+=2}else a+=n.slice(s,o),u.push(a),13===r&&10===n.charCodeAt(o+1)?o+=2:++o,a="",s=o,i=o;else a+=n.slice(s,o),s=o+1,o+=4}throw c(e.source,o,"Unterminated string.")}function De(e,t){const n=e.source.body,r=n.length;let i=t+1;for(;i<r;){if(!ue(n.charCodeAt(i)))break;++i}return Te(e,fe.NAME,t,i,n.slice(t,i))}function xe(e,t){throw new Error(t)}const $e=10,Fe=2;function Ge(e){return Qe(e,[])}function Qe(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,t){if(null===e)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(function(e){return"function"==typeof e.toJSON}(e)){const t=e.toJSON();if(t!==e)return"string"==typeof t?t:Qe(t,n)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>Fe)return"[Array]";const n=Math.min($e,e.length),r=e.length-n,i=[];for(let r=0;r<n;++r)i.push(Qe(e[r],t));1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`);return"["+i.join(", ")+"]"}(e,n);return function(e,t){const n=Object.entries(e);if(0===n.length)return"{}";if(t.length>Fe)return"["+function(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){const t=e.constructor.name;if("string"==typeof t&&""!==t)return t}return t}(e)+"]";const r=n.map((([e,n])=>e+": "+Qe(n,t)));return"{ "+r.join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}const Ce=null!=globalThis.process&&"production"===process.env.NODE_ENV?function(e,t){return e instanceof t}:function(e,t){if(e instanceof t)return!0;if("object"==typeof e&&null!==e){const n=t.prototype[Symbol.toStringTag];if(n===(Symbol.toStringTag in e?e[Symbol.toStringTag]:e.constructor?.name)){const t=Ge(e);throw new Error(`Cannot use ${n} "${t}" from another module or realm.\n\nEnsure that there is only one instance of "graphql" in the node_modules\ndirectory. If different versions of "graphql" are the dependencies of other\nrelied on modules, use "resolutions" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate "graphql" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`)}}return!1};class Source{constructor(e,t="GraphQL request",n={line:1,column:1}){this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||xe(0,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||xe(0,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function Re(e,t){const n=new Parser(e,t),r=n.parseDocument();return Object.defineProperty(r,"tokenCount",{enumerable:!1,value:n.tokenCount}),r}function Ve(e,t){const n=new Parser(e,t);n.expectToken(fe.SOF);const r=n.parseConstValueLiteral();return n.expectToken(fe.EOF),r}class Parser{constructor(e,t={}){const n=function(e){return Ce(e,Source)}(e)?e:new Source(e);this._lexer=new Lexer(n),this._options=t,this._tokenCounter=0}get tokenCount(){return this._tokenCounter}parseName(){const e=this.expectToken(fe.NAME);return this.node(e,{kind:h,value:e.value})}parseDocument(){return this.node(this._lexer.token,{kind:m,definitions:this.many(fe.SOF,this.parseDefinition,fe.EOF)})}parseDefinition(){if(this.peek(fe.BRACE_L))return this.parseOperationDefinition();const e=this.peekDescription(),t=e?this._lexer.lookahead():this._lexer.token;if(t.kind===fe.NAME){switch(t.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(e)throw c(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(t.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(t)}parseOperationDefinition(){const e=this._lexer.token;if(this.peek(fe.BRACE_L))return this.node(e,{kind:v,operation:d.QUERY,name:void 0,variableDefinitions:void 0,directives:void 0,selectionSet:this.parseSelectionSet()});const t=this.parseOperationType();let n;return this.peek(fe.NAME)&&(n=this.parseName()),this.node(e,{kind:v,operation:t,name:n,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const e=this.expectToken(fe.NAME);switch(e.value){case"query":return d.QUERY;case"mutation":return d.MUTATION;case"subscription":return d.SUBSCRIPTION}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(fe.PAREN_L,this.parseVariableDefinition,fe.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:y,variable:this.parseVariable(),type:(this.expectToken(fe.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(fe.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const e=this._lexer.token;return this.expectToken(fe.DOLLAR),this.node(e,{kind:w,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:g,selections:this.many(fe.BRACE_L,this.parseSelection,fe.BRACE_R)})}parseSelection(){return this.peek(fe.SPREAD)?this.parseFragment():this.parseField()}parseField(){const e=this._lexer.token,t=this.parseName();let n,r;return this.expectOptionalToken(fe.COLON)?(n=t,r=this.parseName()):r=t,this.node(e,{kind:T,alias:n,name:r,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(fe.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(e){const t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(fe.PAREN_L,t,fe.PAREN_R)}parseFragmentArguments(){const e=this.parseFragmentArgument;return this.optionalMany(fe.PAREN_L,e,fe.PAREN_R)}parseArgument(e=!1){const t=this._lexer.token,n=this.parseName();return this.expectToken(fe.COLON),this.node(t,{kind:E,name:n,value:this.parseValueLiteral(e)})}parseConstArgument(){return this.parseArgument(!0)}parseFragmentArgument(){const e=this._lexer.token,t=this.parseName();return this.expectToken(fe.COLON),this.node(e,{kind:b,name:t,value:this.parseValueLiteral(!1)})}parseFragment(){const e=this._lexer.token;this.expectToken(fe.SPREAD);const t=this.expectOptionalKeyword("on");if(!t&&this.peek(fe.NAME)){const t=this.parseFragmentName();return this.peek(fe.PAREN_L)&&this._options.experimentalFragmentArguments?this.node(e,{kind:N,name:t,arguments:this.parseFragmentArguments(),directives:this.parseDirectives(!1)}):this.node(e,{kind:N,name:t,directives:this.parseDirectives(!1)})}return this.node(e,{kind:S,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const e=this._lexer.token;return this.expectKeyword("fragment"),!0===this._options.experimentalFragmentArguments?this.node(e,{kind:L,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(e,{kind:L,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(e){const t=this._lexer.token;switch(t.kind){case fe.BRACKET_L:return this.parseList(e);case fe.BRACE_L:return this.parseObject(e);case fe.INT:return this.advanceLexer(),this.node(t,{kind:I,value:t.value});case fe.FLOAT:return this.advanceLexer(),this.node(t,{kind:O,value:t.value});case fe.STRING:case fe.BLOCK_STRING:return this.parseStringLiteral();case fe.NAME:switch(this.advanceLexer(),t.value){case"true":return this.node(t,{kind:_,value:!0});case"false":return this.node(t,{kind:_,value:!1});case"null":return this.node(t,{kind:A});default:return this.node(t,{kind:D,value:t.value})}case fe.DOLLAR:if(e){if(this.expectToken(fe.DOLLAR),this._lexer.token.kind===fe.NAME){const e=this._lexer.token.value;throw c(this._lexer.source,t.start,`Unexpected variable "$${e}" in constant value.`)}throw this.unexpected(t)}return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const e=this._lexer.token;return this.advanceLexer(),this.node(e,{kind:k,value:e.value,block:e.kind===fe.BLOCK_STRING})}parseList(e){return this.node(this._lexer.token,{kind:x,values:this.any(fe.BRACKET_L,(()=>this.parseValueLiteral(e)),fe.BRACKET_R)})}parseObject(e){return this.node(this._lexer.token,{kind:$,fields:this.any(fe.BRACE_L,(()=>this.parseObjectField(e)),fe.BRACE_R)})}parseObjectField(e){const t=this._lexer.token,n=this.parseName();return this.expectToken(fe.COLON),this.node(t,{kind:F,name:n,value:this.parseValueLiteral(e)})}parseDirectives(e){const t=[];for(;this.peek(fe.AT);)t.push(this.parseDirective(e));if(t.length)return t}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(e){const t=this._lexer.token;return this.expectToken(fe.AT),this.node(t,{kind:G,name:this.parseName(),arguments:this.parseArguments(e)})}parseTypeReference(){const e=this._lexer.token;let t;if(this.expectOptionalToken(fe.BRACKET_L)){const n=this.parseTypeReference();this.expectToken(fe.BRACKET_R),t=this.node(e,{kind:C,type:n})}else t=this.parseNamedType();return this.expectOptionalToken(fe.BANG)?this.node(e,{kind:R,type:t}):t}parseNamedType(){return this.node(this._lexer.token,{kind:Q,name:this.parseName()})}peekDescription(){return this.peek(fe.STRING)||this.peek(fe.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");const n=this.parseConstDirectives(),r=this.many(fe.BRACE_L,this.parseOperationTypeDefinition,fe.BRACE_R);return this.node(e,{kind:V,description:t,directives:n,operationTypes:r})}parseOperationTypeDefinition(){const e=this._lexer.token,t=this.parseOperationType();this.expectToken(fe.COLON);const n=this.parseNamedType();return this.node(e,{kind:j,operation:t,type:n})}parseScalarTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");const n=this.parseName(),r=this.parseConstDirectives();return this.node(e,{kind:M,description:t,name:n,directives:r})}parseObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(e,{kind:U,description:t,name:n,interfaces:r,directives:i,fields:o})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(fe.AMP,this.parseNamedType):void 0}parseFieldsDefinition(){return this.optionalMany(fe.BRACE_L,this.parseFieldDefinition,fe.BRACE_R)}parseFieldDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),r=this.parseArgumentDefs();this.expectToken(fe.COLON);const i=this.parseTypeReference(),o=this.parseConstDirectives();return this.node(e,{kind:P,description:t,name:n,arguments:r,type:i,directives:o})}parseArgumentDefs(){return this.optionalMany(fe.PAREN_L,this.parseInputValueDef,fe.PAREN_R)}parseInputValueDef(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(fe.COLON);const r=this.parseTypeReference();let i;this.expectOptionalToken(fe.EQUALS)&&(i=this.parseConstValueLiteral());const o=this.parseConstDirectives();return this.node(e,{kind:B,description:t,name:n,type:r,defaultValue:i,directives:o})}parseInterfaceTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(e,{kind:J,description:t,name:n,interfaces:r,directives:i,fields:o})}parseUnionTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseUnionMemberTypes();return this.node(e,{kind:q,description:t,name:n,directives:r,types:i})}parseUnionMemberTypes(){return this.expectOptionalToken(fe.EQUALS)?this.delimitedMany(fe.PIPE,this.parseNamedType):void 0}parseEnumTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();return this.node(e,{kind:K,description:t,name:n,directives:r,values:i})}parseEnumValuesDefinition(){return this.optionalMany(fe.BRACE_L,this.parseEnumValueDefinition,fe.BRACE_R)}parseEnumValueDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseEnumValueName(),r=this.parseConstDirectives();return this.node(e,{kind:z,description:t,name:n,directives:r})}parseEnumValueName(){if("true"===this._lexer.token.value||"false"===this._lexer.token.value||"null"===this._lexer.token.value)throw c(this._lexer.source,this._lexer.token.start,`${je(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();return this.node(e,{kind:Y,description:t,name:n,directives:r,fields:i})}parseInputFieldsDefinition(){return this.optionalMany(fe.BRACE_L,this.parseInputValueDef,fe.BRACE_R)}parseTypeSystemExtension(){const e=this._lexer.lookahead();if(e.kind===fe.NAME)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)}parseSchemaExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const t=this.parseConstDirectives(),n=this.optionalMany(fe.BRACE_L,this.parseOperationTypeDefinition,fe.BRACE_R);if(void 0===t&&void 0===n)throw this.unexpected();return this.node(e,{kind:W,directives:t,operationTypes:n})}parseScalarTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const t=this.parseName(),n=this.parseConstDirectives();if(void 0===n)throw this.unexpected();return this.node(e,{kind:X,name:t,directives:n})}parseObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(void 0===n&&void 0===r&&void 0===i)throw this.unexpected();return this.node(e,{kind:Z,name:t,interfaces:n,directives:r,fields:i})}parseInterfaceTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(void 0===n&&void 0===r&&void 0===i)throw this.unexpected();return this.node(e,{kind:ee,name:t,interfaces:n,directives:r,fields:i})}parseUnionTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseUnionMemberTypes();if(void 0===n&&void 0===r)throw this.unexpected();return this.node(e,{kind:te,name:t,directives:n,types:r})}parseEnumTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();if(void 0===n&&void 0===r)throw this.unexpected();return this.node(e,{kind:ne,name:t,directives:n,values:r})}parseInputObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();if(void 0===n&&void 0===r)throw this.unexpected();return this.node(e,{kind:re,name:t,directives:n,fields:r})}parseDirectiveDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(fe.AT);const n=this.parseName(),r=this.parseArgumentDefs(),i=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const o=this.parseDirectiveLocations();return this.node(e,{kind:H,description:t,name:n,arguments:r,repeatable:i,locations:o})}parseDirectiveLocations(){return this.delimitedMany(fe.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const e=this._lexer.token,t=this.parseName();if(Object.hasOwn(f,t.value))return t;throw this.unexpected(e)}node(e,t){return!0!==this._options.noLocation&&(t.loc=new Location(e,this._lexer.lastToken,this._lexer.source)),t}peek(e){return this._lexer.token.kind===e}expectToken(e){const t=this._lexer.token;if(t.kind===e)return this.advanceLexer(),t;throw c(this._lexer.source,t.start,`Expected ${Me(e)}, found ${je(t)}.`)}expectOptionalToken(e){return this._lexer.token.kind===e&&(this.advanceLexer(),!0)}expectKeyword(e){const t=this._lexer.token;if(t.kind!==fe.NAME||t.value!==e)throw c(this._lexer.source,t.start,`Expected "${e}", found ${je(t)}.`);this.advanceLexer()}expectOptionalKeyword(e){const t=this._lexer.token;return t.kind===fe.NAME&&t.value===e&&(this.advanceLexer(),!0)}unexpected(e){const t=e??this._lexer.token;return c(this._lexer.source,t.start,`Unexpected ${je(t)}.`)}any(e,t,n){this.expectToken(e);const r=[];for(;!this.expectOptionalToken(n);)r.push(t.call(this));return r}optionalMany(e,t,n){if(this.expectOptionalToken(e)){const e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(n));return e}}many(e,t,n){this.expectToken(e);const r=[];do{r.push(t.call(this))}while(!this.expectOptionalToken(n));return r}delimitedMany(e,t){this.expectOptionalToken(e);const n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n}advanceLexer(){const{maxTokens:e}=this._options,t=this._lexer.advance();if(t.kind!==fe.EOF&&(++this._tokenCounter,void 0!==e&&this._tokenCounter>e))throw c(this._lexer.source,t.start,`Document contains more than ${e} tokens. Parsing aborted.`)}}function je(e){const t=e.value;return Me(e.kind)+(null!=t?` "${t}"`:"")}function Me(e){return function(e){return e===fe.BANG||e===fe.DOLLAR||e===fe.AMP||e===fe.PAREN_L||e===fe.PAREN_R||e===fe.SPREAD||e===fe.COLON||e===fe.EQUALS||e===fe.AT||e===fe.BRACKET_L||e===fe.BRACKET_R||e===fe.BRACE_L||e===fe.PIPE||e===fe.BRACE_R}(e)?`"${e}"`:e}class AccumulatorMap extends Map{get[Symbol.toStringTag](){return"AccumulatorMap"}add(e,t){const n=this.get(e);void 0===n?this.set(e,[t]):n.push(t)}}function Ue(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}function Pe(e){return Be("and",e)}function Be(e,t){switch(0!==t.length||n(),t.length){case 1:return t[0];case 2:return t[0]+" "+e+" "+t[1]}const r=t.slice(0,-1),i=t.at(-1);return r.join(", ")+", "+e+" "+i}function Je(e){return"object"==typeof e&&"function"==typeof e?.[Symbol.iterator]}function qe(e,t){const n=Object.create(null);for(const r of e)n[t(r)]=r;return n}function Ke(e,t){const n=Object.create(null);for(const r of Object.keys(e))n[r]=t(e[r],r);return n}function ze(e){return 0===e.length?"":` at ${e.map((e=>"number"==typeof e?`[${e}]`:`.${e}`)).join("")}`}const Ye=5;function He(e,t){const[n,r]=t?[e,t]:[void 0,e];if(0===r.length)return"";let i=" Did you mean ";null!=n&&(i+=n+" ");return i+Be("or",r.slice(0,Ye).map((e=>`"${e}"`)))+"?"}function We(e){return e}function Xe(e,t,n){const r=Object.create(null);for(const i of e)r[t(i)]=n(i);return r}function Ze(e,t){let n=0,r=0;for(;n<e.length&&r<t.length;){let i=e.charCodeAt(n),o=t.charCodeAt(r);if(nt(i)&&nt(o)){let s=0;do{++n,s=10*s+i-et,i=e.charCodeAt(n)}while(nt(i)&&s>0);let a=0;do{++r,a=10*a+o-et,o=t.charCodeAt(r)}while(nt(o)&&a>0);if(s<a)return-1;if(s>a)return 1}else{if(i<o)return-1;if(i>o)return 1;++n,++r}}return e.length-t.length}const et=48,tt=57;function nt(e){return!isNaN(e)&&et<=e&&e<=tt}function rt(e,t){const n=Object.create(null),r=new LexicalDistance(e),i=Math.floor(.4*e.length)+1;for(const e of t){const t=r.measure(e,i);void 0!==t&&(n[e]=t)}return Object.keys(n).sort(((e,t)=>{const r=n[e]-n[t];return 0!==r?r:Ze(e,t)}))}class LexicalDistance{constructor(e){this._input=e,this._inputLowerCase=e.toLowerCase(),this._inputArray=it(this._inputLowerCase),this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}measure(e,t){if(this._input===e)return 0;const n=e.toLowerCase();if(this._inputLowerCase===n)return 1;let r=it(n),i=this._inputArray;if(r.length<i.length){const e=r;r=i,i=e}const o=r.length,s=i.length;if(o-s>t)return;const a=this._rows;for(let e=0;e<=s;e++)a[0][e]=e;for(let e=1;e<=o;e++){const n=a[(e-1)%3],o=a[e%3];let c=o[0]=e;for(let t=1;t<=s;t++){const s=r[e-1]===i[t-1]?0:1;let u=Math.min(n[t]+1,o[t-1]+1,n[t-1]+s);if(e>1&&t>1&&r[e-1]===i[t-2]&&r[e-2]===i[t-1]){const n=a[(e-2)%3][t-2];u=Math.min(u,n+1)}u<c&&(c=u),o[t]=u}if(c>t)return}const c=a[o%3][s];return c<=t?c:void 0}}function it(e){const t=e.length,n=new Array(t);for(let r=0;r<t;++r)n[r]=e.charCodeAt(r);return n}function ot(e){if(null==e)return Object.create(null);if(null===Object.getPrototypeOf(e))return e;const t=Object.create(null);for(const[n,r]of Object.entries(e))t[n]=r;for(const n of Object.getOwnPropertySymbols(e))t[n]=e[n];return t}const st=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function at(e){return ct[e.charCodeAt(0)]}const ct=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],ut=Object.freeze({});function lt(e,t,n=u){const r=new Map;for(const e of Object.values(ie))r.set(e,dt(t,e));let i,o,s,a=Array.isArray(e),c=[e],l=-1,d=[],f=e;const h=[],m=[];do{l++;const e=l===c.length,u=e&&0!==d.length;if(e){if(o=0===m.length?void 0:h[h.length-1],f=s,s=m.pop(),u)if(a){f=f.slice();let e=0;for(const[t,n]of d){const r=t-e;null===n?(f.splice(r,1),e++):f[r]=n}}else{f=Object.defineProperties({},Object.getOwnPropertyDescriptors(f));for(const[e,t]of d)f[e]=t}l=i.index,c=i.keys,d=i.edits,a=i.inArray,i=i.prev}else if(null!=s){if(o=a?l:c[l],f=s[o],null==f)continue;h.push(o)}let v;if(!Array.isArray(f)){p(f)||xe(0,`Invalid AST Node: ${Ge(f)}.`);const n=e?r.get(f.kind)?.leave:r.get(f.kind)?.enter;if(v=n?.call(t,f,o,s,h,m),v===ut)break;if(!1===v){if(!e){h.pop();continue}}else if(void 0!==v&&(d.push([o,v]),!e)){if(!p(v)){h.pop();continue}f=v}}void 0===v&&u&&d.push([o,f]),e?h.pop():(i={inArray:a,index:l,keys:c,edits:d,prev:i},a=Array.isArray(f),c=a?f:n[f.kind]??[],l=-1,d=[],null!=s&&m.push(s),s=f)}while(void 0!==i);return 0!==d.length?d.at(-1)[1]:e}function pt(e){const t=new Array(e.length).fill(null),n=Object.create(null);for(const r of Object.values(ie)){let i=!1;const o=new Array(e.length).fill(void 0),s=new Array(e.length).fill(void 0);for(let t=0;t<e.length;++t){const{enter:n,leave:a}=dt(e[t],r);i||=null!=n||null!=a,o[t]=n,s[t]=a}if(!i)continue;const a={enter(...n){const r=n[0];for(let i=0;i<e.length;i++)if(null===t[i]){const s=o[i]?.apply(e[i],n);if(!1===s)t[i]=r;else if(s===ut)t[i]=ut;else if(void 0!==s)return s}},leave(...n){const r=n[0];for(let i=0;i<e.length;i++)if(null===t[i]){const r=s[i]?.apply(e[i],n);if(r===ut)t[i]=ut;else if(void 0!==r&&!1!==r)return r}else t[i]===r&&(t[i]=null)}};n[r]=a}return n}function dt(e,t){const n=e[t];return"object"==typeof n?n:"function"==typeof n?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function ft(e){return lt(e,ht)}const ht={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>mt(e.definitions,"\n\n")},OperationDefinition:{leave(e){const t=yt("(",mt(e.variableDefinitions,", "),")"),n=mt([e.operation,mt([e.name,t]),mt(e.directives," ")]," ");return("query"===n?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:r})=>e+": "+t+yt(" = ",n)+yt(" ",mt(r," "))},SelectionSet:{leave:({selections:e})=>vt(e)},Field:{leave({alias:e,name:t,arguments:n,directives:r,selectionSet:i}){const o=mt([yt("",e,": "),t],"");return mt([Et(o,n),yt(" ",mt(r," ")),yt(" ",i)])}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentArgument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,arguments:t,directives:n})=>Et("..."+e,t)+yt(" ",mt(n," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>mt(["...",yt("on ",e),mt(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:r,selectionSet:i})=>`fragment ${e}${yt("(",mt(n,", "),")")} on ${t} ${yt("",mt(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>!0===t?function(e){const t=e.replaceAll('"""','\\"""'),n=t.split(/\r\n|[\n\r]/g),r=1===n.length,i=n.length>1&&n.slice(1).every((e=>0===e.length||oe(e.charCodeAt(0)))),o=t.endsWith('\\"""'),s=e.endsWith('"')&&!o,a=e.endsWith("\\"),c=s||a,u=!r||e.length>70||c||i||o;let l="";const p=r&&oe(e.charCodeAt(0));return(u&&!p||i)&&(l+="\n"),l+=t,(u||c)&&(l+="\n"),'"""'+l+'"""'}(e):`"${e.replace(st,at)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>{const t="["+mt(e,", ")+"]";return t.length>80?"[\n"+gt(mt(e,"\n"))+"\n]":t}},ObjectValue:{leave:({fields:e})=>{const t="{ "+mt(e,", ")+" }";return t.length>80?vt(e):t}},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+yt("(",mt(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>yt("",e,"\n")+mt(["schema",mt(t," "),vt(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>yt("",e,"\n")+mt(["scalar",t,mt(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>yt("",e,"\n")+mt(["type",t,yt("implements ",mt(n," & ")),mt(r," "),vt(i)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:r,directives:i})=>yt("",e,"\n")+t+(Tt(n)?yt("(\n",gt(mt(n,"\n")),"\n)"):yt("(",mt(n,", "),")"))+": "+r+yt(" ",mt(i," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:r,directives:i})=>yt("",e,"\n")+mt([t+": "+n,yt("= ",r),mt(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>yt("",e,"\n")+mt(["interface",t,yt("implements ",mt(n," & ")),mt(r," "),vt(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:r})=>yt("",e,"\n")+mt(["union",t,mt(n," "),yt("= ",mt(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:r})=>yt("",e,"\n")+mt(["enum",t,mt(n," "),vt(r)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>yt("",e,"\n")+mt([t,mt(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:r})=>yt("",e,"\n")+mt(["input",t,mt(n," "),vt(r)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:r,locations:i})=>yt("",e,"\n")+"directive @"+t+(Tt(n)?yt("(\n",gt(mt(n,"\n")),"\n)"):yt("(",mt(n,", "),")"))+(r?" repeatable":"")+" on "+mt(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>mt(["extend schema",mt(e," "),vt(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>mt(["extend scalar",e,mt(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>mt(["extend type",e,yt("implements ",mt(t," & ")),mt(n," "),vt(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>mt(["extend interface",e,yt("implements ",mt(t," & ")),mt(n," "),vt(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>mt(["extend union",e,mt(t," "),yt("= ",mt(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>mt(["extend enum",e,mt(t," "),vt(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>mt(["extend input",e,mt(t," "),vt(n)]," ")}};function mt(e,t=""){return e?.filter((e=>e)).join(t)??""}function vt(e){return yt("{\n",gt(mt(e,"\n")),"\n}")}function yt(e,t,n=""){return null!=t&&""!==t?e+t+n:""}function gt(e){return yt("  ",e.replaceAll("\n","\n  "))}function Tt(e){return e?.some((e=>e.includes("\n")))??!1}function Et(e,t){let n=e+yt("(",mt(t,", "),")");return n.length>80&&(n=e+yt("(\n",gt(mt(t,"\n")),"\n)")),n}function bt(e,t){switch(e.kind){case A:return null;case I:return parseInt(e.value,10);case O:return parseFloat(e.value);case k:case D:case _:return e.value;case x:return e.values.map((e=>bt(e,t)));case $:return Xe(e.fields,(e=>e.name.value),(e=>bt(e.value,t)));case w:return t?.[e.name.value]}}function Nt(e){if(0===e.length)throw new GraphQLError("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!ue(e.charCodeAt(t)))throw new GraphQLError(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!ce(e.charCodeAt(0)))throw new GraphQLError(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function St(e){return Lt(e)||wt(e)||Ot(e)||kt(e)||_t(e)||At(e)||Dt(e)||xt(e)}function Lt(e){return Ce(e,GraphQLScalarType)}function wt(e){return Ce(e,GraphQLObjectType)}function It(e){return Ce(e,GraphQLArgument)}function Ot(e){return Ce(e,GraphQLInterfaceType)}function kt(e){return Ce(e,GraphQLUnionType)}function _t(e){return Ce(e,GraphQLEnumType)}function At(e){return Ce(e,GraphQLInputObjectType)}function Dt(e){return Ce(e,GraphQLList)}function xt(e){return Ce(e,GraphQLNonNull)}function $t(e){return Lt(e)||_t(e)||At(e)||Vt(e)&&$t(e.ofType)}function Ft(e){return Lt(e)||wt(e)||Ot(e)||kt(e)||_t(e)||Vt(e)&&Ft(e.ofType)}function Gt(e){return Lt(e)||_t(e)}function Qt(e){if(!Gt(e))throw new Error(`Expected ${Ge(e)} to be a GraphQL leaf type.`);return e}function Ct(e){return wt(e)||Ot(e)||kt(e)}function Rt(e){return Ot(e)||kt(e)}class GraphQLList{constructor(e){this.ofType=e}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class GraphQLNonNull{constructor(e){this.ofType=e}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Vt(e){return Dt(e)||xt(e)}function jt(e){return St(e)&&!xt(e)}function Mt(e){return Lt(e)||wt(e)||Ot(e)||kt(e)||_t(e)||At(e)}function Ut(e){if(e){let t=e;for(;Vt(t);)t=t.ofType;return t}}function Pt(e){return"function"==typeof e?e():e}function Bt(e){return"function"==typeof e?e():e}class GraphQLScalarType{constructor(e){this.name=Nt(e.name),this.description=e.description,this.specifiedByURL=e.specifiedByURL,this.serialize=e.serialize??e.coerceOutputValue??We,this.parseValue=e.parseValue??e.coerceInputValue??We,this.parseLiteral=e.parseLiteral??((e,t)=>this.coerceInputValue(bt(e,t))),this.coerceOutputValue=e.coerceOutputValue??this.serialize,this.coerceInputValue=e.coerceInputValue??this.parseValue,this.coerceInputLiteral=e.coerceInputLiteral,this.valueToLiteral=e.valueToLiteral,this.extensions=ot(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],e.parseLiteral&&("function"==typeof e.parseValue&&"function"==typeof e.parseLiteral||xe(0,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`)),e.coerceInputLiteral&&("function"==typeof e.coerceInputValue&&"function"==typeof e.coerceInputLiteral||xe(0,`${this.name} must provide both "coerceInputValue" and "coerceInputLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,coerceOutputValue:this.coerceOutputValue,coerceInputValue:this.coerceInputValue,coerceInputLiteral:this.coerceInputLiteral,valueToLiteral:this.valueToLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class GraphQLObjectType{constructor(e){this.name=Nt(e.name),this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=ot(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._fields=qt.bind(void 0,this,e.fields),this._interfaces=Jt.bind(void 0,e.interfaces)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ke(this.getFields(),(e=>e.toConfig())),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Jt(e){return Pt(e??[])}function qt(e,t){return Ke(Bt(t),((t,n)=>new GraphQLField(e,n,t)))}class GraphQLField{constructor(e,t,n){this.parentType=e,this.name=Nt(t),this.description=n.description,this.type=n.type;const r=n.args;this.args=r?Object.entries(r).map((([e,t])=>new GraphQLArgument(this,e,t))):[],this.resolve=n.resolve,this.subscribe=n.subscribe,this.deprecationReason=n.deprecationReason,this.extensions=ot(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLField"}toConfig(){return{description:this.description,type:this.type,args:Xe(this.args,(e=>e.name),(e=>e.toConfig())),resolve:this.resolve,subscribe:this.subscribe,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parentType??"<meta>"}.${this.name}`}toJSON(){return this.toString()}}class GraphQLArgument{constructor(e,t,n){this.parent=e,this.name=Nt(t),this.description=n.description,this.type=n.type,this.defaultValue=n.defaultValue,this.default=n.default,this.deprecationReason=n.deprecationReason,this.extensions=ot(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLArgument"}toConfig(){return{description:this.description,type:this.type,defaultValue:this.defaultValue,default:this.default,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parent}(${this.name}:)`}toJSON(){return this.toString()}}function Kt(e){return xt(e.type)&&void 0===e.default&&void 0===e.defaultValue}class GraphQLInterfaceType{constructor(e){this.name=Nt(e.name),this.description=e.description,this.resolveType=e.resolveType,this.extensions=ot(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._fields=qt.bind(void 0,this,e.fields),this._interfaces=Jt.bind(void 0,e.interfaces)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ke(this.getFields(),(e=>e.toConfig())),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class GraphQLUnionType{constructor(e){this.name=Nt(e.name),this.description=e.description,this.resolveType=e.resolveType,this.extensions=ot(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._types=zt.bind(void 0,e.types)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return"function"==typeof this._types&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function zt(e){return Pt(e)}class GraphQLEnumType{constructor(e){this.name=Nt(e.name),this.description=e.description,this.extensions=ot(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._values="function"==typeof e.values?e.values:Object.entries(e.values).map((([e,t])=>new GraphQLEnumValue(this,e,t))),this._valueLookup=null,this._nameLookup=null}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return"function"==typeof this._values&&(this._values=Object.entries(this._values()).map((([e,t])=>new GraphQLEnumValue(this,e,t)))),this._values}getValue(e){return null===this._nameLookup&&(this._nameLookup=qe(this.getValues(),(e=>e.name))),this._nameLookup[e]}serialize(e){return this.coerceOutputValue(e)}coerceOutputValue(e){null===this._valueLookup&&(this._valueLookup=new Map(this.getValues().map((e=>[e.value,e]))));const t=this._valueLookup.get(e);if(void 0===t)throw new GraphQLError(`Enum "${this.name}" cannot represent value: ${Ge(e)}`);return t.name}parseValue(e,t){return this.coerceInputValue(e,t)}coerceInputValue(e,t){if("string"!=typeof e){const n=Ge(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-string value: ${n}.`+(t?"":Yt(this,n)))}const n=this.getValue(e);if(null==n)throw new GraphQLError(`Value "${e}" does not exist in "${this.name}" enum.`+(t?"":Yt(this,e)));return n.value}parseLiteral(e,t,n){return this.coerceInputLiteral(e,n)}coerceInputLiteral(e,t){if(e.kind!==D){const n=ft(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-enum value: ${n}.`+(t?"":Yt(this,n)),{nodes:e})}const n=this.getValue(e.value);if(null==n){const n=ft(e);throw new GraphQLError(`Value "${n}" does not exist in "${this.name}" enum.`+(t?"":Yt(this,n)),{nodes:e})}return n.value}valueToLiteral(e){if("string"==typeof e&&this.getValue(e))return{kind:D,value:e}}toConfig(){return{name:this.name,description:this.description,values:Xe(this.getValues(),(e=>e.name),(e=>e.toConfig())),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Yt(e,t){return He("the enum value",rt(t,e.getValues().map((e=>e.name))))}class GraphQLEnumValue{constructor(e,t,n){this.parentEnum=e,this.name=function(e){if("true"===e||"false"===e||"null"===e)throw new GraphQLError(`Enum values cannot be named: ${e}`);return Nt(e)}(t),this.description=n.description,this.value=void 0!==n.value?n.value:t,this.deprecationReason=n.deprecationReason,this.extensions=ot(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLEnumValue"}toConfig(){return{description:this.description,value:this.value,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parentEnum.name}.${this.name}`}toJSON(){return this.toString()}}class GraphQLInputObjectType{constructor(e){this.name=Nt(e.name),this.description=e.description,this.extensions=ot(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this.isOneOf=e.isOneOf??!1,this._fields=Ht.bind(void 0,this,e.fields)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}toConfig(){return{name:this.name,description:this.description,fields:Ke(this.getFields(),(e=>e.toConfig())),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,isOneOf:this.isOneOf}}toString(){return this.name}toJSON(){return this.toString()}}function Ht(e,t){return Ke(Bt(t),((t,n)=>new GraphQLInputField(e,n,t)))}class GraphQLInputField{constructor(e,t,n){!("resolve"in n)||xe(0,`${e}.${t} field has a resolve property, but Input Types cannot define resolvers.`),this.parentType=e,this.name=Nt(t),this.description=n.description,this.type=n.type,this.defaultValue=n.defaultValue,this.default=n.default,this.deprecationReason=n.deprecationReason,this.extensions=ot(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLInputField"}toConfig(){return{description:this.description,type:this.type,defaultValue:this.defaultValue,default:this.default,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parentType}.${this.name}`}toJSON(){return this.toString()}}function Wt(e){return xt(e.type)&&void 0===e.defaultValue&&void 0===e.default}function Xt(e,t){return e===t||(xt(e)&&xt(t)||!(!Dt(e)||!Dt(t)))&&Xt(e.ofType,t.ofType)}function Zt(e,t,n){return t===n||(xt(n)?!!xt(t)&&Zt(e,t.ofType,n.ofType):xt(t)?Zt(e,t.ofType,n):Dt(n)?!!Dt(t)&&Zt(e,t.ofType,n.ofType):!Dt(t)&&(Rt(n)&&(Ot(t)||wt(t))&&e.isSubType(n,t)))}function en(e,t,n){return t===n||(Rt(t)?Rt(n)?e.getPossibleTypes(t).some((t=>e.isSubType(n,t))):e.isSubType(t,n):!!Rt(n)&&e.isSubType(n,t))}function tn(e,t,n){return{prev:e,key:t,typename:n}}function nn(e){const t=[];let n=e;for(;n;)t.push(n.key),n=n.prev;return t.reverse()}function rn(e,n){if(xt(n)){if(null==e)return;return rn(e,n.ofType)}if(null==e)return{kind:A};if(Dt(n)){if(!Je(e))return rn(e,n.ofType);const t=[];for(const r of e){const e=rn(r,n.ofType);if(!e)return;t.push(e)}return{kind:x,values:t}}if(At(n)){if(!t(e))return;const r=[],i=n.getFields();if(Object.keys(e).some((e=>!Object.hasOwn(i,e))))return;for(const t of Object.values(n.getFields())){if(void 0===e[t.name]){if(Wt(t))return}else{const n=rn(e[t.name],t.type);if(!n)return;r.push({kind:F,name:{kind:h,value:t.name},value:n})}}return{kind:$,fields:r}}const r=Qt(n);if(r.valueToLiteral)try{return r.valueToLiteral(e)}catch(e){return}return on(e)}function on(e){if(null==e)return{kind:A};switch(typeof e){case"boolean":return{kind:_,value:e};case"string":return{kind:k,value:e,block:!1};case"number":{if(!Number.isFinite(e))return{kind:A};const t=String(e);return/^-?(?:0|[1-9][0-9]*)$/.test(t)?{kind:I,value:t}:{kind:O,value:t}}case"object":{if(Je(e))return{kind:x,values:Array.from(e,on)};const t=e,n=[];for(const e of Object.keys(t)){const r=t[e];void 0!==r&&n.push({kind:F,name:{kind:h,value:e},value:on(r)})}return{kind:$,fields:n}}}throw new TypeError(`Cannot convert value to AST: ${Ge(e)}.`)}function sn(e,t,n){switch(e.kind){case w:{const r=e.name.value,i=n?.sources[r]?n:t,o=i?.sources[r];if(null==o)return{kind:A};if(void 0===o.value){const e=o.signature.default;if(void 0!==e)return e.literal}return rn(o.value,o.signature.type)}case $:{const r=[];for(const i of e.fields){if(i.value.kind===w){const e=n?.sources[i.value.name.value]??t?.sources[i.value.name.value];if(void 0===e?.value&&void 0===e?.signature.default)continue}const e=sn(i.value,t,n);r.push({...i,value:e})}return{...e,fields:r}}case x:{const r=[];for(const i of e.values){const e=sn(i,t,n);r.push(e)}return{...e,values:r}}default:return e}}function an(e,t,n,r){return cn(e,t,n,r,void 0)}function cn(e,n,r,i,o){if(xt(n))return void 0===e?void un(r,`Expected a value of non-null type "${n}" to be provided.`,o):null===e?void un(r,`Expected value of non-null type "${n}" not to be null.`,o):cn(e,n.ofType,r,i,o);if(null!=e)if(Dt(n))if(Je(e)){let t=0;for(const s of e)cn(s,n.ofType,r,i,tn(o,t++,void 0))}else cn(e,n.ofType,r,i,o);else if(At(n)){if(!t(e))return void un(r,`Expected value of type "${n}" to be an object, found: ${Ge(e)}.`,o);const s=n.getFields();for(const t of Object.values(s)){const s=e[t.name];void 0===s?Wt(t)&&un(r,`Expected value of type "${n}" to include required field "${t.name}", found: ${Ge(e)}.`,o):cn(s,t.type,r,i,tn(o,t.name,n.name))}const a=Object.keys(e);for(const t of a)if(!Object.hasOwn(s,t)){const i=He(rt(t,Object.keys(s)));un(r,`Expected value of type "${n}" not to include unknown field "${t}"${i?`.${i} Found`:", found"}: ${Ge(e)}.`,o)}if(n.isOneOf){1!==a.length&&un(r,`Exactly one key must be specified for OneOf type "${n}".`,o);const t=a[0];null===e[t]&&un(r,`Field "${t}" for OneOf type "${n}" must be non-null.`,o)}}else{let t,s;Qt(n);try{t=n.coerceInputValue(e,i)}catch(e){if(e instanceof GraphQLError)return void r(e,nn(o));s=e}void 0===t&&un(r,`Expected value of type "${n}"${null!=s?`, but encountered error "${null!=s.message&&""!==s.message?s.message:s}"; found`:", found"}: ${Ge(e)}.`,o,s)}}function un(e,t,n,r){e(new GraphQLError(t,{originalError:r}),nn(n))}function ln(e,t,n,r,i,o){return pn({static:!r&&!i,onError:n,variables:r,fragmentVariableValues:i},e,t,o,void 0)}function pn(e,t,n,r,i){if(t.kind!==w){if(xt(n))return t.kind===A?void fn(e.onError,`Expected value of non-null type "${n}" not to be null.`,t,i):pn(e,t,n.ofType,r,i);if(t.kind!==A)if(Dt(n))if(t.kind!==x)pn(e,t,n.ofType,r,i);else{let o=0;for(const s of t.values)pn(e,s,n.ofType,r,tn(i,o++,void 0))}else if(At(n)){if(t.kind!==$)return void fn(e.onError,`Expected value of type "${n}" to be an object, found: ${ft(t)}.`,t,i);const o=n.getFields(),s=qe(t.fields,(e=>e.name.value));for(const a of Object.values(o)){const o=s[a.name];if(void 0===o)Wt(a)&&fn(e.onError,`Expected value of type "${n}" to include required field "${a.name}", found: ${ft(t)}.`,t,i);else{const s=o.value;if(s.kind===w&&!e.static){const r=dn(e,s),o=s.name.value,c=r?.coerced[o];if(n.isOneOf)void 0===c?fn(e.onError,`Expected variable "$${o}" provided to field "${a.name}" for OneOf Input Object type "${n}" to provide a runtime value.`,t,i):null===c&&fn(e.onError,`Expected variable "$${o}" provided to field "${a.name}" for OneOf Input Object type "${n}" not to be null.`,t,i);else if(void 0===c&&!Wt(a))continue}pn(e,s,a.type,r,tn(i,a.name,n.name))}}const a=t.fields;for(const s of a){const a=s.name.value;if(!Object.hasOwn(o,a)){const c=r?"":He(rt(a,Object.keys(o)));fn(e.onError,`Expected value of type "${n}" not to include unknown field "${a}"${c?`.${c} Found`:", found"}: ${ft(t)}.`,s,i)}}if(n.isOneOf){if(1!==a.length)return void fn(e.onError,`OneOf Input Object "${n}" must specify exactly one key.`,t,i);if(a[0].value.kind===A){const r=a[0].name.value;fn(e.onError,`Field "${n}.${r}" used for OneOf Input Object must be non-null.`,t,tn(i,r,void 0))}}}else{let o,s;Qt(n);try{o=n.coerceInputLiteral?n.coerceInputLiteral(sn(t),r):n.parseLiteral(t,void 0,r)}catch(t){if(t instanceof GraphQLError)return void e.onError(t,nn(i));s=t}void 0===o&&fn(e.onError,`Expected value of type "${n}"${null!=s?`, but encountered error "${null!=s.message&&""!==s.message?s.message:s}"; found`:", found"}: ${ft(t)}.`,t,i,s)}}else{if(e.static)return;const r=dn(e,t),o=r?.coerced[t.name.value];xt(n)&&(void 0===o?fn(e.onError,`Expected variable "$${t.name.value}" provided to type "${n}" to provide a runtime value.`,t,i):null===o&&fn(e.onError,`Expected variable "$${t.name.value}" provided to non-null type "${n}" not to be null.`,t,i))}}function dn(e,t){const n=t.name.value,{fragmentVariableValues:r,variables:i}=e;return r?.sources[n]?r:i}function fn(e,t,n,r,i){e(new GraphQLError(t,{nodes:n,originalError:i}),nn(r))}const hn=2147483647,mn=-2147483648,vn=new GraphQLScalarType({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",coerceOutputValue(e){const t=Sn(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isInteger(n))throw new GraphQLError(`Int cannot represent non-integer value: ${Ge(t)}`);if(n>hn||n<mn)throw new GraphQLError("Int cannot represent non 32-bit signed integer value: "+Ge(t));return n},coerceInputValue(e){if("number"!=typeof e||!Number.isInteger(e))throw new GraphQLError(`Int cannot represent non-integer value: ${Ge(e)}`);if(e>hn||e<mn)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},coerceInputLiteral(e){if(e.kind!==I)throw new GraphQLError(`Int cannot represent non-integer value: ${ft(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>hn||t<mn)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t},valueToLiteral(e){if("number"==typeof e&&Number.isInteger(e)&&e<=hn&&e>=mn)return{kind:I,value:String(e)}}}),yn=new GraphQLScalarType({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",coerceOutputValue(e){const t=Sn(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isFinite(n))throw new GraphQLError(`Float cannot represent non numeric value: ${Ge(t)}`);return n},coerceInputValue(e){if("number"!=typeof e||!Number.isFinite(e))throw new GraphQLError(`Float cannot represent non numeric value: ${Ge(e)}`);return e},coerceInputLiteral(e){if(e.kind!==O&&e.kind!==I)throw new GraphQLError(`Float cannot represent non numeric value: ${ft(e)}`,{nodes:e});return parseFloat(e.value)},valueToLiteral(e){const t=on(e);if(t.kind===O||t.kind===I)return t}}),gn=new GraphQLScalarType({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",coerceOutputValue(e){const t=Sn(e);if("string"==typeof t)return t;if("boolean"==typeof t)return t?"true":"false";if("number"==typeof t&&Number.isFinite(t))return t.toString();throw new GraphQLError(`String cannot represent value: ${Ge(e)}`)},coerceInputValue(e){if("string"!=typeof e)throw new GraphQLError(`String cannot represent a non string value: ${Ge(e)}`);return e},coerceInputLiteral(e){if(e.kind!==k)throw new GraphQLError(`String cannot represent a non string value: ${ft(e)}`,{nodes:e});return e.value},valueToLiteral(e){const t=on(e);if(t.kind===k)return t}}),Tn=new GraphQLScalarType({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",coerceOutputValue(e){const t=Sn(e);if("boolean"==typeof t)return t;if(Number.isFinite(t))return 0!==t;throw new GraphQLError(`Boolean cannot represent a non boolean value: ${Ge(t)}`)},coerceInputValue(e){if("boolean"!=typeof e)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${Ge(e)}`);return e},coerceInputLiteral(e){if(e.kind!==_)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${ft(e)}`,{nodes:e});return e.value},valueToLiteral(e){const t=on(e);if(t.kind===_)return t}}),En=new GraphQLScalarType({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',coerceOutputValue(e){const t=Sn(e);if("string"==typeof t)return t;if(Number.isInteger(t))return String(t);throw new GraphQLError(`ID cannot represent value: ${Ge(e)}`)},coerceInputValue(e){if("string"==typeof e)return e;if("number"==typeof e&&Number.isInteger(e))return e.toString();throw new GraphQLError(`ID cannot represent value: ${Ge(e)}`)},coerceInputLiteral(e){if(e.kind!==k&&e.kind!==I)throw new GraphQLError("ID cannot represent a non-string and non-integer value: "+ft(e),{nodes:e});return e.value},valueToLiteral(e){const t=Number.isInteger(e)?String(e):e;if("string"==typeof t)return/^-?(?:0|[1-9][0-9]*)$/.test(t)?{kind:I,value:t}:{kind:k,value:t,block:!1}}}),bn=Object.freeze([gn,vn,yn,Tn,En]);function Nn(e){return bn.some((({name:t})=>e.name===t))}function Sn(e){if(t(e)){if("function"==typeof e.valueOf){const n=e.valueOf();if(!t(n))return n}if("function"==typeof e.toJSON)return e.toJSON()}return e}function Ln(e){return Ce(e,GraphQLDirective)}class GraphQLDirective{constructor(e){this.name=Nt(e.name),this.description=e.description,this.locations=e.locations,this.isRepeatable=e.isRepeatable??!1,this.extensions=ot(e.extensions),this.astNode=e.astNode,Array.isArray(e.locations)||xe(0,`@${this.name} locations must be an Array.`);const n=e.args??{};t(n)&&!Array.isArray(n)||xe(0,`@${this.name} args must be an object with argument names as keys.`),this.args=Object.entries(n).map((([e,t])=>new GraphQLArgument(this,e,t)))}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:Xe(this.args,(e=>e.name),(e=>e.toConfig())),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const wn=new GraphQLDirective({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[f.FIELD,f.FRAGMENT_SPREAD,f.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(Tn),description:"Included when true."}}}),In=new GraphQLDirective({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[f.FIELD,f.FRAGMENT_SPREAD,f.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(Tn),description:"Skipped when true."}}}),On=new GraphQLDirective({name:"defer",description:"Directs the executor to defer this fragment when the `if` argument is true or undefined.",locations:[f.FRAGMENT_SPREAD,f.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(Tn),description:"Deferred when true or undefined.",default:{value:!0}},label:{type:gn,description:"Unique name"}}}),kn=new GraphQLDirective({name:"stream",description:"Directs the executor to stream plural fields when the `if` argument is true or undefined.",locations:[f.FIELD],args:{initialCount:{default:{value:0},type:new GraphQLNonNull(vn),description:"Number of items to return immediately"},if:{type:new GraphQLNonNull(Tn),description:"Stream when true or undefined.",default:{value:!0}},label:{type:gn,description:"Unique name"}}}),_n="No longer supported",An=new GraphQLDirective({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[f.FIELD_DEFINITION,f.ARGUMENT_DEFINITION,f.INPUT_FIELD_DEFINITION,f.ENUM_VALUE],args:{reason:{type:new GraphQLNonNull(gn),description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",default:{value:_n}}}}),Dn=new GraphQLDirective({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[f.SCALAR],args:{url:{type:new GraphQLNonNull(gn),description:"The URL that specifies the behavior of this scalar."}}}),xn=new GraphQLDirective({name:"oneOf",description:"Indicates exactly one field must be supplied and this field must not be `null`.",locations:[f.INPUT_OBJECT],args:{}}),$n=Object.freeze([wn,In,An,Dn,xn]);function Fn(e){return $n.some((({name:t})=>t===e.name))}function Gn(e,r){if(xt(r)){const t=Gn(e,r.ofType);return t?.kind===A?null:t}if(null===e)return{kind:A};if(void 0===e)return null;if(Dt(r)){const t=r.ofType;if(Je(e)){const n=[];for(const r of e){const e=Gn(r,t);null!=e&&n.push(e)}return{kind:x,values:n}}return Gn(e,t)}if(At(r)){if(!t(e))return null;const n=[];for(const t of Object.values(r.getFields())){const r=Gn(e[t.name],t.type);r&&n.push({kind:F,name:{kind:h,value:t.name},value:r})}return{kind:$,fields:n}}if(Gt(r)){const t=r.coerceOutputValue(e);if(null==t)return null;if("boolean"==typeof t)return{kind:_,value:t};if("number"==typeof t&&Number.isFinite(t)){const e=String(t);return Qn.test(e)?{kind:I,value:e}:{kind:O,value:e}}if("string"==typeof t)return _t(r)?{kind:D,value:t}:r===En&&Qn.test(t)?{kind:I,value:t}:{kind:k,value:t};throw new TypeError(`Cannot convert value to AST: ${Ge(t)}.`)}n(0,"Unexpected input type: "+Ge(r))}const Qn=/^-?(?:0|[1-9][0-9]*)$/;function Cn(e){const t=e.type,r=e.default;if(r){const e=r.literal??rn(r.value,t);return null!=e||n(0,"Invalid default value"),e}const i=e.defaultValue;if(void 0!==i){const e=Gn(i,t);return null!=e||n(0,"Invalid default value"),e}}const Rn=new GraphQLObjectType({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:gn,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Mn))),resolve:e=>Object.values(e.getTypeMap())},queryType:{description:"The type that query operations will be rooted at.",type:new GraphQLNonNull(Mn),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:Mn,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:Mn,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Vn))),resolve:e=>e.getDirectives()}})}),Vn=new GraphQLObjectType({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:()=>({name:{type:new GraphQLNonNull(gn),resolve:e=>e.name},description:{type:gn,resolve:e=>e.description},isRepeatable:{type:new GraphQLNonNull(Tn),resolve:e=>e.isRepeatable},locations:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(jn))),resolve:e=>e.locations},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Pn))),args:{includeDeprecated:{type:Tn,default:{value:!1}}},resolve:(e,{includeDeprecated:t})=>!0===t?e.args:e.args.filter((e=>null==e.deprecationReason))}})}),jn=new GraphQLEnumType({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:f.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:f.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:f.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:f.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:f.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:f.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:f.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:f.VARIABLE_DEFINITION,description:"Location adjacent to an operation variable definition."},FRAGMENT_VARIABLE_DEFINITION:{value:f.FRAGMENT_VARIABLE_DEFINITION,description:"Location adjacent to a fragment variable definition."},SCHEMA:{value:f.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:f.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:f.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:f.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:f.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:f.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:f.UNION,description:"Location adjacent to a union definition."},ENUM:{value:f.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:f.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:f.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:f.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),Mn=new GraphQLObjectType({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new GraphQLNonNull(qn),resolve:e=>Lt(e)?Jn.SCALAR:wt(e)?Jn.OBJECT:Ot(e)?Jn.INTERFACE:kt(e)?Jn.UNION:_t(e)?Jn.ENUM:At(e)?Jn.INPUT_OBJECT:Dt(e)?Jn.LIST:xt(e)?Jn.NON_NULL:void n(0,`Unexpected type: "${Ge(e)}".`)},name:{type:gn,resolve:e=>"name"in e?e.name:void 0},description:{type:gn,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:gn,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new GraphQLList(new GraphQLNonNull(Un)),args:{includeDeprecated:{type:Tn,default:{value:!1}}},resolve(e,{includeDeprecated:t}){if(wt(e)||Ot(e)){const n=Object.values(e.getFields());return!0===t?n:n.filter((e=>null==e.deprecationReason))}}},interfaces:{type:new GraphQLList(new GraphQLNonNull(Mn)),resolve(e){if(wt(e)||Ot(e))return e.getInterfaces()}},possibleTypes:{type:new GraphQLList(new GraphQLNonNull(Mn)),resolve(e,t,n,{schema:r}){if(Rt(e))return r.getPossibleTypes(e)}},enumValues:{type:new GraphQLList(new GraphQLNonNull(Bn)),args:{includeDeprecated:{type:Tn,default:{value:!1}}},resolve(e,{includeDeprecated:t}){if(_t(e)){const n=e.getValues();return!0===t?n:n.filter((e=>null==e.deprecationReason))}}},inputFields:{type:new GraphQLList(new GraphQLNonNull(Pn)),args:{includeDeprecated:{type:Tn,default:{value:!1}}},resolve(e,{includeDeprecated:t}){if(At(e)){const n=Object.values(e.getFields());return!0===t?n:n.filter((e=>null==e.deprecationReason))}}},ofType:{type:Mn,resolve:e=>"ofType"in e?e.ofType:void 0},isOneOf:{type:Tn,resolve:e=>{if(At(e))return e.isOneOf}}})}),Un=new GraphQLObjectType({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new GraphQLNonNull(gn),resolve:e=>e.name},description:{type:gn,resolve:e=>e.description},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(Pn))),args:{includeDeprecated:{type:Tn,default:{value:!1}}},resolve:(e,{includeDeprecated:t})=>!0===t?e.args:e.args.filter((e=>null==e.deprecationReason))},type:{type:new GraphQLNonNull(Mn),resolve:e=>e.type},isDeprecated:{type:new GraphQLNonNull(Tn),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:gn,resolve:e=>e.deprecationReason}})}),Pn=new GraphQLObjectType({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new GraphQLNonNull(gn),resolve:e=>e.name},description:{type:gn,resolve:e=>e.description},type:{type:new GraphQLNonNull(Mn),resolve:e=>e.type},defaultValue:{type:gn,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const t=Cn(e);return t?ft(t):null}},isDeprecated:{type:new GraphQLNonNull(Tn),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:gn,resolve:e=>e.deprecationReason}})}),Bn=new GraphQLObjectType({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new GraphQLNonNull(gn),resolve:e=>e.name},description:{type:gn,resolve:e=>e.description},isDeprecated:{type:new GraphQLNonNull(Tn),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:gn,resolve:e=>e.deprecationReason}})}),Jn={SCALAR:"SCALAR",OBJECT:"OBJECT",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",INPUT_OBJECT:"INPUT_OBJECT",LIST:"LIST",NON_NULL:"NON_NULL"},qn=new GraphQLEnumType({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:Jn.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:Jn.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:Jn.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:Jn.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:Jn.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:Jn.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:Jn.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:Jn.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),Kn=new GraphQLField(void 0,"__schema",{type:new GraphQLNonNull(Rn),description:"Access the current type schema of this server.",resolve:(e,t,n,{schema:r})=>r}),zn=new GraphQLField(void 0,"__type",{type:Mn,description:"Request the type information of a single type.",args:{name:{type:new GraphQLNonNull(gn)}},resolve:(e,{name:t},n,{schema:r})=>r.getType(t)}),Yn=new GraphQLField(void 0,"__typename",{type:new GraphQLNonNull(gn),description:"The name of the current Object type at runtime.",resolve:(e,t,n,{parentType:r})=>r.name}),Hn=Object.freeze([Rn,Vn,jn,Mn,Un,Pn,Bn,qn]);function Wn(e){return Hn.some((({name:t})=>e.name===t))}function Xn(e){if(!function(e){return Ce(e,GraphQLSchema)}(e))throw new Error(`Expected ${Ge(e)} to be a GraphQL schema.`);return e}class GraphQLSchema{constructor(e){this.assumeValid=e.assumeValid??!1,this.__validationErrors=!0===e.assumeValid?[]:void 0,this.description=e.description,this.extensions=ot(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=e.directives??$n;const t=new Set(e.types);if(null!=e.types)for(const n of e.types)t.delete(n),Zn(n,t);null!=this._queryType&&Zn(this._queryType,t),null!=this._mutationType&&Zn(this._mutationType,t),null!=this._subscriptionType&&Zn(this._subscriptionType,t);for(const e of this._directives)if(Ln(e))for(const n of e.args)Zn(n.type,t);Zn(Rn,t),this._typeMap=Object.create(null),this._subTypeMap=new Map,this._implementationsMap=Object.create(null);for(const e of t){if(null==e)continue;const t=e.name;if(void 0!==this._typeMap[t])throw new Error(`Schema must contain uniquely named types but contains multiple types named "${t}".`);if(this._typeMap[t]=e,Ot(e)){for(const t of e.getInterfaces())if(Ot(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.interfaces.push(e)}}else if(wt(e))for(const t of e.getInterfaces())if(Ot(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.objects.push(e)}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(e){switch(e){case d.QUERY:return this.getQueryType();case d.MUTATION:return this.getMutationType();case d.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(e){return this.getTypeMap()[e]}getPossibleTypes(e){return kt(e)?e.getTypes():this.getImplementations(e).objects}getImplementations(e){return this._implementationsMap[e.name]??{objects:[],interfaces:[]}}isSubType(e,t){let n=this._subTypeMap.get(e);if(void 0===n){if(kt(e))n=new Set(e.getTypes());else{const t=this.getImplementations(e);n=new Set([...t.objects,...t.interfaces])}this._subTypeMap.set(e,n)}return n.has(t)}getDirectives(){return this._directives}getDirective(e){return this.getDirectives().find((t=>t.name===e))}getField(e,t){switch(t){case Kn.name:return this.getQueryType()===e?Kn:void 0;case zn.name:return this.getQueryType()===e?zn:void 0;case Yn.name:return Yn}if("getFields"in e)return e.getFields()[t]}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.assumeValid}}}function Zn(e,t){const n=Ut(e);if(!t.has(n))if(t.add(n),kt(n))for(const e of n.getTypes())Zn(e,t);else if(wt(n)||Ot(n)){for(const e of n.getInterfaces())Zn(e,t);for(const e of Object.values(n.getFields())){Zn(e.type,t);for(const n of e.args)Zn(n.type,t)}}else if(At(n))for(const e of Object.values(n.getFields()))Zn(e.type,t);return t}function er(e){if(Xn(e),e.__validationErrors)return e.__validationErrors;const n=new SchemaValidationContext(e);!function(e){const t=e.schema;null==t.getQueryType()&&e.reportError("Query root type must be provided.",t.astNode);const n=new AccumulatorMap;for(const r of Object.values(d)){const i=t.getRootType(r);if(null!=i)if(wt(i))n.add(i,r);else{const n=Ue(r),o=Ge(i);e.reportError(r===d.QUERY?`${n} root type must be Object type, it cannot be ${o}.`:`${n} root type must be Object type if provided, it cannot be ${o}.`,tr(t,r)??i.astNode)}}for(const[r,i]of n)if(i.length>1){const n=Pe(i);e.reportError(`All root types must be different, "${r}" type is used as ${n} root types.`,i.map((e=>tr(t,e))))}}(n),function(e){for(const t of e.schema.getDirectives())if(Ln(t)){ir(e,t),0===t.locations.length&&e.reportError(`Directive ${t} must include 1 or more locations.`,t.astNode);for(const n of t.args)ir(e,n),$t(n.type)||e.reportError(`The type of ${n} must be Input Type but got: ${Ge(n.type)}.`,n.astNode),Kt(n)&&null!=n.deprecationReason&&e.reportError(`Required argument ${n} cannot be deprecated.`,[mr(n.astNode),n.astNode?.type]),nr(e,n)}else e.reportError(`Expected directive but got: ${Ge(t)}.`,t?.astNode)}(n),function(e){const n=function(e){const t=new Set,n=[],r=Object.create(null);return i;function i(o){if(t.has(o))return;t.add(o),r[o.name]=n.length;const s=Object.values(o.getFields());for(const t of s)if(xt(t.type)&&At(t.type.ofType)){const s=t.type.ofType,a=r[s.name];if(n.push({fieldStr:`${o}.${t.name}`,astNode:t.astNode}),void 0===a)i(s);else{const t=n.slice(a),r=t.map((e=>e.fieldStr)).join(", ");e.reportError(`Invalid circular reference. The Input Object ${s} references itself ${t.length>1?"via the non-null fields:":"in the non-null field"} ${r}.`,t.map((e=>e.astNode)))}n.pop()}r[o.name]=void 0}}(e),r=function(e){const n=Object.create(null),r=[],i=Object.create(null);return function(e){return o(e,{})};function o(e,n){if(Je(n))for(const t of n)o(e,t);else if(t(n))for(const t of Object.values(e.getFields())){const r=Ut(t.type);At(r)&&(Object.hasOwn(n,t.name)?o(r,n[t.name]):a(t,r,`${e}.${t.name}`))}}function s(e,t){if(t.kind===x){for(const n of t.values)s(e,n);return}if(t.kind!==$)return;const n=qe(t.fields,(e=>e.name.value));for(const t of Object.values(e.getFields())){const r=Ut(t.type);At(r)&&(Object.hasOwn(n,t.name)?s(r,n[t.name].value):a(t,r,`${e}.${t.name}`))}}function a(t,a,c){const u=t.default;if(void 0===u)return;const l=i[c];void 0!==l&&l>0?e.reportError(`Invalid circular reference. The default value of Input Object field ${c} references itself${l<r.length?` via the default values of: ${r.slice(l).map((([e])=>e)).join(", ")}`:""}.`,r.slice(l-1).map((([,e])=>e))):void 0===n[c]&&(n[c]=!0,i[c]=r.push([c,t.astNode?.defaultValue]),u.literal?s(a,u.literal):o(a,u.value),r.pop(),i[c]=void 0)}}(e),i=e.schema.getTypeMap();for(const t of Object.values(i))Mt(t)?(Wn(t)||ir(e,t),wt(t)||Ot(t)?(or(e,t),sr(e,t)):kt(t)?ur(e,t):_t(t)?lr(e,t):At(t)&&(pr(e,t),n(t),r(t))):e.reportError(`Expected GraphQL named type but got: ${Ge(t)}.`,t.astNode)}(n);const r=n.getErrors();return e.__validationErrors=r,r}class SchemaValidationContext{constructor(e){this._errors=[],this.schema=e}reportError(e,t){const n=Array.isArray(t)?t.filter(Boolean):t;this._errors.push(new GraphQLError(e,{nodes:n}))}getErrors(){return this._errors}}function tr(e,t){return[e.astNode,...e.extensionASTNodes].flatMap((e=>e?.operationTypes??[])).find((e=>e.operation===t))?.type}function nr(e,t){const n=t.default;if(n)if(n.literal)ln(n.literal,t.type,((n,r)=>{e.reportError(`${t} has invalid default value${ze(r)}: ${n.message}`,n.nodes)}));else{const r=[];if(an(n.value,t.type,((e,t)=>{r.push([e,t])})),r.length>0)try{const r=rr(n.value,t.type),i=[];if(an(r,t.type,((e,t)=>{i.push([e,t])})),0===i.length)return void e.reportError(`${t} has invalid default value: ${Ge(n.value)}. Did you mean: ${Ge(r)}?`,t.astNode?.defaultValue)}catch(e){}for(const[n,i]of r)e.reportError(`${t} has invalid default value${ze(i)}: ${n.message}`,t.astNode?.defaultValue)}}function rr(e,r){if(xt(r))return rr(e,r.ofType);if(null===e)return null;if(Dt(r))return Je(e)?Array.from(e,(e=>rr(e,r.ofType))):[rr(e,r.ofType)];if(At(r)){t(e)||n();const i=r.getFields();return Ke(e,((e,t)=>(t in i||n(),rr(e,i[t].type))))}return Qt(r),r.coerceOutputValue(e)}function ir(e,t){t.name.startsWith("__")&&e.reportError(`Name "${t.name}" must not begin with "__", which is reserved by GraphQL introspection.`,t.astNode)}function or(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Type ${t} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const t of n){ir(e,t),Ft(t.type)||e.reportError(`The type of ${t} must be Output Type but got: ${Ge(t.type)}.`,t.astNode?.type);for(const n of t.args)ir(e,n),$t(n.type)||e.reportError(`The type of ${n} must be Input Type but got: ${Ge(n.type)}.`,n.astNode?.type),Kt(n)&&null!=n.deprecationReason&&e.reportError(`Required argument ${n} cannot be deprecated.`,[mr(n.astNode),n.astNode?.type]),nr(e,n)}}function sr(e,t){const n=new Set;for(const r of t.getInterfaces())Ot(r)?t!==r?n.has(r.name)?e.reportError(`Type ${t} can only implement ${r} once.`,fr(t,r)):(n.add(r.name),cr(e,t,r),ar(e,t,r)):e.reportError(`Type ${t} cannot implement itself because it would create a circular reference.`,fr(t,r)):e.reportError(`Type ${t} must only implement Interface types, it cannot implement ${Ge(r)}.`,fr(t,r))}function ar(e,t,n){const r=t.getFields();for(const i of Object.values(n.getFields())){const n=r[i.name];if(null!=n){Zt(e.schema,n.type,i.type)||e.reportError(`Interface field ${i} expects type ${i.type} but ${n} is type ${n.type}.`,[i.astNode?.type,n.astNode?.type]);for(const t of i.args){const r=n.args.find((e=>e.name===t.name));r?Xt(t.type,r.type)||e.reportError(`Interface field argument ${t} expects type ${t.type} but ${r} is type ${r.type}.`,[t.astNode?.type,r.astNode?.type]):e.reportError(`Interface field argument ${t} expected but ${n} does not provide it.`,[t.astNode,n.astNode])}for(const t of n.args)if(Kt(t)){i.args.find((e=>e.name===t.name))||e.reportError(`Argument "${t}" must not be required type "${t.type}" if not provided by the Interface field "${i}".`,[t.astNode,i.astNode])}}else e.reportError(`Interface field ${i} expected but ${t} does not provide it.`,[i.astNode,t.astNode,...t.extensionASTNodes])}}function cr(e,t,n){const r=t.getInterfaces();for(const i of n.getInterfaces())r.includes(i)||e.reportError(i===t?`Type ${t} cannot implement ${n} because it would create a circular reference.`:`Type ${t} must implement ${i} because it is implemented by ${n}.`,[...fr(n,i),...fr(t,n)])}function ur(e,t){const n=t.getTypes();0===n.length&&e.reportError(`Union type ${t} must define one or more member types.`,[t.astNode,...t.extensionASTNodes]);const r=new Set;for(const i of n)r.has(i.name)?e.reportError(`Union type ${t} can only include type ${i} once.`,hr(t,i.name)):(r.add(i.name),wt(i)||e.reportError(`Union type ${t} can only include Object types, it cannot include ${Ge(i)}.`,hr(t,String(i))))}function lr(e,t){const n=t.getValues();0===n.length&&e.reportError(`Enum type ${t} must define one or more values.`,[t.astNode,...t.extensionASTNodes]);for(const t of n)ir(e,t)}function pr(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Input Object type ${t} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const r of n)ir(e,r),$t(r.type)||e.reportError(`The type of ${r} must be Input Type but got: ${Ge(r.type)}.`,r.astNode?.type),Wt(r)&&null!=r.deprecationReason&&e.reportError(`Required input field ${r} cannot be deprecated.`,[mr(r.astNode),r.astNode?.type]),nr(e,r),t.isOneOf&&dr(t,r,e)}function dr(e,t,n){xt(t.type)&&n.reportError(`OneOf input field ${e}.${t.name} must be nullable.`,t.astNode?.type),void 0===t.default&&void 0===t.defaultValue||n.reportError(`OneOf input field ${e}.${t.name} cannot have a default value.`,t.astNode)}function fr(e,t){const{astNode:n,extensionASTNodes:r}=e;return(null!=n?[n,...r]:r).flatMap((e=>e.interfaces??[])).filter((e=>e.name.value===t.name))}function hr(e,t){const{astNode:n,extensionASTNodes:r}=e;return(null!=n?[n,...r]:r).flatMap((e=>e.types??[])).filter((e=>e.name.value===t))}function mr(e){return e?.directives?.find((e=>e.name.value===An.name))}function vr(e,t){switch(t.kind){case C:{const n=vr(e,t.type);return n&&new GraphQLList(n)}case R:{const n=vr(e,t.type);return n&&new GraphQLNonNull(n)}case Q:return e.getType(t.name.value)}}class TypeInfo{constructor(e,t,n){this._schema=e,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._fragmentSignaturesByName=n??(()=>null),this._fragmentSignature=null,this._fragmentArgument=null,t&&($t(t)&&this._inputTypeStack.push(t),Ct(t)&&this._parentTypeStack.push(t),Ft(t)&&this._typeStack.push(t))}get[Symbol.toStringTag](){return"TypeInfo"}getType(){return this._typeStack.at(-1)}getParentType(){return this._parentTypeStack.at(-1)}getInputType(){return this._inputTypeStack.at(-1)}getParentInputType(){return this._inputTypeStack.at(-2)}getFieldDef(){return this._fieldDefStack.at(-1)}getDefaultValue(){return this._defaultValueStack.at(-1)}getDirective(){return this._directive}getArgument(){return this._argument}getFragmentSignature(){return this._fragmentSignature}getFragmentSignatureByName(){return this._fragmentSignaturesByName}getFragmentArgument(){return this._fragmentArgument}getEnumValue(){return this._enumValue}enter(e){const t=this._schema;switch(e.kind){case m:{const t=function(e){const t=new Map;for(const n of e.definitions)if(n.kind===L){const e=new Map;if(n.variableDefinitions)for(const t of n.variableDefinitions)e.set(t.variable.name.value,t);const r={definition:n,variableDefinitions:e};t.set(n.name.value,r)}return t}(e);this._fragmentSignaturesByName=e=>t.get(e);break}case g:{const e=Ut(this.getType());this._parentTypeStack.push(Ct(e)?e:void 0);break}case T:{const n=this.getParentType();let r,i;n&&(r=t.getField(n,e.name.value),r&&(i=r.type)),this._fieldDefStack.push(r),this._typeStack.push(Ft(i)?i:void 0);break}case G:this._directive=t.getDirective(e.name.value);break;case v:{const n=t.getRootType(e.operation);this._typeStack.push(wt(n)?n:void 0);break}case N:this._fragmentSignature=this.getFragmentSignatureByName()(e.name.value);break;case S:case L:{const n=e.typeCondition,r=n?vr(t,n):Ut(this.getType());this._typeStack.push(Ft(r)?r:void 0);break}case y:{const n=vr(t,e.type);this._inputTypeStack.push($t(n)?n:void 0);break}case E:{let t,n;const r=this.getDirective()??this.getFieldDef();r&&(t=r.args.find((t=>t.name===e.name.value)),t&&(n=t.type)),this._argument=t,this._defaultValueStack.push(t?.default??t?.defaultValue??void 0),this._inputTypeStack.push($t(n)?n:void 0);break}case b:{const t=this.getFragmentSignature(),n=t?.variableDefinitions.get(e.name.value);let r;this._fragmentArgument=n,n&&(r=vr(this._schema,n.type)),this._inputTypeStack.push($t(r)?r:void 0);break}case x:{const e=function(e){if(e)return xt(e)?e.ofType:e}(this.getInputType()),t=Dt(e)?e.ofType:e;this._defaultValueStack.push(void 0),this._inputTypeStack.push($t(t)?t:void 0);break}case F:{const t=Ut(this.getInputType());let n,r;At(t)&&(r=t.getFields()[e.name.value],null!=r&&(n=r.type)),this._defaultValueStack.push(r?.default??r?.defaultValue??void 0),this._inputTypeStack.push($t(n)?n:void 0);break}case D:{const t=Ut(this.getInputType());let n;_t(t)&&(n=t.getValue(e.value)),this._enumValue=n;break}}}leave(e){switch(e.kind){case m:this._fragmentSignaturesByName=()=>null;break;case g:this._parentTypeStack.pop();break;case T:this._fieldDefStack.pop(),this._typeStack.pop();break;case G:this._directive=null;break;case N:this._fragmentSignature=null;break;case v:case S:case L:this._typeStack.pop();break;case y:this._inputTypeStack.pop();break;case E:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case b:this._fragmentArgument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case x:case F:this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case D:this._enumValue=null}}}function yr(e,t){return{enter(...n){const r=n[0];e.enter(r);const i=dt(t,r.kind).enter;if(i){const o=i.apply(t,n);return void 0!==o&&(e.leave(r),p(o)&&e.enter(o)),o}},leave(...n){const r=n[0],i=dt(t,r.kind).leave;let o;return i&&(o=i.apply(t,n)),e.leave(r),o}}}function gr(e){const t=e.arguments?.find((e=>"if"===e.name.value));if(!t)return!1;if(t.value.kind===_){if(t.value.value)return!1}else if(t.value.kind!==w)return!1;return!0}function Tr(e){return e.kind===v||e.kind===L}function Er(e){return e.kind===M||e.kind===U||e.kind===J||e.kind===q||e.kind===K||e.kind===Y}function br(e){return e.kind===X||e.kind===Z||e.kind===ee||e.kind===te||e.kind===ne||e.kind===re}function Nr(e){const t=new Map,n=e.getSchema(),r=n?n.getDirectives():$n;for(const e of r)t.set(e.name,e.args.map((e=>e.name)));const i=e.getDocument().definitions;for(const e of i)if(e.kind===H){const n=e.arguments??[];t.set(e.name.value,n.map((e=>e.name.value)))}return{Directive(n){const r=n.name.value,i=t.get(r);if(null!=n.arguments&&null!=i)for(const t of n.arguments){const n=t.name.value;if(!i.includes(n)){const o=rt(n,i);e.reportError(new GraphQLError(`Unknown argument "${n}" on directive "@${r}".`+(e.hideSuggestions?"":He(o)),{nodes:t}))}}return!1}}}function Sr(e){const t=new Map,r=e.getSchema(),i=r?r.getDirectives():$n;for(const e of i)t.set(e.name,e.locations);const o=e.getDocument().definitions;for(const e of o)e.kind===H&&t.set(e.name.value,e.locations.map((e=>e.value)));return{Directive(r,i,o,s,a){const c=r.name.value,u=t.get(c);if(null==u)return void e.reportError(new GraphQLError(`Unknown directive "@${c}".`,{nodes:r}));const l=function(e){const t=e.at(-1);switch(null!=t&&"kind"in t||n(),t.kind){case v:return function(e){switch(e){case d.QUERY:return f.QUERY;case d.MUTATION:return f.MUTATION;case d.SUBSCRIPTION:return f.SUBSCRIPTION}}(t.operation);case T:return f.FIELD;case N:return f.FRAGMENT_SPREAD;case S:return f.INLINE_FRAGMENT;case L:return f.FRAGMENT_DEFINITION;case y:{const t=e[e.length-3];return"kind"in t||n(),t.kind===v?f.VARIABLE_DEFINITION:f.FRAGMENT_VARIABLE_DEFINITION}case V:case W:return f.SCHEMA;case M:case X:return f.SCALAR;case U:case Z:return f.OBJECT;case P:return f.FIELD_DEFINITION;case J:case ee:return f.INTERFACE;case q:case te:return f.UNION;case K:case ne:return f.ENUM;case z:return f.ENUM_VALUE;case Y:case re:return f.INPUT_OBJECT;case B:{const t=e.at(-3);return null!=t&&"kind"in t||n(),t.kind===Y?f.INPUT_FIELD_DEFINITION:f.ARGUMENT_DEFINITION}default:n(0,"Unexpected kind: "+Ge(t.kind))}}(a);null==l||u.includes(l)||e.reportError(new GraphQLError(`Directive "@${c}" may not be used on ${l}.`,{nodes:r}))}}}function Lr(e){const{definitions:t}=e.getDocument(),n=e.getSchema()?.getTypeMap()??{},r=new Set([...Object.keys(n),...t.filter(Er).map((e=>e.name.value))]);return{NamedType(t,n,i,o,s){const a=t.name.value;if(!r.has(a)){const n=s[2]??i,o=null!=n&&("kind"in(c=n)&&(function(e){return e.kind===V||Er(e)||e.kind===H}(c)||function(e){return e.kind===W||br(e)}(c)));if(o&&wr.has(a))return;const u=e.hideSuggestions?[]:rt(a,o?[...wr,...r]:[...r]);e.reportError(new GraphQLError(`Unknown type "${a}".`+He(u),{nodes:t}))}var c}}}const wr=new Set([...bn,...Hn].map((e=>e.name)));function Ir(e){const t=new Set,n=[];return{OperationDefinition(n){for(const r of e.getRecursivelyReferencedFragments(n))t.add(r.name.value);return!1},FragmentDefinition:e=>(n.push(e),!1),Document:{leave(){for(const r of n){const n=r.name.value;t.has(n)||e.reportError(new GraphQLError(`Fragment "${n}" is never used.`,{nodes:r}))}}}}}function Or(e){switch(e.kind){case $:return{...e,fields:(t=e.fields,t.map((e=>({...e,value:Or(e.value)}))).sort(((e,t)=>Ze(e.name.value,t.name.value))))};case x:return{...e,values:e.values.map(Or)};case I:case O:case k:case _:case A:case D:case w:return e}var t}function kr(e){return Array.isArray(e)?e.map((([e,t])=>`subfields "${e}" conflict because `+kr(t))).join(" and "):e}function _r(e,t,n,r,i,o,s,a){if(r.has(s,a.key,o))return;r.add(s,a.key,o);const c=e.getFragment(a.node.name.value);if(!c)return;const[u,l]=Vr(e,n,c,a.varMap);if(s!==u){Dr(e,t,n,r,i,o,s,void 0,u,a.varMap);for(const a of l)_r(e,t,n,r,i,o,s,a)}}function Ar(e,t,n,r,i,o,s,a){if(s.key===a.key)return;if(s.node.name.value===a.node.name.value&&!$r(s.node.arguments,s.varMap,a.node.arguments,a.varMap))return void e.reportError(new GraphQLError(`Spreads "${s.node.name.value}" conflict because ${s.key} and ${a.key} have different fragment arguments.`,{nodes:[s.node,a.node]}));if(i.has(s.key,a.key,o))return;i.add(s.key,a.key,o);const c=e.getFragment(s.node.name.value),u=e.getFragment(a.node.name.value);if(!c||!u)return;const[l,p]=Vr(e,n,c,s.varMap),[d,f]=Vr(e,n,u,a.varMap);Dr(e,t,n,r,i,o,l,s.varMap,d,a.varMap);for(const a of f)Ar(e,t,n,r,i,o,s,a);for(const s of p)Ar(e,t,n,r,i,o,s,a)}function Dr(e,t,n,r,i,o,s,a,c,u){for(const[l,p]of s.entries()){const s=c.get(l);if(null!=s)for(const c of p)for(const p of s){const s=xr(e,n,r,i,o,l,c,a,p,u);s&&t.push(s)}}}function xr(e,t,n,r,i,o,s,a,c,u){const[l,p,d]=s,[f,h,m]=c,v=i||l!==f&&wt(l)&&wt(f);if(!v){const e=p.name.value,t=h.name.value;if(e!==t)return[[o,`"${e}" and "${t}" are different fields`],[p],[h]];if(!$r(p.arguments,a,h.arguments,u))return[[o,"they have differing arguments"],[p],[h]]}if(!function(e,t,n,r){const i=Qr(e),o=Qr(n);if(!i&&!o)return!0;if(i&&o)return $r(i.arguments,t,o.arguments,r);return!1}(p.directives??[],a,h.directives??[],u))return[[o,"they have differing stream directives"],[p],[h]];const y=d?.type,g=m?.type;if(y&&g&&Cr(y,g))return[[o,`they return conflicting types "${Ge(y)}" and "${Ge(g)}"`],[p],[h]];const T=p.selectionSet,E=h.selectionSet;if(T&&E){const i=function(e,t,n,r,i,o,s,a,c,u,l){const p=[],[d,f]=Rr(e,t,o,s,a),[h,m]=Rr(e,t,c,u,l);Dr(e,p,t,n,r,i,d,a,h,l);for(const o of m)_r(e,p,t,n,r,i,d,o);for(const o of f)_r(e,p,t,n,r,i,h,o);for(const o of f)for(const s of m)Ar(e,p,t,n,r,i,o,s);return p}(e,t,n,r,v,Ut(y),T,a,Ut(g),E,u);return function(e,t,n,r){if(e.length>0)return[[t,e.map((([e])=>e))],[n,...e.map((([,e])=>e)).flat()],[r,...e.map((([,,e])=>e)).flat()]]}(i,o,p,h)}}function $r(e,t,n,r){if(void 0===e||0===e.length)return void 0===n||0===n.length;if(void 0===n||0===n.length)return!1;if(e.length!==n.length)return!1;const i=new Map(n.map((({name:e,value:t})=>[e.value,void 0===r?t:Fr(t,r)])));return e.every((e=>{let n=e.value;t&&(n=Fr(n,t));const r=i.get(e.name.value);return void 0!==r&&Gr(n)===Gr(r)}))}function Fr(e,t){switch(e.kind){case w:return t.get(e.name.value)??e;case x:return{...e,values:e.values.map((e=>Fr(e,t)))};case $:return{...e,fields:e.fields.map((e=>({...e,value:Fr(e.value,t)})))};default:return e}}function Gr(e){return ft(Or(e))}function Qr(e){return e.find((e=>"stream"===e.name.value))}function Cr(e,t){return Dt(e)?!Dt(t)||Cr(e.ofType,t.ofType):!!Dt(t)||(xt(e)?!xt(t)||Cr(e.ofType,t.ofType):!!xt(t)||!(!Gt(e)&&!Gt(t))&&e!==t)}function Rr(e,t,n,r,i){const o=t.get(r);if(o)return o;const s=new Map,a=new Map;jr(e,n,r,s,a,i);const c=[s,Array.from(a.values())];return t.set(r,c),c}function Vr(e,t,n,r){const i=t.get(n.selectionSet);if(i)return i;const o=vr(e.getSchema(),n.typeCondition);return Rr(e,t,o,n.selectionSet,r)}function jr(e,t,n,r,i,o){for(const s of n.selections)switch(s.kind){case T:{const e=s.name.value;let n;(wt(t)||Ot(t))&&(n=t.getFields()[e]);const i=s.alias?s.alias.value:e;let o=r.get(i);null==o&&(o=[],r.set(i,o)),o.push([t,s,n]);break}case N:{const t=Mr(e,s,o);i.set(t.key,t);break}case S:{const n=s.typeCondition,a=n?vr(e.getSchema(),n):t;jr(e,a,s.selectionSet,r,i,o);break}}}function Mr(e,t,n){let r="";const i=new Map,o=e.getFragmentSignatureByName()(t.name.value),s=new Map;if(t.arguments)for(const e of t.arguments)s.set(e.name.value,e.value);if(o?.variableDefinitions){r+=t.name.value+"(";for(const[e,t]of o.variableDefinitions){const o=s.get(e);o&&(r+=e+": "+ft(Or(o)));const a=s.get(e);void 0!==a?i.set(e,void 0!==n?Fr(a,n):a):t.defaultValue&&i.set(e,t.defaultValue)}r+=")"}return{key:r,node:t,varMap:i.size>0?i:void 0}}class OrderedPairSet{constructor(){this._data=new Map}has(e,t,n){const r=this._data.get(e)?.get(t);return void 0!==r&&(!!n||n===r)}add(e,t,n){const r=this._data.get(e);void 0===r?this._data.set(e,new Map([[t,n]])):r.set(t,n)}}class PairSet{constructor(){this._orderedPairSet=new OrderedPairSet}has(e,t,n){return e<t?this._orderedPairSet.has(e,t,n):this._orderedPairSet.has(t,e,n)}add(e,t,n){e<t?this._orderedPairSet.add(e,t,n):this._orderedPairSet.add(t,e,n)}}const Ur={[M]:X,[U]:Z,[J]:ee,[q]:te,[K]:ne,[Y]:re};function Pr(e){const t=new Map,n=e.getSchema(),r=n?.getDirectives()??$n;for(const e of r)t.set(e.name,new Map(e.args.filter(Kt).map((e=>[e.name,e]))));const i=e.getDocument().definitions;for(const e of i)if(e.kind===H){const n=e.arguments??[];t.set(e.name.value,new Map(n.filter(Br).map((e=>[e.name.value,e]))))}return{Directive:{leave(n){const r=n.name.value,i=t.get(r);if(null!=i){const t=n.arguments??[],o=new Set(t.map((e=>e.name.value)));for(const[t,s]of i.entries())if(!o.has(t)){const i=St(s.type)?Ge(s.type):ft(s.type);e.reportError(new GraphQLError(`Argument "@${r}(${t}:)" of type "${i}" is required, but it was not provided.`,{nodes:n}))}}}}}}function Br(e){return e.type.kind===R&&null==e.defaultValue}function Jr(e,n){if(xt(n)){if(null==e)return;return Jr(e,n.ofType)}if(null==e)return null;if(Dt(n)){if(!Je(e)){const t=Jr(e,n.ofType);if(void 0===t)return;return[t]}const t=[];for(const r of e){const e=Jr(r,n.ofType);if(void 0===e)return;t.push(e)}return t}if(At(n)){if(!t(e))return;const r={},i=n.getFields();if(Object.keys(e).some((e=>!Object.hasOwn(i,e))))return;for(const t of Object.values(i)){const n=e[t.name];if(void 0===n){if(Wt(t))return;const e=zr(t);void 0!==e&&(r[t.name]=e)}else{const e=Jr(n,t.type);if(void 0===e)return;r[t.name]=e}}if(n.isOneOf){const e=Object.keys(r);if(1!==e.length)return;if(null===r[e[0]])return}return r}const r=Qt(n);try{return r.coerceInputValue(e)}catch(e){}}function qr(e,t,n,r){if(e.kind===w){const i=Kr(e,n,r);if(null==i&&xt(t))return;return i}if(xt(t)){if(e.kind===A)return;return qr(e,t.ofType,n,r)}if(e.kind===A)return null;if(Dt(t)){if(e.kind!==x){const i=qr(e,t.ofType,n,r);if(void 0===i)return;return[i]}const i=[];for(const o of e.values){let e=qr(o,t.ofType,n,r);if(void 0===e){if(o.kind!==w||null!=Kr(o,n,r)||xt(t.ofType))return;e=null}i.push(e)}return i}if(At(t)){if(e.kind!==$)return;const i={},o=t.getFields();if(e.fields.some((e=>!Object.hasOwn(o,e.name.value))))return;const s=new Map(e.fields.map((e=>[e.name.value,e])));for(const e of Object.values(o)){const t=s.get(e.name);if(!t||t.value.kind===w&&null==Kr(t.value,n,r)){if(Wt(e))return;const t=zr(e);void 0!==t&&(i[e.name]=t)}else{const o=qr(t.value,e.type,n,r);if(void 0===o)return;i[e.name]=o}}if(t.isOneOf){const e=Object.keys(i);if(1!==e.length)return;if(null===i[e[0]])return}return i}const i=Qt(t);try{return i.coerceInputLiteral?i.coerceInputLiteral(sn(e,n,r)):i.parseLiteral(e,n?.coerced)}catch(e){}}function Kr(e,t,n){const r=e.name.value;return void 0!==n?.sources[r]?n.coerced[r]:t?.coerced[r]}function zr(e){let t=e._memoizedCoercedDefaultValue;if(void 0!==t)return t;const r=e.default;if(void 0!==r)return t=r.literal?qr(r.literal,e.type):Jr(r.value,e.type),void 0!==t||n(),e._memoizedCoercedDefaultValue=t,t;const i=e.defaultValue;return void 0!==i&&(e._memoizedCoercedDefaultValue=i),i}function Yr(e,t,n,r,i){const o=[],s=Object.create(null);for(const[e,i]of Object.entries(t))o.push(i),s[e]={signature:i,value:r?.sources[e]?.value??n.sources[e]?.value};return{sources:s,coerced:Hr(e,o,n,r,i)}}function Hr(e,t,r,i,o){const s={},a=e.arguments??[],c=new Map(a.map((e=>[e.name.value,e])));for(const a of t){const t=a.name,u=a.type,l=c.get(t);if(!l){if(Kt(a))throw new GraphQLError(`Argument "${It(a)?a:a.name}" of required type "${u}" was not provided.`,{nodes:e});const n=zr(a);void 0!==n&&(s[t]=n);continue}const p=l.value;if(p.kind===w){const e=p.name.value,n=i?.sources[e]?i:r;if(!(null!=n&&Object.hasOwn(n.coerced,e)||Kt(a))){const e=zr(a);void 0!==e&&(s[t]=e);continue}}const d=qr(p,u,r,i);void 0===d&&(ln(p,u,((e,t)=>{throw e.message=`Argument "${It(a)?a:a.name}" has invalid value${ze(t)}: ${e.message}`,e}),r,i,o),n(0,"Invalid argument")),s[t]=d}return s}function Wr(e,t,n,r,i){const o=t.directives?.find((t=>t.name.value===e.name));if(o)return Hr(o,e.args,n,r,i)}function Xr(e,t,n,r,i,o){const s=new AccumulatorMap,a=[];return Zr({schema:e,fragments:t,variableValues:n,runtimeType:r,visitedFragmentNames:new Set,hideSuggestions:o},i,s,a),{groupedFieldSet:s,newDeferUsages:a}}function Zr(e,t,n,r,i,o){const{schema:s,fragments:a,variableValues:c,runtimeType:u,visitedFragmentNames:l,hideSuggestions:p}=e;for(const f of t.selections)switch(f.kind){case T:if(!ti(f,c,o))continue;n.add((d=f).alias?d.alias.value:d.name.value,{node:f,deferUsage:i,fragmentVariableValues:o});break;case S:{if(!ti(f,c,o)||!ni(s,f,u))continue;const t=ei(c,o,f,i);t?(r.push(t),Zr(e,f.selectionSet,n,r,t,o)):Zr(e,f.selectionSet,n,r,i,o);break}case N:{const t=f.name.value;if(l.has(t)||!ti(f,c,o))continue;const d=a[t];if(null==d||!ni(s,d.definition,u))continue;const h=ei(c,o,f,i),m=d.variableSignatures;let v;m&&(v=Yr(f,m,c,o,p)),h?(r.push(h),Zr(e,d.definition.selectionSet,n,r,h,v)):(l.add(t),Zr(e,d.definition.selectionSet,n,r,i,v));break}}var d}function ei(e,t,n,r){const i=Wr(On,n,e,t);if(i&&!1!==i.if)return{label:"string"==typeof i.label?i.label:void 0,parentDeferUsage:r}}function ti(e,t,n){const r=Wr(In,e,t,n);if(!0===r?.if)return!1;const i=Wr(wn,e,t,n);return!1!==i?.if}function ni(e,t,n){const r=t.typeCondition;if(!r)return!0;const i=vr(e,r);return i===n||!!Rt(i)&&e.isSubType(i,n)}function ri(e){return e.map((e=>e.node))}function ii(e,t){const n=new AccumulatorMap;for(const r of e)n.add(t(r),r);return n}function oi(e){return{Field:t,Directive:t};function t(t){const n=ii(t.arguments??[],(e=>e.name.value));for(const[t,r]of n)r.length>1&&e.reportError(new GraphQLError(`There can be only one argument named "${t}".`,{nodes:r.map((e=>e.name))}))}}function si(e){const t=new Map,n=e.getSchema(),r=n?n.getDirectives():$n;for(const e of r)t.set(e.name,!e.isRepeatable);const i=e.getDocument().definitions;for(const e of i)e.kind===H&&t.set(e.name.value,!e.repeatable);const o=new Map,s=new Map;return{enter(n){if(!("directives"in n)||!n.directives)return;let r;if(n.kind===V||n.kind===W)r=o;else if(Er(n)||br(n)){const e=n.name.value;r=s.get(e),void 0===r&&(r=new Map,s.set(e,r))}else r=new Map;for(const i of n.directives){const n=i.name.value;if(!0===t.get(n)){const t=r.get(n);null!=t?e.reportError(new GraphQLError(`The directive "@${n}" can only be used once at this location.`,{nodes:[t,i]})):r.set(n,i)}}}}}function ai(e,t){return!!(wt(e)||Ot(e)||At(e))&&null!=e.getFields()[t]}function ci(e){const t=[];let r=new Map;return{ObjectValue:{enter(){t.push(r),r=new Map},leave(){const e=t.pop();null!=e||n(),r=e}},ObjectField(t){const n=t.name.value,i=r.get(n);null!=i?e.reportError(new GraphQLError(`There can be only one input field named "${n}".`,{nodes:[i,t.name]})):r.set(n,t.name)}}}function ui(e,t,n){return n&&ln(t,n,(t=>{e.reportError(t)}),void 0,void 0,e.hideSuggestions),!1}function li(e,t,n,r,i){if(xt(r)&&!xt(t)){if(!(null!=n&&n.kind!==A)&&!(void 0!==i))return!1;return Zt(e,t,r.ofType)}return Zt(e,t,r)}const pi=Object.freeze([function(e){function t(n,r=Object.create(null),i=0){if(n.kind===N){const o=n.name.value;if(!0===r[o])return!1;const s=e.getFragment(o);if(!s)return!1;try{return r[o]=!0,t(s,r,i)}finally{r[o]=void 0}}if(n.kind===T&&("fields"===n.name.value||"interfaces"===n.name.value||"possibleTypes"===n.name.value||"inputFields"===n.name.value)&&++i>=3)return!0;if("selectionSet"in n&&n.selectionSet)for(const e of n.selectionSet.selections)if(t(e,r,i))return!0;return!1}return{Field(n){if(("__schema"===n.name.value||"__type"===n.name.value)&&t(n))return e.reportError(new GraphQLError("Maximum introspection depth exceeded",{nodes:[n]})),!1}}}]),di=Object.freeze([function(e){return{Document(t){for(const n of t.definitions)if(!Tr(n)){const t=n.kind===V||n.kind===W?"schema":'"'+n.name.value+'"';e.reportError(new GraphQLError(`The ${t} definition is not executable.`,{nodes:n}))}return!1}}},function(e){const t=e.getSchema();return{OperationDefinition(n){const r=n.operation;t.getRootType(r)||e.reportError(new GraphQLError(`The ${r} operation is not supported by the schema.`,{nodes:n}))}}},function(e){const t=new Map;return{OperationDefinition(n){const r=n.name;if(null!=r){const n=t.get(r.value);null!=n?e.reportError(new GraphQLError(`There can be only one operation named "${r.value}".`,{nodes:[n,r]})):t.set(r.value,r)}return!1},FragmentDefinition:()=>!1}},function(e){let t=0;return{Document(e){t=e.definitions.filter((e=>e.kind===v)).length},OperationDefinition(n){!n.name&&t>1&&e.reportError(new GraphQLError("This anonymous operation must be the only defined operation.",{nodes:n}))}}},function(e){return{OperationDefinition(t){if("subscription"===t.operation){const n=e.getSchema(),r=n.getSubscriptionType();if(r){const i=t.name?t.name.value:null,o=Object.create(null),s=e.getDocument(),a=Object.create(null);for(const e of s.definitions)e.kind===L&&(a[e.name.value]={definition:e});const{groupedFieldSet:c}=Xr(n,a,o,r,t.selectionSet,e.hideSuggestions);if(c.size>1){const t=[...c.values()].slice(1).flatMap((e=>ri(e)));e.reportError(new GraphQLError(null!=i?`Subscription "${i}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",{nodes:t}))}for(const t of c.values()){ri(t)[0].name.value.startsWith("__")&&e.reportError(new GraphQLError(null!=i?`Subscription "${i}" must not select an introspection top level field.`:"Anonymous Subscription must not select an introspection top level field.",{nodes:ri(t)}))}}}}}},Lr,function(e){return{InlineFragment(t){const n=t.typeCondition;if(n){const t=vr(e.getSchema(),n);if(t&&!Ct(t)){const t=ft(n);e.reportError(new GraphQLError(`Fragment cannot condition on non composite type "${t}".`,{nodes:n}))}}},FragmentDefinition(t){const n=vr(e.getSchema(),t.typeCondition);if(n&&!Ct(n)){const n=ft(t.typeCondition);e.reportError(new GraphQLError(`Fragment "${t.name.value}" cannot condition on non composite type "${n}".`,{nodes:t.typeCondition}))}}}},function(e){return{VariableDefinition(t){const n=vr(e.getSchema(),t.type);if(void 0!==n&&!$t(n)){const n=t.variable.name.value,r=ft(t.type);e.reportError(new GraphQLError(`Variable "$${n}" cannot be non-input type "${r}".`,{nodes:t.type}))}}}},function(e){return{Field(t){const n=e.getType(),r=t.selectionSet;if(n)if(Gt(Ut(n))){if(r){const i=t.name.value,o=Ge(n);e.reportError(new GraphQLError(`Field "${i}" must not have a selection since type "${o}" has no subfields.`,{nodes:r}))}}else if(r){if(0===r.selections.length){const r=t.name.value,i=Ge(n);e.reportError(new GraphQLError(`Field "${r}" of type "${i}" must have at least one field selected.`,{nodes:t}))}}else{const r=t.name.value,i=Ge(n);e.reportError(new GraphQLError(`Field "${r}" of type "${i}" must have a selection of subfields. Did you mean "${r} { ... }"?`,{nodes:t}))}}}},function(e){return{Field(t){const n=e.getParentType();if(n){if(!e.getFieldDef()){const r=e.getSchema(),i=t.name.value;let o=He("to use an inline fragment on",e.hideSuggestions?[]:function(e,t,n){if(!Rt(t))return[];const r=new Set,i=Object.create(null);for(const o of e.getPossibleTypes(t))if(null!=o.getFields()[n]){r.add(o),i[o.name]=1;for(const e of o.getInterfaces())null!=e.getFields()[n]&&(r.add(e),i[e.name]=(i[e.name]??0)+1)}return[...r].sort(((t,n)=>{const r=i[n.name]-i[t.name];return 0!==r?r:Ot(t)&&e.isSubType(t,n)?-1:Ot(n)&&e.isSubType(n,t)?1:Ze(t.name,n.name)})).map((e=>e.name))}(r,n,i));""===o&&(o=He(e.hideSuggestions?[]:function(e,t){if(wt(e)||Ot(e)){return rt(t,Object.keys(e.getFields()))}return[]}(n,i))),e.reportError(new GraphQLError(`Cannot query field "${i}" on type "${n}".`+o,{nodes:t}))}}}}},function(e){const t=new Map;return{OperationDefinition:()=>!1,FragmentDefinition(n){const r=n.name.value,i=t.get(r);return null!=i?e.reportError(new GraphQLError(`There can be only one fragment named "${r}".`,{nodes:[i,n.name]})):t.set(r,n.name),!1}}},function(e){return{FragmentSpread(t){const n=t.name.value;e.getFragment(n)||e.reportError(new GraphQLError(`Unknown fragment "${n}".`,{nodes:t.name}))}}},Ir,function(e){return{InlineFragment(t){const n=e.getType(),r=e.getParentType();if(Ct(n)&&Ct(r)&&!en(e.getSchema(),n,r)){const i=Ge(r),o=Ge(n);e.reportError(new GraphQLError(`Fragment cannot be spread here as objects of type "${i}" can never be of type "${o}".`,{nodes:t}))}},FragmentSpread(t){const n=t.name.value,r=function(e,t){const n=e.getFragment(t);if(n){const t=vr(e.getSchema(),n.typeCondition);if(Ct(t))return t}}(e,n),i=e.getParentType();if(r&&i&&!en(e.getSchema(),r,i)){const o=Ge(i),s=Ge(r);e.reportError(new GraphQLError(`Fragment "${n}" cannot be spread here as objects of type "${o}" can never be of type "${s}".`,{nodes:t}))}}}},function(e){const t=new Set,n=[],r=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition:e=>(i(e),!1)};function i(o){if(t.has(o.name.value))return;const s=o.name.value;t.add(s);const a=e.getFragmentSpreads(o.selectionSet);if(0!==a.length){r[s]=n.length;for(const t of a){const o=t.name.value,s=r[o];if(n.push(t),void 0===s){const t=e.getFragment(o);t&&i(t)}else{const t=n.slice(s),r=t.slice(0,-1).map((e=>'"'+e.name.value+'"')).join(", ");e.reportError(new GraphQLError(`Cannot spread fragment "${o}" within itself`+(""!==r?` via ${r}.`:"."),{nodes:t}))}n.pop()}r[s]=void 0}}},function(e){return{OperationDefinition(t){const n=ii(t.variableDefinitions??[],(e=>e.variable.name.value));for(const[t,r]of n)r.length>1&&e.reportError(new GraphQLError(`There can be only one variable named "$${t}".`,{nodes:r.map((e=>e.variable.name))}))}}},function(e){return{OperationDefinition(t){const n=new Set(t.variableDefinitions?.map((e=>e.variable.name.value))),r=e.getRecursiveVariableUsages(t);for(const{node:i,fragmentVariableDefinition:o}of r){if(o)continue;const r=i.name.value;n.has(r)||e.reportError(new GraphQLError(t.name?`Variable "$${r}" is not defined by operation "${t.name.value}".`:`Variable "$${r}" is not defined.`,{nodes:[i,t]}))}}}},function(e){return{FragmentDefinition(t){const n=e.getVariableUsages(t),r=new Set(n.map((({node:e})=>e.name.value))),i=t.variableDefinitions??[];for(const n of i){const i=n.variable.name.value;r.has(i)||e.reportError(new GraphQLError(`Variable "$${i}" is never used in fragment "${t.name.value}".`,{nodes:n}))}},OperationDefinition(t){const n=e.getRecursiveVariableUsages(t),r=new Set;for(const{node:e,fragmentVariableDefinition:t}of n){const n=e.name.value;t||r.add(n)}const i=t.variableDefinitions??[];for(const n of i){const i=n.variable.name.value;r.has(i)||e.reportError(new GraphQLError(t.name?`Variable "$${i}" is never used in operation "${t.name.value}".`:`Variable "$${i}" is never used.`,{nodes:n}))}}}},Sr,si,function(e){return{Directive(t){const n=e.getSchema().getMutationType(),r=e.getSchema().getSubscriptionType(),i=e.getParentType();i&&t.name.value===On.name&&(n&&i===n&&e.reportError(new GraphQLError(`Defer directive cannot be used on root mutation type "${i}".`,{nodes:t})),r&&i===r&&e.reportError(new GraphQLError(`Defer directive cannot be used on root subscription type "${i}".`,{nodes:t}))),i&&t.name.value===kn.name&&(n&&i===n&&e.reportError(new GraphQLError(`Stream directive cannot be used on root mutation type "${i}".`,{nodes:t})),r&&i===r&&e.reportError(new GraphQLError(`Stream directive cannot be used on root subscription type "${i}".`,{nodes:t})))}}},function(e){const t=new Set;return{OperationDefinition(n){if(n.operation===d.SUBSCRIPTION)for(const r of e.getRecursivelyReferencedFragments(n))t.add(r.name.value)},Directive(n,r,i,o,s){const a=s[2];"kind"in a&&(a.kind===L&&t.has(a.name.value)||a.kind===v&&a.operation===d.SUBSCRIPTION)&&(n.name.value===On.name?gr(n)||e.reportError(new GraphQLError("Defer directive not supported on subscription operations. Disable `@defer` by setting the `if` argument to `false`.",{nodes:n})):n.name.value===kn.name&&(gr(n)||e.reportError(new GraphQLError("Stream directive not supported on subscription operations. Disable `@stream` by setting the `if` argument to `false`.",{nodes:n}))))}}},function(e){const t=new Map;return{Directive(n){if(n.name.value===On.name||n.name.value===kn.name){const r=n.arguments?.find((e=>"label"===e.name.value)),i=r?.value;if(!i)return;if(i.kind!==k)return void e.reportError(new GraphQLError(`Argument "@${n.name.value}(label:)" must be a static string.`,{nodes:n}));const o=t.get(i.value);null!=o?e.reportError(new GraphQLError('Value for arguments "defer(label:)" and "stream(label:)" must be unique across all Defer/Stream directive usages.',{nodes:[o,n]})):t.set(i.value,n)}}}},function(e){return{Directive(t){const n=e.getFieldDef(),r=e.getParentType();n&&r&&t.name.value===kn.name&&!(Dt(n.type)||Vt(n.type)&&Dt(n.type.ofType))&&e.reportError(new GraphQLError(`Directive "@stream" cannot be used on non-list field "${r}.${n.name}".`,{nodes:t}))}}},function(e){return{...Nr(e),FragmentArgument(t){const n=e.getFragmentSignature();if(n){if(!n.variableDefinitions.get(t.name.value)){const r=t.name.value,i=e.hideSuggestions?[]:rt(r,Array.from(n.variableDefinitions.values()).map((e=>e.variable.name.value)));e.reportError(new GraphQLError(`Unknown argument "${r}" on fragment "${n.definition.name.value}".`+He(i),{nodes:t}))}}},Argument(t){const n=e.getArgument(),r=e.getFieldDef();if(!n&&r){const n=t.name.value,i=e.hideSuggestions?[]:rt(n,r.args.map((e=>e.name)));e.reportError(new GraphQLError(`Unknown argument "${n}" on field "${r}".`+He(i),{nodes:t}))}}}},oi,function(e){return{NullValue:t=>ui(e,t,e.getInputType()),ListValue:t=>ui(e,t,e.getParentInputType()),ObjectValue:t=>ui(e,t,e.getInputType()),EnumValue:t=>ui(e,t,e.getInputType()),IntValue:t=>ui(e,t,e.getInputType()),FloatValue:t=>ui(e,t,e.getInputType()),StringValue:t=>ui(e,t,e.getInputType()),BooleanValue:t=>ui(e,t,e.getInputType())}},function(e){return{...Pr(e),Field:{leave(t){const n=e.getFieldDef();if(!n)return!1;const r=new Set(t.arguments?.map((e=>e.name.value)));for(const i of n.args)!r.has(i.name)&&Kt(i)&&e.reportError(new GraphQLError(`Argument "${i}" of type "${i.type}" is required, but it was not provided.`,{nodes:t}))}},FragmentSpread:{leave(t){const n=e.getFragmentSignature();if(!n)return!1;const r=new Set(t.arguments?.map((e=>e.name.value)));for(const[i,o]of n.variableDefinitions)if(!r.has(i)&&Br(o)){const n=Ge(vr(e.getSchema(),o.type));e.reportError(new GraphQLError(`Fragment "${t.name.value}" argument "${i}" of type "${n}" is required, but it was not provided.`,{nodes:t}))}}}}},function(e){let t;return{OperationDefinition:{enter(){t=new Map},leave(n){const r=e.getRecursiveVariableUsages(n);for(const{node:n,type:i,parentType:o,defaultValue:s,fragmentVariableDefinition:a}of r){const r=n.name.value;let c=a;if(c||(c=t.get(r)),c&&i){const t=e.getSchema(),a=vr(t,c.type);a&&!li(t,a,c.defaultValue,i,s)&&e.reportError(new GraphQLError(`Variable "$${r}" of type "${a}" used in position expecting type "${i}".`,{nodes:[c,n]})),At(o)&&o.isOneOf&&jt(a)&&e.reportError(new GraphQLError(`Variable "$${r}" is of type "${a}" but must be non-nullable to be used for OneOf Input Object "${o}".`,{nodes:[c,n]}))}}}},VariableDefinition(e){t.set(e.variable.name.value,e)}}},function(e){const t=new OrderedPairSet,n=new PairSet,r=new Map;return{SelectionSet(i){const o=function(e,t,n,r,i,o){const s=[],[a,c]=Rr(e,t,i,o,void 0);if(function(e,t,n,r,i,o){for(const[s,a]of o.entries())if(a.length>1)for(let o=0;o<a.length;o++)for(let c=o+1;c<a.length;c++){const u=xr(e,n,r,i,!1,s,a[o],void 0,a[c],void 0);u&&t.push(u)}}(e,s,t,n,r,a),0!==c.length)for(let i=0;i<c.length;i++){_r(e,s,t,n,r,!1,a,c[i]);for(let o=i+1;o<c.length;o++)Ar(e,s,t,n,r,!1,c[i],c[o])}return s}(e,r,t,n,e.getParentType(),i);for(const[[t,n],r,i]of o){const o=kr(n);e.reportError(new GraphQLError(`Fields "${t}" conflict because ${o}. Use different aliases on the fields to fetch both if this was intentional.`,{nodes:r.concat(i)}))}}}},ci,...pi]),fi=Object.freeze([function(e){const t=e.getSchema(),n=t?.astNode??t?.getQueryType()??t?.getMutationType()??t?.getSubscriptionType();let r=0;return{SchemaDefinition(t){n?e.reportError(new GraphQLError("Cannot define a new schema within a schema extension.",{nodes:t})):(r>0&&e.reportError(new GraphQLError("Must provide only one schema definition.",{nodes:t})),++r)}}},function(e){const t=e.getSchema(),n=new Map,r=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:i,SchemaExtension:i};function i(t){const i=t.operationTypes??[];for(const t of i){const i=t.operation,o=n.get(i);r[i]?e.reportError(new GraphQLError(`Type for ${i} already defined in the schema. It cannot be redefined.`,{nodes:t})):o?e.reportError(new GraphQLError(`There can be only one ${i} type in schema.`,{nodes:[o,t]})):n.set(i,t)}return!1}},function(e){const t=new Map,n=e.getSchema();return{ScalarTypeDefinition:r,ObjectTypeDefinition:r,InterfaceTypeDefinition:r,UnionTypeDefinition:r,EnumTypeDefinition:r,InputObjectTypeDefinition:r};function r(r){const i=r.name.value;if(n?.getType(i))return void e.reportError(new GraphQLError(`Type "${i}" already exists in the schema. It cannot also be defined in this type definition.`,{nodes:r.name}));const o=t.get(i);return null!=o?e.reportError(new GraphQLError(`There can be only one type named "${i}".`,{nodes:[o,r.name]})):t.set(i,r.name),!1}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=new Map;return{EnumTypeDefinition:i,EnumTypeExtension:i};function i(t){const i=t.name.value;let o=r.get(i);null==o&&(o=new Map,r.set(i,o));const s=t.values??[];for(const t of s){const r=t.name.value,s=n[i];if(_t(s)&&s.getValue(r)){e.reportError(new GraphQLError(`Enum value "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name}));continue}const a=o.get(r);null!=a?e.reportError(new GraphQLError(`Enum value "${i}.${r}" can only be defined once.`,{nodes:[a,t.name]})):o.set(r,t.name)}return!1}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=new Map;return{InputObjectTypeDefinition:i,InputObjectTypeExtension:i,InterfaceTypeDefinition:i,InterfaceTypeExtension:i,ObjectTypeDefinition:i,ObjectTypeExtension:i};function i(t){const i=t.name.value;let o=r.get(i);null==o&&(o=new Map,r.set(i,o));const s=t.fields??[];for(const t of s){const r=t.name.value;if(ai(n[i],r)){e.reportError(new GraphQLError(`Field "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name}));continue}const s=o.get(r);null!=s?e.reportError(new GraphQLError(`Field "${i}.${r}" can only be defined once.`,{nodes:[s,t.name]})):o.set(r,t.name)}return!1}},function(e){return{DirectiveDefinition(e){const t=e.arguments??[];return n(`@${e.name.value}`,t)},InterfaceTypeDefinition:t,InterfaceTypeExtension:t,ObjectTypeDefinition:t,ObjectTypeExtension:t};function t(e){const t=e.name.value,r=e.fields??[];for(const e of r){n(`${t}.${e.name.value}`,e.arguments??[])}return!1}function n(t,n){const r=ii(n,(e=>e.name.value));for(const[n,i]of r)i.length>1&&e.reportError(new GraphQLError(`Argument "${t}(${n}:)" can only be defined once.`,{nodes:i.map((e=>e.name))}));return!1}},function(e){const t=new Map,n=e.getSchema();return{DirectiveDefinition(r){const i=r.name.value;if(n?.getDirective(i))return void e.reportError(new GraphQLError(`Directive "@${i}" already exists in the schema. It cannot be redefined.`,{nodes:r.name}));const o=t.get(i);return o?e.reportError(new GraphQLError(`There can be only one directive named "@${i}".`,{nodes:[o,r.name]})):t.set(i,r.name),!1}}},Lr,Sr,si,function(e){const t=e.getSchema(),r=new Map;for(const t of e.getDocument().definitions)Er(t)&&r.set(t.name.value,t);return{ScalarTypeExtension:i,ObjectTypeExtension:i,InterfaceTypeExtension:i,UnionTypeExtension:i,EnumTypeExtension:i,InputObjectTypeExtension:i};function i(i){const o=i.name.value,s=r.get(o),a=t?.getType(o);let c;if(null!=s?c=Ur[s.kind]:a&&(c=function(e){if(Lt(e))return X;if(wt(e))return Z;if(Ot(e))return ee;if(kt(e))return te;if(_t(e))return ne;if(At(e))return re;n(0,"Unexpected type: "+Ge(e))}(a)),null!=c){if(c!==i.kind){const t=function(e){switch(e){case X:return"scalar";case Z:return"object";case ee:return"interface";case te:return"union";case ne:return"enum";case re:return"input object";default:n(0,"Unexpected kind: "+Ge(e))}}(i.kind);e.reportError(new GraphQLError(`Cannot extend non-${t} type "${o}".`,{nodes:s?[s,i]:i}))}}else{const n=[...r.keys(),...Object.keys(t?.getTypeMap()??{})];e.reportError(new GraphQLError(`Cannot extend type "${o}" because it is not defined.`+He(rt(o,n)),{nodes:i.name}))}}},Nr,oi,ci,Pr]);class ASTValidationContext{constructor(e,t){this._ast=e,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=t}get[Symbol.toStringTag](){return"ASTValidationContext"}reportError(e){this._onError(e)}getDocument(){return this._ast}getFragment(e){let t;if(this._fragments)t=this._fragments;else{t=Object.create(null);for(const e of this.getDocument().definitions)e.kind===L&&(t[e.name.value]=e);this._fragments=t}return t[e]}getFragmentSpreads(e){let t=this._fragmentSpreads.get(e);if(!t){t=[];const n=[e];let r;for(;r=n.pop();)for(const e of r.selections)e.kind===N?t.push(e):e.selectionSet&&n.push(e.selectionSet);this._fragmentSpreads.set(e,t)}return t}getRecursivelyReferencedFragments(e){let t=this._recursivelyReferencedFragments.get(e);if(!t){t=[];const n=new Set,r=[e.selectionSet];let i;for(;i=r.pop();)for(const e of this.getFragmentSpreads(i)){const i=e.name.value;if(!n.has(i)){n.add(i);const e=this.getFragment(i);e&&(t.push(e),r.push(e.selectionSet))}}this._recursivelyReferencedFragments.set(e,t)}return t}}class SDLValidationContext extends ASTValidationContext{constructor(e,t,n){super(e,n),this._schema=t}get hideSuggestions(){return!1}get[Symbol.toStringTag](){return"SDLValidationContext"}getSchema(){return this._schema}}class ValidationContext extends ASTValidationContext{constructor(e,t,n,r,i){super(t,r),this._schema=e,this._typeInfo=n,this._variableUsages=new Map,this._recursiveVariableUsages=new Map,this._hideSuggestions=i??!1}get[Symbol.toStringTag](){return"ValidationContext"}get hideSuggestions(){return this._hideSuggestions}getSchema(){return this._schema}getVariableUsages(e){let t=this._variableUsages.get(e);if(!t){const n=[],r=new TypeInfo(this._schema,void 0,this._typeInfo.getFragmentSignatureByName()),i=e.kind===L?e:void 0;lt(e,yr(r,{VariableDefinition:()=>!1,Variable(e){let t;if(i){const o=r.getFragmentSignatureByName()(i.name.value);t=o?.variableDefinitions.get(e.name.value),n.push({node:e,type:r.getInputType(),parentType:r.getParentInputType(),defaultValue:void 0,fragmentVariableDefinition:t})}else n.push({node:e,type:r.getInputType(),parentType:r.getParentInputType(),defaultValue:r.getDefaultValue(),fragmentVariableDefinition:void 0})}})),t=n,this._variableUsages.set(e,t)}return t}getRecursiveVariableUsages(e){let t=this._recursiveVariableUsages.get(e);if(!t){t=this.getVariableUsages(e);for(const n of this.getRecursivelyReferencedFragments(e))t=t.concat(this.getVariableUsages(n));this._recursiveVariableUsages.set(e,t)}return t}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getFragmentSignature(){return this._typeInfo.getFragmentSignature()}getFragmentSignatureByName(){return this._typeInfo.getFragmentSignatureByName()}getEnumValue(){return this._typeInfo.getEnumValue()}}function hi(e,t,n=di,r){!function(e){const t=er(e);if(0!==t.length)throw new Error(t.map((e=>e.message)).join("\n\n"))}(e);const i=new GraphQLError("Too many validation errors, error limit reached. Validation aborted."),o=[],s=new TypeInfo(e),a=new ValidationContext(e,t,s,(e=>{if(o.length>=100)throw i;o.push(e)}),!1),c=pt(n.map((e=>e(a))));try{lt(t,yr(s,c))}catch(e){if(e!==i)throw e;o.push(i)}return o}function mi(e,n){t(e)&&t(e.__schema)||xe(0,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${Ge(e)}.`);const r=e.__schema,i=new Map(r.types.map((e=>[e.name,f(e)])));for(const e of[...bn,...Hn])i.has(e.name)&&i.set(e.name,e);const o=null!=r.queryType?p(r.queryType):null,s=null!=r.mutationType?p(r.mutationType):null,a=null!=r.subscriptionType?p(r.subscriptionType):null,c=null!=r.directives?r.directives.map((function(e){if(null==e.args){const t=Ge(e);throw new Error(`Introspection result missing directive args: ${t}.`)}if(null==e.locations){const t=Ge(e);throw new Error(`Introspection result missing directive locations: ${t}.`)}return new GraphQLDirective({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:y(e.args)})})):[];return new GraphQLSchema({description:r.description,query:o,mutation:s,subscription:a,types:[...i.values()],directives:c,assumeValid:n?.assumeValid});function u(e){if(e.kind===Jn.LIST){const t=e.ofType;if(null==t)throw new Error("Decorated type deeper than introspection query.");return new GraphQLList(u(t))}if(e.kind===Jn.NON_NULL){const t=e.ofType;if(null==t)throw new Error("Decorated type deeper than introspection query.");const n=u(t);return new GraphQLNonNull(function(e){if(!jt(e))throw new Error(`Expected ${Ge(e)} to be a GraphQL nullable type.`);return e}(n))}return l(e)}function l(e){const t=e.name;if(!t)throw new Error(`Unknown type reference: ${Ge(e)}.`);const n=i.get(t);if(null==n)throw new Error(`Invalid or incomplete schema, unknown type: ${t}. Ensure that a full introspection query is used in order to build a client schema.`);return n}function p(e){return function(e){if(!wt(e))throw new Error(`Expected ${Ge(e)} to be a GraphQL Object type.`);return e}(l(e))}function d(e){return function(e){if(!Ot(e))throw new Error(`Expected ${Ge(e)} to be a GraphQL Interface type.`);return e}(l(e))}function f(e){switch(e.kind){case Jn.SCALAR:return new GraphQLScalarType({name:(r=e).name,description:r.description,specifiedByURL:r.specifiedByURL});case Jn.OBJECT:return new GraphQLObjectType({name:(n=e).name,description:n.description,interfaces:()=>h(n),fields:()=>m(n)});case Jn.INTERFACE:return new GraphQLInterfaceType({name:(t=e).name,description:t.description,interfaces:()=>h(t),fields:()=>m(t)});case Jn.UNION:return function(e){if(null==e.possibleTypes){const t=Ge(e);throw new Error(`Introspection result missing possibleTypes: ${t}.`)}return new GraphQLUnionType({name:e.name,description:e.description,types:()=>e.possibleTypes.map(p)})}(e);case Jn.ENUM:return function(e){if(null==e.enumValues){const t=Ge(e);throw new Error(`Introspection result missing enumValues: ${t}.`)}return new GraphQLEnumType({name:e.name,description:e.description,values:Xe(e.enumValues,(e=>e.name),(e=>({description:e.description,deprecationReason:e.deprecationReason})))})}(e);case Jn.INPUT_OBJECT:return function(e){if(null==e.inputFields){const t=Ge(e);throw new Error(`Introspection result missing inputFields: ${t}.`)}return new GraphQLInputObjectType({name:e.name,description:e.description,fields:()=>y(e.inputFields),isOneOf:e.isOneOf})}(e)}var t,n,r;throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${Ge(e)}.`)}function h(e){if(null===e.interfaces&&e.kind===Jn.INTERFACE)return[];if(null==e.interfaces){const t=Ge(e);throw new Error(`Introspection result missing interfaces: ${t}.`)}return e.interfaces.map(d)}function m(e){if(null==e.fields)throw new Error(`Introspection result missing fields: ${Ge(e)}.`);return Xe(e.fields,(e=>e.name),v)}function v(e){const t=u(e.type);if(!Ft(t)){const e=Ge(t);throw new Error(`Introspection must provide output type for fields, but received: ${e}.`)}if(null==e.args){const t=Ge(e);throw new Error(`Introspection result missing field args: ${t}.`)}return{description:e.description,deprecationReason:e.deprecationReason,type:t,args:y(e.args)}}function y(e){return Xe(e,(e=>e.name),g)}function g(e){const t=u(e.type);if(!$t(t)){const e=Ge(t);throw new Error(`Introspection must provide input type for arguments, but received: ${e}.`)}return{description:e.description,type:t,default:null!=e.defaultValue?{literal:Ve(e.defaultValue)}:void 0,deprecationReason:e.deprecationReason}}}const vi={SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD:"FIELD",ARGUMENT:"ARGUMENT",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD:"INPUT_FIELD",DIRECTIVE:"DIRECTIVE"};function yi(e,t){const r=t({getNamedType:u,setNamedType:function(e){i.set(e.name,e)},getNamedTypes:function(){return Array.from(i.values())}}),i=new Map;for(const t of e.types){const e=t.name,n=l(t);n&&i.set(e,n)}const o=[];for(const t of e.directives){if(Fn(t)){o.push(t);continue}const e=m(t.toConfig());e&&o.push(new GraphQLDirective(e))}const s={...e,query:e.query&&u(e.query.name),mutation:e.mutation&&u(e.mutation.name),subscription:e.subscription&&u(e.subscription.name),types:Array.from(i.values()),directives:o},a=r[vi.SCHEMA];return null==a?s:a(s);function c(e){return Dt(e)?new GraphQLList(c(e.ofType)):xt(e)?new GraphQLNonNull(c(e.ofType)):u(e.name)}function u(e){const t=gi.get(e)??i.get(e);return void 0!==t||n(0,`Unknown type: "${e}".`),t}function l(e){return Wn(e)||Nn(e)?e:Lt(e)?function(e){let t=e.toConfig();const n=r[vi.SCALAR];return t=null==n?t:n(t),new GraphQLScalarType(t)}(e):wt(e)?function(e){const t=e.toConfig();let n={...t,interfaces:()=>t.interfaces.map((e=>u(e.name))),fields:()=>p(t.fields,e.name)};const i=r[vi.OBJECT];return n=null==i?n:i(n),new GraphQLObjectType(n)}(e):Ot(e)?function(e){const t=e.toConfig();let n={...t,interfaces:()=>t.interfaces.map((e=>u(e.name))),fields:()=>p(t.fields,e.name)};const i=r[vi.INTERFACE];return n=null==i?n:i(n),new GraphQLInterfaceType(n)}(e):kt(e)?function(e){const t=e.toConfig();let n={...t,types:()=>t.types.map((e=>u(e.name)))};const i=r[vi.UNION];return n=null==i?n:i(n),new GraphQLUnionType(n)}(e):_t(e)?function(e){const t=e.toConfig();let n={...t,values:()=>{const n=Object.create(null);for(const[r,i]of Object.entries(t.values)){const t=f(i,r,e.name);n[r]=t}return n}};const i=r[vi.ENUM];return n=null==i?n:i(n),new GraphQLEnumType(n)}(e):At(e)?function(e){const t=e.toConfig();let n={...t,fields:()=>{const n=Object.create(null);for(const[r,i]of Object.entries(t.fields)){const t=h(i,r,e.name);n[r]=t}return n}};const i=r[vi.INPUT_OBJECT];return n=null==i?n:i(n),new GraphQLInputObjectType(n)}(e):void n(0,"Unexpected type: "+Ge(e))}function p(e,t){const n=Object.create(null);for(const[i,o]of Object.entries(e)){let e={...o,type:c(o.type),args:d(o.args,t,i)};const s=r[vi.FIELD];s&&(e=s(e,t)),n[i]=e}return n}function d(e,t,n){const i=Object.create(null);for(const[o,s]of Object.entries(e)){let e={...s,type:c(s.type)};const a=r[vi.ARGUMENT];a&&(e=a(e,t,n)),i[o]=e}return i}function f(e,t,n){const i={...e},o=r[vi.ENUM_VALUE];return null==o?i:o(i,t,n)}function h(e,t,n){const i={...e,type:c(e.type)},o=r[vi.INPUT_FIELD];return null==o?i:o(i,t,n)}function m(e){const t={...e,args:d(e.args,e.name,void 0)},n=r[vi.DIRECTIVE];return null==n?t:n(t)}}const gi=new Map([...bn,...Hn].map((e=>[e.name,e])));function Ti(e,t,r){const i=[],o=new AccumulatorMap,s=new AccumulatorMap,a=new AccumulatorMap,c=new AccumulatorMap,u=new AccumulatorMap,l=new AccumulatorMap,p=[];let d;const f=[];let h=!1;for(const e of t.definitions){switch(e.kind){case V:d=e;break;case W:f.push(e);break;case H:p.push(e);break;case M:case U:case J:case q:case K:case Y:i.push(e);break;case X:o.add(e.name.value,e);break;case Z:s.add(e.name.value,e);break;case ee:a.add(e.name.value,e);break;case te:c.add(e.name.value,e);break;case ne:u.add(e.name.value,e);break;case re:l.add(e.name.value,e);break;default:continue}h=!0}return h?yi(e,(e=>{const{getNamedType:t,setNamedType:h,getNamedTypes:m}=e;return{[vi.SCHEMA]:e=>{for(const e of i){const t=Ei.get(e.name.value)??I(e);h(t)}const n={query:e.query&&t(e.query.name),mutation:e.mutation&&t(e.mutation.name),subscription:e.subscription&&t(e.subscription.name),...d&&v([d]),...v(f)};return{description:d?.description?.value??e.description,...n,types:m(),directives:[...e.directives,...p.map(T)],extensions:e.extensions,astNode:d??e.astNode,extensionASTNodes:e.extensionASTNodes.concat(f),assumeValid:r?.assumeValid??!1}},[vi.INPUT_OBJECT]:e=>{const t=l.get(e.name)??[];return{...e,fields:()=>({...e.fields(),...N(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[vi.ENUM]:e=>{const t=u.get(e.name)??[];return{...e,values:()=>({...e.values(),...S(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[vi.SCALAR]:e=>{const t=o.get(e.name)??[];let n=e.specifiedByURL;for(const e of t)n=Ni(e)??n;return{...e,specifiedByURL:n,extensionASTNodes:e.extensionASTNodes.concat(t)}},[vi.OBJECT]:e=>{const t=s.get(e.name)??[];return{...e,interfaces:()=>[...e.interfaces(),...L(t)],fields:()=>({...e.fields(),...E(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[vi.INTERFACE]:e=>{const t=a.get(e.name)??[];return{...e,interfaces:()=>[...e.interfaces(),...L(t)],fields:()=>({...e.fields(),...E(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[vi.UNION]:e=>{const t=c.get(e.name)??[];return{...e,types:()=>[...e.types(),...w(t)],extensionASTNodes:e.extensionASTNodes.concat(t)}}};function v(e){const t={};for(const n of e){const e=n.operationTypes??[];for(const n of e)t[n.operation]=y(n.type)}return t}function y(e){const r=e.name.value,i=t(r);return void 0!==i||n(0,`Unknown type: "${r}".`),i}function g(e){return e.kind===C?new GraphQLList(g(e.type)):e.kind===R?new GraphQLNonNull(g(e.type)):y(e)}function T(e){return new GraphQLDirective({name:e.name.value,description:e.description?.value,locations:e.locations.map((({value:e})=>e)),isRepeatable:e.repeatable,args:b(e.arguments),astNode:e})}function E(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e)t[n.name.value]={type:g(n.type),description:n.description?.value,args:b(n.arguments),deprecationReason:bi(n),astNode:n}}return t}function b(e){const t=e??[],n=Object.create(null);for(const e of t){const t=g(e.type);n[e.name.value]={type:t,description:e.description?.value,default:e.defaultValue&&{literal:e.defaultValue},deprecationReason:bi(e),astNode:e}}return n}function N(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e){const e=g(n.type);t[n.name.value]={type:e,description:n.description?.value,default:n.defaultValue&&{literal:n.defaultValue},deprecationReason:bi(n),astNode:n}}}return t}function S(e){const t=Object.create(null);for(const n of e){const e=n.values??[];for(const n of e)t[n.name.value]={description:n.description?.value,deprecationReason:bi(n),astNode:n}}return t}function L(e){return e.flatMap((e=>e.interfaces?.map(y)??[]))}function w(e){return e.flatMap((e=>e.types?.map(y)??[]))}function I(e){const t=e.name.value;switch(e.kind){case U:{const n=s.get(t)??[],r=[e,...n];return new GraphQLObjectType({name:t,description:e.description?.value,interfaces:()=>L(r),fields:()=>E(r),astNode:e,extensionASTNodes:n})}case J:{const n=a.get(t)??[],r=[e,...n];return new GraphQLInterfaceType({name:t,description:e.description?.value,interfaces:()=>L(r),fields:()=>E(r),astNode:e,extensionASTNodes:n})}case K:{const n=u.get(t)??[],r=[e,...n];return new GraphQLEnumType({name:t,description:e.description?.value,values:()=>S(r),astNode:e,extensionASTNodes:n})}case q:{const n=c.get(t)??[],r=[e,...n];return new GraphQLUnionType({name:t,description:e.description?.value,types:()=>w(r),astNode:e,extensionASTNodes:n})}case M:{const n=o.get(t)??[];return new GraphQLScalarType({name:t,description:e.description?.value,specifiedByURL:Ni(e),astNode:e,extensionASTNodes:n})}case Y:{const r=l.get(t)??[],i=[e,...r];return new GraphQLInputObjectType({name:t,description:e.description?.value,fields:()=>N(i),astNode:e,extensionASTNodes:r,isOneOf:(n=e,Boolean(Wr(xn,n)))})}}var n}})):e}const Ei=new Map([...bn,...Hn].map((e=>[e.name,e])));function bi(e){const t=Wr(An,e);return t?.reason}function Ni(e){const t=Wr(Dn,e);return t?.url}function Si(e){return function(e,t,r){const i=e.getDirectives().filter(t),o=Object.values(e.getTypeMap()).filter(r);return[wi(e),...i.map((e=>function(e){return xi(e)+`directive ${e}`+_i(e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}(e))),...o.map((e=>function(e){if(Lt(e))return function(e){return xi(e)+`scalar ${e}`+function(e){if(null==e.specifiedByURL)return"";return` @specifiedBy(url: ${ft({kind:k,value:e.specifiedByURL})})`}(e)}(e);if(wt(e))return function(e){return xi(e)+`type ${e}`+Ii(e)+Oi(e)}(e);if(Ot(e))return function(e){return xi(e)+`interface ${e}`+Ii(e)+Oi(e)}(e);if(kt(e))return function(e){const t=e.getTypes(),n=t.length?" = "+t.join(" | "):"";return xi(e)+`union ${e.name}`+n}(e);if(_t(e))return function(e){const t=e.getValues().map(((e,t)=>xi(e,"  ",!t)+"  "+e.name+Di(e.deprecationReason)));return xi(e)+`enum ${e}`+ki(t)}(e);if(At(e))return function(e){const t=Object.values(e.getFields()).map(((e,t)=>xi(e,"  ",!t)+"  "+Ai(e)));return xi(e)+`input ${e}`+(e.isOneOf?" @oneOf":"")+ki(t)}(e);n(0,"Unexpected type: "+Ge(e))}(e)))].filter(Boolean).join("\n\n")}(e,(e=>!Fn(e)),Li)}function Li(e){return!Nn(e)&&!Wn(e)}function wi(e){const t=e.getQueryType(),n=e.getMutationType(),r=e.getSubscriptionType();if(t||n||r)return null==e.description&&function(e){return e.getQueryType()==e.getType("Query")&&e.getMutationType()==e.getType("Mutation")&&e.getSubscriptionType()==e.getType("Subscription")}(e)?void 0:xi(e)+"schema {\n"+(t?`  query: ${t}\n`:"")+(n?`  mutation: ${n}\n`:"")+(r?`  subscription: ${r}\n`:"")+"}"}function Ii(e){const t=e.getInterfaces();return t.length?" implements "+t.map((e=>e.name)).join(" & "):""}function Oi(e){return ki(Object.values(e.getFields()).map(((e,t)=>xi(e,"  ",!t)+"  "+e.name+_i(e.args,"  ")+": "+String(e.type)+Di(e.deprecationReason))))}function ki(e){return 0!==e.length?" {\n"+e.join("\n")+"\n}":""}function _i(e,t=""){return 0===e.length?"":e.every((e=>null==e.description))?"("+e.map(Ai).join(", ")+")":"(\n"+e.map(((e,n)=>xi(e,"  "+t,!n)+"  "+t+Ai(e))).join("\n")+"\n"+t+")"}function Ai(e){let t=e.name+": "+String(e.type);const n=Cn(e);return n&&(t+=` = ${ft(n)}`),t+Di(e.deprecationReason)}function Di(e){if(null==e)return"";if(e!==_n){return` @deprecated(reason: ${ft({kind:k,value:e})})`}return" @deprecated"}function xi(e,t="",n=!0){const{description:r}=e;if(null==r)return"";return(t&&!n?"\n"+t:t)+ft({kind:k,value:r,block:de(r)}).replaceAll("\n","\n"+t)+"\n"}function $i(e){const t=[];for(const n of e)t.push(...n.definitions);return{kind:m,definitions:t}}const Fi=[Ir];function Gi(e){var t;const n=function(e){if(e)return function(t){const n=e;return{Field(e){var r;const i=(null!==(r=e.alias)&&void 0!==r?r:e.name).value,o=i.charAt(0).toLowerCase()+i.slice(1);n.includes(o)&&t.reportError(new GraphQLError(`Field name "${i}" is not allowed because it conflicts with generated object APIs. Please use an alias to change the field name.`,{nodes:e}))}}};return}(null===(t=e.disallowedFieldNames)||void 0===t?void 0:t.allFields),r=function(e){if(e)return function(t){const n=e;return{VariableDefinition(e){const r=e.variable.name.value,i=r.charAt(0).toLowerCase()+r.slice(1);n.includes(i)&&t.reportError(new GraphQLError(`Input Parameter name "${r}" is not allowed because it conflicts with generated object APIs.`,{nodes:e}))}}};return}(e.disallowedInputParameterNames);return[Qi,Ci,Ri,Vi,...n?[n]:[],...r?[r]:[],...di.filter((e=>!Fi.includes(e)))]}function Qi(e){return{OperationDefinition:t=>(t.name||e.reportError(new GraphQLError("Apollo does not support anonymous operations because operation names are used during code generation. Please give this operation a name.",{nodes:t})),!1)}}function Ci(e){return{Field(t){"__typename"==(t.alias&&t.alias.value)&&e.reportError(new GraphQLError("Apollo needs to be able to insert __typename when needed, so using it as an alias is not supported.",{nodes:t}))}}}function Ri(e){return{InlineFragment(t){if(t.directives)for(const n of t.directives)n.name.value==On.name&&null==t.typeCondition&&e.reportError(new GraphQLError("Apollo does not support deferred inline fragments without a type condition. Please add a type condition to this inline fragment.",{nodes:t}))}}}function Vi(e){return{InlineFragment(t){var n;if(t.directives)for(const r of t.directives)r.name.value!=On.name||(null===(n=r.arguments)||void 0===n?void 0:n.find((e=>"label"==e.name.value)))||e.reportError(new GraphQLError("Apollo does not support deferred inline fragments without a 'label' argument. Please add a 'label' argument to the @defer directive on this inline fragment.",{nodes:t}))}}}function ji(e){return{kind:h,value:e}}function Mi(e){return{kind:k,value:e}}function Ui(e){return{kind:H,description:e.description?Mi(e.description):void 0,name:ji(e.name),repeatable:!1,locations:e.locations.map((e=>ji(e))),arguments:e.args.map((e=>function(e){return{kind:B,description:Mi(e.description),name:ji(e.name),type:Pi(Ut(e.type))}}(e)))}}function Pi(e){return{kind:Q,name:ji(e.name)}}function Bi(e){return{kind:R,type:e}}const Ji={kind:H,description:Mi("A directive used by the Apollo iOS client to annotate operations or fragments that should be used exclusively for generating local cache mutations instead of as standard operations."),name:ji("apollo_client_ios_localCacheMutation"),repeatable:!1,locations:[ji("QUERY"),ji("MUTATION"),ji("SUBSCRIPTION"),ji("FRAGMENT_DEFINITION")]},qi={kind:H,description:Mi("Attach extra information to a given type."),name:ji("typePolicy"),arguments:[{kind:B,description:Mi("A selection set containing fields used to compute the cache key of an object. Referenced fields must have non-nullable scalar types. Order is important."),name:ji("keyFields"),type:Bi(Pi(gn))}],repeatable:!1,locations:[ji("OBJECT"),ji("INTERFACE")]},Ki={kind:H,description:Mi("A directive used by the Apollo iOS code generation engine to generate custom import statements in operation or fragment definition files. An import statement to import a module with the name provided in the `module` argument will be added to the generated definition file."),name:ji("import"),arguments:[{kind:B,description:Mi("The name of the module to import."),name:ji("module"),type:Bi(Pi(gn))}],repeatable:!0,locations:[ji("QUERY"),ji("MUTATION"),ji("SUBSCRIPTION"),ji("FRAGMENT_DEFINITION")]},zi=[Ji,Ki,qi];const Yi={kind:T,name:{kind:h,value:"__typename"}};class GraphQLSchemaValidationError extends Error{constructor(e){super(e.map((e=>e.message)).join("\n\n")),this.validationErrors=e,this.name="GraphQLSchemaValidationError"}}function Hi(e){const t=function(e,t,n=fi){const r=[],i=new SDLValidationContext(e,t,(e=>{r.push(e)}));return lt(e,pt(n.map((e=>e(i))))),r}(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}function Wi(e){const t=er(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}function Xi(e){return e.startsWith("__")}const Zi={kind:T,name:{kind:h,value:"__typename"}};function eo(e,t){return t&&(e=function(e){return lt(e,{enter:e=>e.kind!==g?void 0:{...e,selections:e.selections.filter((e=>!("Field"===e.kind&&"__typename"===e.name.value)))},leave(e){if((e.kind===T||e.kind===L||e.kind===S)&&e.selectionSet)return{...e,selectionSet:{...e.selectionSet,selections:[Yi,...e.selectionSet.selections]}}}})}(e)),lt(e,{SelectionSet:{leave:(e,t,n)=>p(n)&&![T,L].includes(n.kind)?e:function(e){const t=e.selections.find((e=>e.kind==Zi.kind&&e.name.value==Zi.name.value));return t?e:{...e,selections:[Zi,...e.selections]}}(e)},Field:{enter:e=>function(e){return e.name.value==Zi.name.value?{...e,alias:void 0,directives:void 0}:e}(e)},Directive:{enter:e=>function(e){const t=[Ji,Ki];for(const n of t)if(e.name.value==n.name.value)return null;return e}(e)}})}function to(e){return null!=e}function no(e){switch(e.kind){case w:return{kind:e.kind,value:e.name.value};case x:return{kind:e.kind,value:e.values.map(no)};case $:return{kind:e.kind,value:e.fields.reduce(((e,t)=>(e[t.name.value]=no(t.value),e)),{})};default:return e}}function ro(e){var t,n;return null===(n=null===(t=e.loc)||void 0===t?void 0:t.source)||void 0===n?void 0:n.name}function io(e,t,n,r,i){var o,s,a;const c=new Map;for(const e of t.definitions)e.kind===L&&c.set(e.name.value,e);const u=[],l=new Map,p=new Set,d=r,f=e.getQueryType();if(void 0===f)throw new GraphQLError("GraphQL Schema must contain a 'query' root type definition.",{});const h={queryType:f,mutationType:null!==(o=e.getMutationType())&&void 0!==o?o:void 0,subscriptionType:null!==(s=e.getSubscriptionType())&&void 0!==s?s:void 0};for(const e of t.definitions)e.kind===v&&u.push(g(e));for(const[e,t]of c.entries())l.set(e,E(t));return{rootTypes:h,operations:u,fragments:Array.from(l.values()),referencedTypes:Array.from(p.values()),schemaDocumentation:null!==(a=e.description)&&void 0!==a?a:void 0};function m(t){if(!p.has(t)){if(p.add(t),Ot(t)){const n=e.getPossibleTypes(t);t._implementingObjects=n;for(const e of n)d&&!y(e)||m(Ut(e))}if(kt(t)){const e=t.getTypes();for(t of e)m(Ut(t))}if(At(t)&&function(e){const t=e.getFields();for(const e in t){m(Ut(t[e].type))}}(t),wt(t))for(const e of t.getInterfaces())m(Ut(e))}}function y(e){var t,n;const r=qi.name.value;for(const i of null!==(n=null===(t=e.astNode)||void 0===t?void 0:t.directives)&&void 0!==n?n:[])if(i.name.value===r)return!0;return!1}function g(t){var r;if(!t.name)throw new GraphQLError("Operations should be named",{nodes:t});const i=ro(t),o=t.name.value,s=t.operation,a=new Set,c=(t.variableDefinitions||[]).map((t=>{const n=t.variable.name.value,r=t.defaultValue?no(t.defaultValue):void 0,i=vr(e,t.type);if(!i)throw new GraphQLError(`Couldn't get type from type node "${t.type}"`,{nodes:t});return m(Ut(i)),{name:n,type:i,defaultValue:r}})),u=ft(eo(t,n)),l=e.getRootType(s),[p]=null!==(r=O(t.directives))&&void 0!==r?r:[void 0,void 0];return m(l),{name:o,operationType:s,variables:c,rootType:l,selectionSet:b(t.selectionSet,l,a),directives:p,referencedFragments:Array.from(a.values()),source:u,filePath:i}}function E(t){var r;const i=t.name.value,o=ro(t),s=ft(eo(t,n)),a=new Set,c=vr(e,t.typeCondition),[u]=null!==(r=O(t.directives))&&void 0!==r?r:[void 0,void 0];return m(Ut(c)),{name:i,filePath:o,source:s,typeCondition:c,selectionSet:b(t.selectionSet,c,a),directives:u,referencedFragments:Array.from(a.values())}}function b(t,n,r){return{parentType:n,selections:t.selections.map((t=>function(t,n,r){var o,s,a,u;const[p,d]=null!==(o=O(t.directives))&&void 0!==o?o:[void 0,void 0];switch(t.kind){case T:{const f=t.name.value;if("__typename"==f)return;const h=null===(s=t.alias)||void 0===s?void 0:s.value,v=function(e,t,n){return n===Kn.name&&e.getQueryType()===t?Kn:n===zn.name&&e.getQueryType()===t?zn:n===Yn.name&&(wt(t)||Ot(t)||kt(t))?Yn:wt(t)||Ot(t)?t.getFields()[n]:void 0}(e,n,f);if(!v)throw new GraphQLError(`Cannot query field "${f}" on type "${String(n)}"`,{nodes:t});const y=v.type,g=Ut(v.type);m(Ut(g));const{description:L,deprecationReason:w}=v;let k={kind:"Field",name:f,alias:h,type:y,arguments:I(v,t.arguments),inclusionConditions:d,description:!Xi(f)&&L?L:void 0,deprecationReason:w||void 0,directives:p};function _(e,t,n){var r;if(t&&n){const i=(null!==(r=e.alias)&&void 0!==r?r:e.name).value,o=i.charAt(0).toLowerCase()+i.slice(1);if(null==t?void 0:t.includes(o))throw new GraphQLError(`Schema name "${n}" conflicts with name of a generated object API. Please choose a different schema name. Suggestions: "${n}Schema", "${n}GraphQL", "${n}API"`,{nodes:e})}}if(Dt(y)||xt(y)&&Dt(y.ofType)?_(t,null===(a=i.disallowedFieldNames)||void 0===a?void 0:a.entityList,i.schemaNamespace):Ct(g)&&_(t,null===(u=i.disallowedFieldNames)||void 0===u?void 0:u.entity,i.schemaNamespace),Ct(g)){const A=t.selectionSet;if(!A)throw new GraphQLError(`Composite field "${f}" on type "${String(n)}" requires selection set`,{nodes:t});k.selectionSet=b(A,g,r)}return k}case S:{const D=t.typeCondition,x=D?vr(e,D):n;return m(x),{kind:"InlineFragment",selectionSet:b(t.selectionSet,x,r),inclusionConditions:d,directives:p}}case N:{const $=t.name.value,F=function(e){let t=l.get(e);if(t)return t;const n=c.get(e);return n?(c.delete(e),t=E(n),l.set(e,t),t):void 0}($);if(!F)throw new GraphQLError(`Unknown fragment "${$}".`,{nodes:t.name});r.add(F);return{kind:"FragmentSpread",fragment:F,inclusionConditions:d,directives:p}}}}(t,n,r))).filter(to)}}function I(...e){const t=e[0].args;return e[1]&&e[1].length>0?e[1].map((e=>{var n;const r=e.name.value,i=t.find((t=>t.name===e.name.value)),o=null==i?void 0:i.type;if(!o)throw new GraphQLError(`Cannot find directive argument type for argument "${r}".`,{nodes:[e]});return{name:r,value:no(e.value),type:o,deprecationReason:null!==(n=i.deprecationReason)&&void 0!==n?n:void 0}})):void 0}function O(t){if(t&&t.length>0){const n=[],r=[];for(const i of t){const t=i.name.value,o=e.getDirective(t);if(!o)throw new GraphQLError(`Cannot find directive "${t}".`,{nodes:i});n.push({name:t,arguments:I(o,i.arguments)});const s=k(i,o);s&&r.push(s)}return[n,r.length>0?r:void 0]}}function k(e,t){var n;if("include"==t.name||"skip"==t.name){const r=null===(n=e.arguments)||void 0===n?void 0:n[0].value,i="skip"==t.name;switch(null==r?void 0:r.kind){case _:return i?r.value?"SKIPPED":"INCLUDED":r.value?"INCLUDED":"SKIPPED";case w:return{variable:r.name.value,isInverted:i};default:throw new GraphQLError('Conditional inclusion directive has invalid "if" argument.',{nodes:e})}}}}function oo(e){return e.kind===H&&e.name.value===On.name}function so(){return{kind:m,definitions:[Ui(On)]}}const ao=qi.name.value;function co(e,t){var n,r;return(null!==(n=e.arguments)&&void 0!==n?n:[]).map((e=>JSON.stringify([e.name.value,bt(e.value)]))).sort().toString()===(null!==(r=t.arguments)&&void 0!==r?r:[]).map((e=>JSON.stringify([e.name.value,bt(e.value)]))).sort().toString()}function uo(e){var t,n,r,i;if(kt(e))return;for(const r of null!==(t=e.extensionASTNodes)&&void 0!==t?t:[]){const t=null===(n=r.directives)||void 0===n?void 0:n.find((e=>e.name.value===ao));if(t)return{directive:t,source:e}}let o;for(const t of null!==(i=null===(r=e.astNode)||void 0===r?void 0:r.directives)&&void 0!==i?i:[])if(t.name.value===ao){o={directive:t,source:e};break}if("getInterfaces"in e)for(const t of e.getInterfaces()){const n=uo(t);if(n)if(o){if(!co(o.directive,n.directive))throw o.source===e?new GraphQLError(`Type "${e.name}" has a @typePolicy directive which conflicts with the @typePolicy directive on interface "${n.source.name}".`,{nodes:e.astNode}):new GraphQLError(`Type "${e.name}" inherits conflicting @typePolicy directives from interfaces "${o.source.name}" and "${n.source.name}".`,{nodes:e.astNode})}else o=n}return o}function lo(e){var t,n,r;const i=uo(e);if(!i)return[];const o=null===(r=null===(n=null===(t=i.directive)||void 0===t?void 0:t.arguments)||void 0===n?void 0:n.find((e=>"keyFields"===e.name.value)))||void 0===r?void 0:r.value;if(!o||o.kind!==k)return[];const s=o.value.split(" ");return function(e,t){const{directive:n,source:r}=e;if(kt(r))return;const i=Ot(r)?"interface":"object";var o=r.getFields();for(const e of t){if(!e)throw new GraphQLError("Key fields must be a space-separated list of identifiers.",{nodes:n});const t=o[e];if(!t)throw new GraphQLError(`Key field "${e}" does not exist on ${i} "${r.name}".`,{nodes:r.astNode?[r.astNode,n]:n});if(!xt(t.type))throw new GraphQLError(`Key field "${e}" on ${i} "${r.name}" must be non-nullable.`,{nodes:t.astNode?[t.astNode,n]:n});if(!Lt(t.type.ofType))throw new GraphQLError(`Key field "${e}" on ${i} "${r.name}" must be a scalar type, got ${t.type}.`,{nodes:t.astNode?[t.astNode,n]:n})}}(i,s),s}function po(e){const t=e.getTypeMap();for(const e in t){const n=t[e];(n instanceof GraphQLObjectType||n instanceof GraphQLInterfaceType)&&(n._apolloKeyFields=lo(n))}}return e.GraphQLEnumType=GraphQLEnumType,e.GraphQLError=GraphQLError,e.GraphQLInputObjectType=GraphQLInputObjectType,e.GraphQLInterfaceType=GraphQLInterfaceType,e.GraphQLObjectType=GraphQLObjectType,e.GraphQLScalarType=GraphQLScalarType,e.GraphQLSchema=GraphQLSchema,e.GraphQLSchemaValidationError=GraphQLSchemaValidationError,e.GraphQLUnionType=GraphQLUnionType,e.Source=Source,e.compileDocument=function(e,t,n,r,i){return io(e,t,n,r,i)},e.loadSchemaFromSources=function(e){var t,n=new Array;for(const r of e)if(r.name.endsWith(".json")){if(t)throw new Error(`Schema search paths can only include one JSON schema definition.\n        Found "${t.name} & "${r.name}".`);t=r}else n.push(Re(r));var r=function(e){const t=zi.filter((t=>!e.definitions.some((e=>e.kind==H&&e.name.value==t.name.value))));return $i([e,{kind:m,definitions:t}])}($i(n));if(t){var i=function(e){let t=JSON.parse(e);t.data&&(t=t.data);const n=mi(t);return n}(t.body);return r=function(e,t){const n=e.getDirective(On.name);return n?function(e,t){return e.isRepeatable===t.isRepeatable&&e.locations.slice(0).sort().toString()===t.locations.slice(0).sort().toString()&&e.args.map((e=>e.name)).sort().toString()===t.args.map((e=>e.name)).sort().toString()}(n,On)?t:(console.warn(`Unsupported ${n.name} directive found. It will be replaced with a supported definition instead.`),$i([t,so()])):$i([t,so()])}(i,r),po(i=function(e,t,n){Xn(e);const r=e.toConfig(),i=Ti(r,t,n);return r===i?e:new GraphQLSchema(i)}(i,r,{assumeValid:!0})),Wi(i),i}{Hi(r=function(e){const t=e.definitions.find(oo);if(!t)return $i([e,so()]);const n=t;if(!function(e,t){var n;return e.repeatable===t.isRepeatable&&e.locations.map((e=>e.value)).sort().toString()===t.locations.slice(0).sort().toString()&&(null===(n=e.arguments)||void 0===n?void 0:n.map((e=>e.name.value)).sort().toString())===t.args.map((e=>e.name)).sort().toString()}(n,On))return console.warn(`Unsupported ${n.name.value} directive found. It will be replaced with a supported definition instead.`),{kind:m,definitions:e.definitions.filter((e=>oo(e)?void 0:e)).concat(Ui(On))};return e}(r));const e=function(e,t){const n=Ti({description:void 0,types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:!1},e,t);if(null==n.astNode)for(const e of n.types)switch(e.name){case"Query":n.query=e;break;case"Mutation":n.mutation=e;break;case"Subscription":n.subscription=e}const r=[...n.directives,...$n.filter((e=>n.directives.every((t=>t.name!==e.name))))];return new GraphQLSchema({...n,directives:r})}(r,{assumeValid:!0});return po(e),Wi(e),e}},e.mergeDocuments=function(e){return $i(e)},e.parseOperationDocument=function(e){return Re(e)},e.printSchemaToSDL=function(e){return Si(e)},e.validateDocument=function(e,t,n){return hi(e,t,Gi(n))},e}({});"#