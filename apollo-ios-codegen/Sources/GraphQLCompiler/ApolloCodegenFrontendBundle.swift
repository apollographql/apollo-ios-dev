let ApolloCodegenFrontendBundle: String = #"var ApolloCodegenFrontend=function(e){"use strict";function t(e){return"object"==typeof e&&null!==e}function n(e,t){throw new Error(t??"Unexpected invariant triggered.")}const r=/\r\n|[\n\r]/g;function i(e,t){let i=0,o=1;for(const s of e.body.matchAll(r)){if("number"==typeof s.index||n(),s.index>=t)break;i=s.index+s[0].length,o+=1}return{line:o,column:t+1-i}}function o(e){return s(e.source,i(e.source,e.start))}function s(e,t){const n=e.locationOffset.column-1,r="".padStart(n)+e.body,i=t.line-1,o=e.locationOffset.line-1,s=t.line+o,c=1===t.line?n:0,u=t.column+c,l=`${e.name}:${s}:${u}\n`,p=r.split(/\r\n|[\n\r]/g),d=p[i];if(d.length>120){const e=Math.floor(u/80),t=u%80,n=[];for(let e=0;e<d.length;e+=80)n.push(d.slice(e,e+80));return l+a([[`${s} |`,n[0]],...n.slice(1,e+1).map(e=>["|",e]),["|","^".padStart(t)],["|",n[e+1]]])}return l+a([[s-1+" |",p[i-1]],[`${s} |`,d],["|","^".padStart(u)],[`${s+1} |`,p[i+1]]])}function a(e){const t=e.filter(([e,t])=>void 0!==t),n=Math.max(...t.map(([e])=>e.length));return t.map(([e,t])=>e.padStart(n)+(t?" "+t:"")).join("\n")}class GraphQLError extends Error{constructor(e,n={}){const{nodes:r,source:o,positions:s,path:a,originalError:u,extensions:l}=n;super(e),this.name="GraphQLError",this.path=a??void 0,this.originalError=u??void 0,this.nodes=c(Array.isArray(r)?r:r?[r]:void 0);const p=c(this.nodes?.map(e=>e.loc).filter(e=>null!=e));this.source=o??p?.[0]?.source,this.positions=s??p?.map(e=>e.start),this.locations=s&&o?s.map(e=>i(o,e)):p?.map(e=>i(e.source,e.start));const d=t(u?.extensions)?u?.extensions:void 0;this.extensions=l??d??Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),null!=u?.stack?Object.defineProperty(this,"stack",{value:u.stack,writable:!0,configurable:!0}):null!=Error.captureStackTrace?Error.captureStackTrace(this,GraphQLError):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let e=this.message;if(this.nodes)for(const t of this.nodes)t.loc&&(e+="\n\n"+o(t.loc));else if(this.source&&this.locations)for(const t of this.locations)e+="\n\n"+s(this.source,t);return e}toJSON(){const e={message:this.message};return null!=this.locations&&(e.locations=this.locations),null!=this.path&&(e.path=this.path),null!=this.extensions&&Object.keys(this.extensions).length>0&&(e.extensions=this.extensions),e}}function c(e){return void 0===e||0===e.length?void 0:e}function u(e,t,n){return new GraphQLError(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Location{constructor(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class Token{constructor(e,t,n,r,i,o){this.kind=e,this.start=t,this.end=n,this.line=r,this.column=i,this.value=o,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const l={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentArgument:["name","value"],FragmentSpread:["name","arguments","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},p=new Set(Object.keys(l));function d(e){const t=e?.kind;return"string"==typeof t&&p.has(t)}const f={QUERY:"query",MUTATION:"mutation",SUBSCRIPTION:"subscription"},h={QUERY:"QUERY",MUTATION:"MUTATION",SUBSCRIPTION:"SUBSCRIPTION",FIELD:"FIELD",FRAGMENT_DEFINITION:"FRAGMENT_DEFINITION",FRAGMENT_SPREAD:"FRAGMENT_SPREAD",INLINE_FRAGMENT:"INLINE_FRAGMENT",VARIABLE_DEFINITION:"VARIABLE_DEFINITION",SCHEMA:"SCHEMA",SCALAR:"SCALAR",OBJECT:"OBJECT",FIELD_DEFINITION:"FIELD_DEFINITION",ARGUMENT_DEFINITION:"ARGUMENT_DEFINITION",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",ENUM_VALUE:"ENUM_VALUE",INPUT_OBJECT:"INPUT_OBJECT",INPUT_FIELD_DEFINITION:"INPUT_FIELD_DEFINITION",FRAGMENT_VARIABLE_DEFINITION:"FRAGMENT_VARIABLE_DEFINITION"},m="Name",v="Document",y="OperationDefinition",g="VariableDefinition",T="SelectionSet",b="Field",E="Argument",N="FragmentArgument",w="FragmentSpread",S="InlineFragment",I="FragmentDefinition",L="Variable",k="IntValue",O="FloatValue",_="StringValue",x="BooleanValue",D="NullValue",$="EnumValue",A="ListValue",G="ObjectValue",F="ObjectField",Q="Directive",V="NamedType",C="ListType",j="NonNullType",R="SchemaDefinition",M="OperationTypeDefinition",U="ScalarTypeDefinition",P="ObjectTypeDefinition",B="FieldDefinition",q="InputValueDefinition",J="InterfaceTypeDefinition",K="UnionTypeDefinition",z="EnumTypeDefinition",Y="EnumValueDefinition",H="InputObjectTypeDefinition",W="DirectiveDefinition",X="SchemaExtension",Z="ScalarTypeExtension",ee="ObjectTypeExtension",te="InterfaceTypeExtension",ne="UnionTypeExtension",re="EnumTypeExtension",ie="InputObjectTypeExtension";var oe=Object.freeze({__proto__:null,ARGUMENT:E,BOOLEAN:x,DIRECTIVE:Q,DIRECTIVE_DEFINITION:W,DOCUMENT:v,ENUM:$,ENUM_TYPE_DEFINITION:z,ENUM_TYPE_EXTENSION:re,ENUM_VALUE_DEFINITION:Y,FIELD:b,FIELD_DEFINITION:B,FLOAT:O,FRAGMENT_ARGUMENT:N,FRAGMENT_DEFINITION:I,FRAGMENT_SPREAD:w,INLINE_FRAGMENT:S,INPUT_OBJECT_TYPE_DEFINITION:H,INPUT_OBJECT_TYPE_EXTENSION:ie,INPUT_VALUE_DEFINITION:q,INT:k,INTERFACE_TYPE_DEFINITION:J,INTERFACE_TYPE_EXTENSION:te,LIST:A,LIST_TYPE:C,NAME:m,NAMED_TYPE:V,NON_NULL_TYPE:j,NULL:D,OBJECT:G,OBJECT_FIELD:F,OBJECT_TYPE_DEFINITION:P,OBJECT_TYPE_EXTENSION:ee,OPERATION_DEFINITION:y,OPERATION_TYPE_DEFINITION:M,SCALAR_TYPE_DEFINITION:U,SCALAR_TYPE_EXTENSION:Z,SCHEMA_DEFINITION:R,SCHEMA_EXTENSION:X,SELECTION_SET:T,STRING:_,UNION_TYPE_DEFINITION:K,UNION_TYPE_EXTENSION:ne,VARIABLE:L,VARIABLE_DEFINITION:g});function se(e){return 9===e||32===e}function ae(e){return e>=48&&e<=57}function ce(e){return e>=97&&e<=122||e>=65&&e<=90}function ue(e){return ce(e)||95===e}function le(e){return ce(e)||ae(e)||95===e}function pe(e){let t=Number.MAX_SAFE_INTEGER,n=null,r=-1;for(let i=0;i<e.length;++i){const o=e[i],s=de(o);s!==o.length&&(n??=i,r=i,0!==i&&s<t&&(t=s))}return e.map((e,n)=>0===n?e:e.slice(t)).slice(n??0,r+1)}function de(e){let t=0;for(;t<e.length&&se(e.charCodeAt(t));)++t;return t}function fe(e){if(""===e)return!0;let t=!0,n=!1,r=!0,i=!1;for(let o=0;o<e.length;++o)switch(e.codePointAt(o)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:case 13:return!1;case 10:if(t&&!i)return!1;i=!0,t=!0,n=!1;break;case 9:case 32:n||=t;break;default:r&&=n,t=!1}return!t&&(!r||!i)}const he="<SOF>",me="<EOF>",ve="!",ye="$",ge="&",Te="(",be=")",Ee="...",Ne=":",we="=",Se="@",Ie="[",Le="]",ke="{",Oe="|",_e="}",xe="Name",De="Int",$e="Float",Ae="String",Ge="BlockString",Fe="Comment";class Lexer{constructor(e){const t=new Token(he,0,0,0,0);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){this.lastToken=this.token;return this.token=this.lookahead()}lookahead(){let e=this.token;if(e.kind!==me)do{if(e.next)e=e.next;else{const t=Ue(this,e.end);e.next=t,t.prev=e,e=t}}while(e.kind===Fe);return e}}function Qe(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function Ve(e,t){return Ce(e.charCodeAt(t))&&je(e.charCodeAt(t+1))}function Ce(e){return e>=55296&&e<=56319}function je(e){return e>=56320&&e<=57343}function Re(e,t){const n=e.source.body.codePointAt(t);if(void 0===n)return me;if(n>=32&&n<=126){const e=String.fromCodePoint(n);return'"'===e?"'\"'":`"${e}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function Me(e,t,n,r,i){const o=e.line,s=1+n-e.lineStart;return new Token(t,n,r,o,s,i)}function Ue(e,t){const n=e.source.body,r=n.length;let i=t;for(;i<r;){const t=n.charCodeAt(i);switch(t){case 65279:case 9:case 32:case 44:++i;continue;case 10:++i,++e.line,e.lineStart=i;continue;case 13:10===n.charCodeAt(i+1)?i+=2:++i,++e.line,e.lineStart=i;continue;case 35:return Pe(e,i);case 33:return Me(e,ve,i,i+1);case 36:return Me(e,ye,i,i+1);case 38:return Me(e,ge,i,i+1);case 40:return Me(e,Te,i,i+1);case 41:return Me(e,be,i,i+1);case 46:{const t=n.charCodeAt(i+1);if(46===t&&46===n.charCodeAt(i+2))return Me(e,Ee,i,i+3);if(46===t)throw u(e.source,i,'Unexpected "..", did you mean "..."?');if(ae(t)){const n=e.source.body.slice(i+1,qe(e,i+1,t));throw u(e.source,i,`Invalid number, expected digit before ".", did you mean "0.${n}"?`)}break}case 58:return Me(e,Ne,i,i+1);case 61:return Me(e,we,i,i+1);case 64:return Me(e,Se,i,i+1);case 91:return Me(e,Ie,i,i+1);case 93:return Me(e,Le,i,i+1);case 123:return Me(e,ke,i,i+1);case 124:return Me(e,Oe,i,i+1);case 125:return Me(e,_e,i,i+1);case 34:return 34===n.charCodeAt(i+1)&&34===n.charCodeAt(i+2)?Xe(e,i):Je(e,i)}if(ae(t)||45===t)return Be(e,i,t);if(ue(t))return Ze(e,i);throw u(e.source,i,39===t?"Unexpected single quote character ('), did you mean to use a double quote (\")?":Qe(t)||Ve(n,i)?`Unexpected character: ${Re(e,i)}.`:`Invalid character: ${Re(e,i)}.`)}return Me(e,me,r,r)}function Pe(e,t){const n=e.source.body,r=n.length;let i=t+1;for(;i<r;){const e=n.charCodeAt(i);if(10===e||13===e)break;if(Qe(e))++i;else{if(!Ve(n,i))break;i+=2}}return Me(e,Fe,t,i,n.slice(t+1,i))}function Be(e,t,n){const r=e.source.body;let i=t,o=n,s=!1;if(45===o&&(o=r.charCodeAt(++i)),48===o){if(o=r.charCodeAt(++i),ae(o))throw u(e.source,i,`Invalid number, unexpected digit after 0: ${Re(e,i)}.`)}else i=qe(e,i,o),o=r.charCodeAt(i);if(46===o&&(s=!0,o=r.charCodeAt(++i),i=qe(e,i,o),o=r.charCodeAt(i)),69!==o&&101!==o||(s=!0,o=r.charCodeAt(++i),43!==o&&45!==o||(o=r.charCodeAt(++i)),i=qe(e,i,o),o=r.charCodeAt(i)),46===o||ue(o))throw u(e.source,i,`Invalid number, expected digit but got: ${Re(e,i)}.`);return Me(e,s?$e:De,t,i,r.slice(t,i))}function qe(e,t,n){if(!ae(n))throw u(e.source,t,`Invalid number, expected digit but got: ${Re(e,t)}.`);const r=e.source.body;let i=t+1;for(;ae(r.charCodeAt(i));)++i;return i}function Je(e,t){const n=e.source.body,r=n.length;let i=t+1,o=i,s="";for(;i<r;){const r=n.charCodeAt(i);if(34===r)return s+=n.slice(o,i),Me(e,Ae,t,i+1,s);if(92===r){s+=n.slice(o,i);const t=117===n.charCodeAt(i+1)?123===n.charCodeAt(i+2)?Ke(e,i):ze(e,i):We(e,i);s+=t.value,i+=t.size,o=i;continue}if(10===r||13===r)break;if(Qe(r))++i;else{if(!Ve(n,i))throw u(e.source,i,`Invalid character within String: ${Re(e,i)}.`);i+=2}}throw u(e.source,i,"Unterminated string.")}function Ke(e,t){const n=e.source.body;let r=0,i=3;for(;i<12;){const e=n.charCodeAt(t+i++);if(125===e){if(i<5||!Qe(r))break;return{value:String.fromCodePoint(r),size:i}}if(r=r<<4|He(e),r<0)break}throw u(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+i)}".`)}function ze(e,t){const n=e.source.body,r=Ye(n,t+2);if(Qe(r))return{value:String.fromCodePoint(r),size:6};if(Ce(r)&&92===n.charCodeAt(t+6)&&117===n.charCodeAt(t+7)){const e=Ye(n,t+8);if(je(e))return{value:String.fromCodePoint(r,e),size:12}}throw u(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function Ye(e,t){return He(e.charCodeAt(t))<<12|He(e.charCodeAt(t+1))<<8|He(e.charCodeAt(t+2))<<4|He(e.charCodeAt(t+3))}function He(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function We(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:"\n",size:2};case 114:return{value:"\r",size:2};case 116:return{value:"\t",size:2}}throw u(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function Xe(e,t){const n=e.source.body,r=n.length;let i=e.lineStart,o=t+3,s=o,a="";const c=[];for(;o<r;){const r=n.charCodeAt(o);if(34===r&&34===n.charCodeAt(o+1)&&34===n.charCodeAt(o+2)){a+=n.slice(s,o),c.push(a);const r=Me(e,Ge,t,o+3,pe(c).join("\n"));return e.line+=c.length-1,e.lineStart=i,r}if(92!==r||34!==n.charCodeAt(o+1)||34!==n.charCodeAt(o+2)||34!==n.charCodeAt(o+3))if(10!==r&&13!==r)if(Qe(r))++o;else{if(!Ve(n,o))throw u(e.source,o,`Invalid character within String: ${Re(e,o)}.`);o+=2}else a+=n.slice(s,o),c.push(a),13===r&&10===n.charCodeAt(o+1)?o+=2:++o,a="",s=o,i=o;else a+=n.slice(s,o),s=o+1,o+=4}throw u(e.source,o,"Unterminated string.")}function Ze(e,t){const n=e.source.body,r=n.length;let i=t+1;for(;i<r;){if(!le(n.charCodeAt(i)))break;++i}return Me(e,xe,t,i,n.slice(t,i))}function et(e,t){throw new Error(t)}function tt(e){return nt(e,[])}function nt(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,t){if(null===e)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(function(e){return"function"==typeof e.toJSON}(e)){const t=e.toJSON();if(t!==e)return"string"==typeof t?t:nt(t,n)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>2)return"[Array]";const n=Math.min(10,e.length),r=e.length-n,i=[];for(let r=0;r<n;++r)i.push(nt(e[r],t));1===r?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`);return"["+i.join(", ")+"]"}(e,n);return function(e,t){const n=Object.entries(e);if(0===n.length)return"{}";if(t.length>2)return"["+function(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){const t=e.constructor.name;if("string"==typeof t&&""!==t)return t}return t}(e)+"]";const r=n.map(([e,n])=>e+": "+nt(n,t));return"{ "+r.join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}const rt=null!=globalThis.process&&"production"===process.env.NODE_ENV?function(e,t){return e instanceof t}:function(e,t){if(e instanceof t)return!0;if("object"==typeof e&&null!==e){const n=t.prototype[Symbol.toStringTag];if(n===(Symbol.toStringTag in e?e[Symbol.toStringTag]:e.constructor?.name)){const t=tt(e);throw new Error(`Cannot use ${n} "${t}" from another module or realm.\n\nEnsure that there is only one instance of "graphql" in the node_modules\ndirectory. If different versions of "graphql" are the dependencies of other\nrelied on modules, use "resolutions" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate "graphql" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`)}}return!1};class Source{constructor(e,t="GraphQL request",n={line:1,column:1}){this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||et(0,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||et(0,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function it(e,t){const n=new Parser(e,t),r=n.parseDocument();return Object.defineProperty(r,"tokenCount",{enumerable:!1,value:n.tokenCount}),r}function ot(e,t){const n=new Parser(e,t);n.expectToken(he);const r=n.parseConstValueLiteral();return n.expectToken(me),r}class Parser{constructor(e,t={}){const n=function(e){return rt(e,Source)}(e)?e:new Source(e);this._lexer=new Lexer(n),this._options=t,this._tokenCounter=0}get tokenCount(){return this._tokenCounter}parseName(){const e=this.expectToken(xe);return this.node(e,{kind:m,value:e.value})}parseDocument(){return this.node(this._lexer.token,{kind:v,definitions:this.many(he,this.parseDefinition,me)})}parseDefinition(){if(this.peek(ke))return this.parseOperationDefinition();const e=this.peekDescription(),t=e?this._lexer.lookahead():this._lexer.token;if(t.kind===xe){switch(t.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(e)throw u(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(t.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(t)}parseOperationDefinition(){const e=this._lexer.token;if(this.peek(ke))return this.node(e,{kind:y,operation:f.QUERY,name:void 0,variableDefinitions:void 0,directives:void 0,selectionSet:this.parseSelectionSet()});const t=this.parseOperationType();let n;return this.peek(xe)&&(n=this.parseName()),this.node(e,{kind:y,operation:t,name:n,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const e=this.expectToken(xe);switch(e.value){case"query":return f.QUERY;case"mutation":return f.MUTATION;case"subscription":return f.SUBSCRIPTION}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(Te,this.parseVariableDefinition,be)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:g,variable:this.parseVariable(),type:(this.expectToken(Ne),this.parseTypeReference()),defaultValue:this.expectOptionalToken(we)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const e=this._lexer.token;return this.expectToken(ye),this.node(e,{kind:L,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:T,selections:this.many(ke,this.parseSelection,_e)})}parseSelection(){return this.peek(Ee)?this.parseFragment():this.parseField()}parseField(){const e=this._lexer.token,t=this.parseName();let n,r;return this.expectOptionalToken(Ne)?(n=t,r=this.parseName()):r=t,this.node(e,{kind:b,alias:n,name:r,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(ke)?this.parseSelectionSet():void 0})}parseArguments(e){const t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(Te,t,be)}parseFragmentArguments(){const e=this.parseFragmentArgument;return this.optionalMany(Te,e,be)}parseArgument(e=!1){const t=this._lexer.token,n=this.parseName();return this.expectToken(Ne),this.node(t,{kind:E,name:n,value:this.parseValueLiteral(e)})}parseConstArgument(){return this.parseArgument(!0)}parseFragmentArgument(){const e=this._lexer.token,t=this.parseName();return this.expectToken(Ne),this.node(e,{kind:N,name:t,value:this.parseValueLiteral(!1)})}parseFragment(){const e=this._lexer.token;this.expectToken(Ee);const t=this.expectOptionalKeyword("on");if(!t&&this.peek(xe)){const t=this.parseFragmentName();return this.peek(Te)&&this._options.experimentalFragmentArguments?this.node(e,{kind:w,name:t,arguments:this.parseFragmentArguments(),directives:this.parseDirectives(!1)}):this.node(e,{kind:w,name:t,directives:this.parseDirectives(!1)})}return this.node(e,{kind:S,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const e=this._lexer.token;return this.expectKeyword("fragment"),!0===this._options.experimentalFragmentArguments?this.node(e,{kind:I,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(e,{kind:I,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(e){const t=this._lexer.token;switch(t.kind){case Ie:return this.parseList(e);case ke:return this.parseObject(e);case De:return this.advanceLexer(),this.node(t,{kind:k,value:t.value});case $e:return this.advanceLexer(),this.node(t,{kind:O,value:t.value});case Ae:case Ge:return this.parseStringLiteral();case xe:switch(this.advanceLexer(),t.value){case"true":return this.node(t,{kind:x,value:!0});case"false":return this.node(t,{kind:x,value:!1});case"null":return this.node(t,{kind:D});default:return this.node(t,{kind:$,value:t.value})}case ye:if(e){if(this.expectToken(ye),this._lexer.token.kind===xe){const e=this._lexer.token.value;throw u(this._lexer.source,t.start,`Unexpected variable "$${e}" in constant value.`)}throw this.unexpected(t)}return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const e=this._lexer.token;return this.advanceLexer(),this.node(e,{kind:_,value:e.value,block:e.kind===Ge})}parseList(e){return this.node(this._lexer.token,{kind:A,values:this.any(Ie,()=>this.parseValueLiteral(e),Le)})}parseObject(e){return this.node(this._lexer.token,{kind:G,fields:this.any(ke,()=>this.parseObjectField(e),_e)})}parseObjectField(e){const t=this._lexer.token,n=this.parseName();return this.expectToken(Ne),this.node(t,{kind:F,name:n,value:this.parseValueLiteral(e)})}parseDirectives(e){const t=[];for(;this.peek(Se);)t.push(this.parseDirective(e));if(t.length)return t}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(e){const t=this._lexer.token;return this.expectToken(Se),this.node(t,{kind:Q,name:this.parseName(),arguments:this.parseArguments(e)})}parseTypeReference(){const e=this._lexer.token;let t;if(this.expectOptionalToken(Ie)){const n=this.parseTypeReference();this.expectToken(Le),t=this.node(e,{kind:C,type:n})}else t=this.parseNamedType();return this.expectOptionalToken(ve)?this.node(e,{kind:j,type:t}):t}parseNamedType(){return this.node(this._lexer.token,{kind:V,name:this.parseName()})}peekDescription(){return this.peek(Ae)||this.peek(Ge)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");const n=this.parseConstDirectives(),r=this.many(ke,this.parseOperationTypeDefinition,_e);return this.node(e,{kind:R,description:t,directives:n,operationTypes:r})}parseOperationTypeDefinition(){const e=this._lexer.token,t=this.parseOperationType();this.expectToken(Ne);const n=this.parseNamedType();return this.node(e,{kind:M,operation:t,type:n})}parseScalarTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");const n=this.parseName(),r=this.parseConstDirectives();return this.node(e,{kind:U,description:t,name:n,directives:r})}parseObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(e,{kind:P,description:t,name:n,interfaces:r,directives:i,fields:o})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(ge,this.parseNamedType):void 0}parseFieldsDefinition(){return this.optionalMany(ke,this.parseFieldDefinition,_e)}parseFieldDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),r=this.parseArgumentDefs();this.expectToken(Ne);const i=this.parseTypeReference(),o=this.parseConstDirectives();return this.node(e,{kind:B,description:t,name:n,arguments:r,type:i,directives:o})}parseArgumentDefs(){return this.optionalMany(Te,this.parseInputValueDef,be)}parseInputValueDef(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(Ne);const r=this.parseTypeReference();let i;this.expectOptionalToken(we)&&(i=this.parseConstValueLiteral());const o=this.parseConstDirectives();return this.node(e,{kind:q,description:t,name:n,type:r,defaultValue:i,directives:o})}parseInterfaceTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");const n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();return this.node(e,{kind:J,description:t,name:n,interfaces:r,directives:i,fields:o})}parseUnionTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseUnionMemberTypes();return this.node(e,{kind:K,description:t,name:n,directives:r,types:i})}parseUnionMemberTypes(){return this.expectOptionalToken(we)?this.delimitedMany(Oe,this.parseNamedType):void 0}parseEnumTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();return this.node(e,{kind:z,description:t,name:n,directives:r,values:i})}parseEnumValuesDefinition(){return this.optionalMany(ke,this.parseEnumValueDefinition,_e)}parseEnumValueDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseEnumValueName(),r=this.parseConstDirectives();return this.node(e,{kind:Y,description:t,name:n,directives:r})}parseEnumValueName(){if("true"===this._lexer.token.value||"false"===this._lexer.token.value||"null"===this._lexer.token.value)throw u(this._lexer.source,this._lexer.token.start,`${st(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");const n=this.parseName(),r=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();return this.node(e,{kind:H,description:t,name:n,directives:r,fields:i})}parseInputFieldsDefinition(){return this.optionalMany(ke,this.parseInputValueDef,_e)}parseTypeSystemExtension(){const e=this._lexer.lookahead();if(e.kind===xe)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)}parseSchemaExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const t=this.parseConstDirectives(),n=this.optionalMany(ke,this.parseOperationTypeDefinition,_e);if(void 0===t&&void 0===n)throw this.unexpected();return this.node(e,{kind:X,directives:t,operationTypes:n})}parseScalarTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const t=this.parseName(),n=this.parseConstDirectives();if(void 0===n)throw this.unexpected();return this.node(e,{kind:Z,name:t,directives:n})}parseObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(void 0===n&&void 0===r&&void 0===i)throw this.unexpected();return this.node(e,{kind:ee,name:t,interfaces:n,directives:r,fields:i})}parseInterfaceTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const t=this.parseName(),n=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(void 0===n&&void 0===r&&void 0===i)throw this.unexpected();return this.node(e,{kind:te,name:t,interfaces:n,directives:r,fields:i})}parseUnionTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseUnionMemberTypes();if(void 0===n&&void 0===r)throw this.unexpected();return this.node(e,{kind:ne,name:t,directives:n,types:r})}parseEnumTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();if(void 0===n&&void 0===r)throw this.unexpected();return this.node(e,{kind:re,name:t,directives:n,values:r})}parseInputObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const t=this.parseName(),n=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();if(void 0===n&&void 0===r)throw this.unexpected();return this.node(e,{kind:ie,name:t,directives:n,fields:r})}parseDirectiveDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(Se);const n=this.parseName(),r=this.parseArgumentDefs(),i=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const o=this.parseDirectiveLocations();return this.node(e,{kind:W,description:t,name:n,arguments:r,repeatable:i,locations:o})}parseDirectiveLocations(){return this.delimitedMany(Oe,this.parseDirectiveLocation)}parseDirectiveLocation(){const e=this._lexer.token,t=this.parseName();if(Object.hasOwn(h,t.value))return t;throw this.unexpected(e)}node(e,t){return!0!==this._options.noLocation&&(t.loc=new Location(e,this._lexer.lastToken,this._lexer.source)),t}peek(e){return this._lexer.token.kind===e}expectToken(e){const t=this._lexer.token;if(t.kind===e)return this.advanceLexer(),t;throw u(this._lexer.source,t.start,`Expected ${at(e)}, found ${st(t)}.`)}expectOptionalToken(e){return this._lexer.token.kind===e&&(this.advanceLexer(),!0)}expectKeyword(e){const t=this._lexer.token;if(t.kind!==xe||t.value!==e)throw u(this._lexer.source,t.start,`Expected "${e}", found ${st(t)}.`);this.advanceLexer()}expectOptionalKeyword(e){const t=this._lexer.token;return t.kind===xe&&t.value===e&&(this.advanceLexer(),!0)}unexpected(e){const t=e??this._lexer.token;return u(this._lexer.source,t.start,`Unexpected ${st(t)}.`)}any(e,t,n){this.expectToken(e);const r=[];for(;!this.expectOptionalToken(n);)r.push(t.call(this));return r}optionalMany(e,t,n){if(this.expectOptionalToken(e)){const e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(n));return e}}many(e,t,n){this.expectToken(e);const r=[];do{r.push(t.call(this))}while(!this.expectOptionalToken(n));return r}delimitedMany(e,t){this.expectOptionalToken(e);const n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n}advanceLexer(){const{maxTokens:e}=this._options,t=this._lexer.advance();if(t.kind!==me&&(++this._tokenCounter,void 0!==e&&this._tokenCounter>e))throw u(this._lexer.source,t.start,`Document contains more than ${e} tokens. Parsing aborted.`)}}function st(e){const t=e.value;return at(e.kind)+(null!=t?` "${t}"`:"")}function at(e){return function(e){return e===ve||e===ye||e===ge||e===Te||e===be||e===Ee||e===Ne||e===we||e===Se||e===Ie||e===Le||e===ke||e===Oe||e===_e}(e)?`"${e}"`:e}class AccumulatorMap extends Map{get[Symbol.toStringTag](){return"AccumulatorMap"}add(e,t){const n=this.get(e);void 0===n?this.set(e,[t]):n.push(t)}}function ct(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}function ut(e){return lt("and",e)}function lt(e,t){switch(0!==t.length||n(),t.length){case 1:return t[0];case 2:return t[0]+" "+e+" "+t[1]}const r=t.slice(0,-1),i=t.at(-1);return r.join(", ")+", "+e+" "+i}function pt(e){return"object"==typeof e&&"function"==typeof e?.[Symbol.iterator]}function dt(e,t){const n=Object.create(null);for(const r of e)n[t(r)]=r;return n}function ft(e,t){const n=Object.create(null);for(const r of Object.keys(e))n[r]=t(e[r],r);return n}function ht(e){return 0===e.length?"":` at ${e.map(e=>"number"==typeof e?`[${e}]`:`.${e}`).join("")}`}function mt(e,t){const[n,r]=t?[e,t]:[void 0,e];if(0===r.length)return"";let i=" Did you mean ";null!=n&&(i+=n+" ");return i+lt("or",r.slice(0,5).map(e=>`"${e}"`))+"?"}function vt(e){return e}function yt(e,t,n){const r=Object.create(null);for(const i of e)r[t(i)]=n(i);return r}function gt(e,t){let n=0,r=0;for(;n<e.length&&r<t.length;){let i=e.charCodeAt(n),o=t.charCodeAt(r);if(Et(i)&&Et(o)){let s=0;do{++n,s=10*s+i-Tt,i=e.charCodeAt(n)}while(Et(i)&&s>0);let a=0;do{++r,a=10*a+o-Tt,o=t.charCodeAt(r)}while(Et(o)&&a>0);if(s<a)return-1;if(s>a)return 1}else{if(i<o)return-1;if(i>o)return 1;++n,++r}}return e.length-t.length}const Tt=48,bt=57;function Et(e){return!isNaN(e)&&Tt<=e&&e<=bt}function Nt(e,t){const n=Object.create(null),r=new LexicalDistance(e),i=Math.floor(.4*e.length)+1;for(const e of t){const t=r.measure(e,i);void 0!==t&&(n[e]=t)}return Object.keys(n).sort((e,t)=>{const r=n[e]-n[t];return 0!==r?r:gt(e,t)})}class LexicalDistance{constructor(e){this._input=e,this._inputLowerCase=e.toLowerCase(),this._inputArray=wt(this._inputLowerCase),this._rows=[new Array(e.length+1).fill(0),new Array(e.length+1).fill(0),new Array(e.length+1).fill(0)]}measure(e,t){if(this._input===e)return 0;const n=e.toLowerCase();if(this._inputLowerCase===n)return 1;let r=wt(n),i=this._inputArray;if(r.length<i.length){const e=r;r=i,i=e}const o=r.length,s=i.length;if(o-s>t)return;const a=this._rows;for(let e=0;e<=s;e++)a[0][e]=e;for(let e=1;e<=o;e++){const n=a[(e-1)%3],o=a[e%3];let c=o[0]=e;for(let t=1;t<=s;t++){const s=r[e-1]===i[t-1]?0:1;let u=Math.min(n[t]+1,o[t-1]+1,n[t-1]+s);if(e>1&&t>1&&r[e-1]===i[t-2]&&r[e-2]===i[t-1]){const n=a[(e-2)%3][t-2];u=Math.min(u,n+1)}u<c&&(c=u),o[t]=u}if(c>t)return}const c=a[o%3][s];return c<=t?c:void 0}}function wt(e){const t=e.length,n=new Array(t);for(let r=0;r<t;++r)n[r]=e.charCodeAt(r);return n}function St(e){if(null==e)return Object.create(null);if(null===Object.getPrototypeOf(e))return e;const t=Object.create(null);for(const[n,r]of Object.entries(e))t[n]=r;for(const n of Object.getOwnPropertySymbols(e))t[n]=e[n];return t}const It=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function Lt(e){return kt[e.charCodeAt(0)]}const kt=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],Ot=Object.freeze({});function _t(e,t,n=l){const r=new Map;for(const e of Object.values(oe))r.set(e,Dt(t,e));let i,o,s,a=Array.isArray(e),c=[e],u=-1,p=[],f=e;const h=[],m=[];do{u++;const e=u===c.length,l=e&&0!==p.length;if(e){if(o=0===m.length?void 0:h[h.length-1],f=s,s=m.pop(),l)if(a){f=f.slice();let e=0;for(const[t,n]of p){const r=t-e;null===n?(f.splice(r,1),e++):f[r]=n}}else{f={...f};for(const[e,t]of p)f[e]=t}u=i.index,c=i.keys,p=i.edits,a=i.inArray,i=i.prev}else if(null!=s){if(o=a?u:c[u],f=s[o],null==f)continue;h.push(o)}let v;if(!Array.isArray(f)){d(f)||et(0,`Invalid AST Node: ${tt(f)}.`);const n=e?r.get(f.kind)?.leave:r.get(f.kind)?.enter;if(v=n?.call(t,f,o,s,h,m),v===Ot)break;if(!1===v){if(!e){h.pop();continue}}else if(void 0!==v&&(p.push([o,v]),!e)){if(!d(v)){h.pop();continue}f=v}}void 0===v&&l&&p.push([o,f]),e?h.pop():(i={inArray:a,index:u,keys:c,edits:p,prev:i},a=Array.isArray(f),c=a?f:n[f.kind]??[],u=-1,p=[],null!=s&&m.push(s),s=f)}while(void 0!==i);return 0!==p.length?p.at(-1)[1]:e}function xt(e){const t=new Array(e.length).fill(null),n=Object.create(null);for(const r of Object.values(oe)){let i=!1;const o=new Array(e.length).fill(void 0),s=new Array(e.length).fill(void 0);for(let t=0;t<e.length;++t){const{enter:n,leave:a}=Dt(e[t],r);i||=null!=n||null!=a,o[t]=n,s[t]=a}if(!i)continue;const a={enter(...n){const r=n[0];for(let i=0;i<e.length;i++)if(null===t[i]){const s=o[i]?.apply(e[i],n);if(!1===s)t[i]=r;else if(s===Ot)t[i]=Ot;else if(void 0!==s)return s}},leave(...n){const r=n[0];for(let i=0;i<e.length;i++)if(null===t[i]){const r=s[i]?.apply(e[i],n);if(r===Ot)t[i]=Ot;else if(void 0!==r&&!1!==r)return r}else t[i]===r&&(t[i]=null)}};n[r]=a}return n}function Dt(e,t){const n=e[t];return"object"==typeof n?n:"function"==typeof n?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function $t(e){return _t(e,At)}const At={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>Gt(e.definitions,"\n\n")},OperationDefinition:{leave(e){const t=Qt("(",Gt(e.variableDefinitions,", "),")"),n=Gt([e.operation,Gt([e.name,t]),Gt(e.directives," ")]," ");return("query"===n?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:r})=>e+": "+t+Qt(" = ",n)+Qt(" ",Gt(r," "))},SelectionSet:{leave:({selections:e})=>Ft(e)},Field:{leave({alias:e,name:t,arguments:n,directives:r,selectionSet:i}){const o=Gt([Qt("",e,": "),t],"");return Gt([jt(o,n),Qt(" ",Gt(r," ")),Qt(" ",i)])}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentArgument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,arguments:t,directives:n})=>jt("..."+e,t)+Qt(" ",Gt(n," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>Gt(["...",Qt("on ",e),Gt(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:r,selectionSet:i})=>`fragment ${e}${Qt("(",Gt(n,", "),")")} on ${t} ${Qt("",Gt(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>!0===t?function(e){const t=e.replaceAll('"""','\\"""'),n=t.split(/\r\n|[\n\r]/g),r=1===n.length,i=n.length>1&&n.slice(1).every(e=>0===e.length||se(e.charCodeAt(0))),o=t.endsWith('\\"""'),s=e.endsWith('"')&&!o,a=e.endsWith("\\"),c=s||a,u=!r||e.length>70||c||i||o;let l="";const p=r&&se(e.charCodeAt(0));return(u&&!p||i)&&(l+="\n"),l+=t,(u||c)&&(l+="\n"),'"""'+l+'"""'}(e):`"${e.replace(It,Lt)}"`},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>{const t="["+Gt(e,", ")+"]";return t.length>80?"[\n"+Vt(Gt(e,"\n"))+"\n]":t}},ObjectValue:{leave:({fields:e})=>{const t="{ "+Gt(e,", ")+" }";return t.length>80?Ft(e):t}},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+Qt("(",Gt(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>Qt("",e,"\n")+Gt(["schema",Gt(t," "),Ft(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>Qt("",e,"\n")+Gt(["scalar",t,Gt(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>Qt("",e,"\n")+Gt(["type",t,Qt("implements ",Gt(n," & ")),Gt(r," "),Ft(i)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:r,directives:i})=>Qt("",e,"\n")+t+(Ct(n)?Qt("(\n",Vt(Gt(n,"\n")),"\n)"):Qt("(",Gt(n,", "),")"))+": "+r+Qt(" ",Gt(i," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:r,directives:i})=>Qt("",e,"\n")+Gt([t+": "+n,Qt("= ",r),Gt(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>Qt("",e,"\n")+Gt(["interface",t,Qt("implements ",Gt(n," & ")),Gt(r," "),Ft(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:r})=>Qt("",e,"\n")+Gt(["union",t,Gt(n," "),Qt("= ",Gt(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:r})=>Qt("",e,"\n")+Gt(["enum",t,Gt(n," "),Ft(r)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>Qt("",e,"\n")+Gt([t,Gt(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:r})=>Qt("",e,"\n")+Gt(["input",t,Gt(n," "),Ft(r)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:r,locations:i})=>Qt("",e,"\n")+"directive @"+t+(Ct(n)?Qt("(\n",Vt(Gt(n,"\n")),"\n)"):Qt("(",Gt(n,", "),")"))+(r?" repeatable":"")+" on "+Gt(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>Gt(["extend schema",Gt(e," "),Ft(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>Gt(["extend scalar",e,Gt(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>Gt(["extend type",e,Qt("implements ",Gt(t," & ")),Gt(n," "),Ft(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>Gt(["extend interface",e,Qt("implements ",Gt(t," & ")),Gt(n," "),Ft(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>Gt(["extend union",e,Gt(t," "),Qt("= ",Gt(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>Gt(["extend enum",e,Gt(t," "),Ft(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>Gt(["extend input",e,Gt(t," "),Ft(n)]," ")}};function Gt(e,t=""){return e?.filter(e=>e).join(t)??""}function Ft(e){return Qt("{\n",Vt(Gt(e,"\n")),"\n}")}function Qt(e,t,n=""){return null!=t&&""!==t?e+t+n:""}function Vt(e){return Qt("  ",e.replaceAll("\n","\n  "))}function Ct(e){return e?.some(e=>e.includes("\n"))??!1}function jt(e,t){let n=e+Qt("(",Gt(t,", "),")");return n.length>80&&(n=e+Qt("(\n",Vt(Gt(t,"\n")),"\n)")),n}function Rt(e,t){switch(e.kind){case D:return null;case k:return parseInt(e.value,10);case O:return parseFloat(e.value);case _:case $:case x:return e.value;case A:return e.values.map(e=>Rt(e,t));case G:return yt(e.fields,e=>e.name.value,e=>Rt(e.value,t));case L:return t?.[e.name.value]}}function Mt(e){if(0===e.length)throw new GraphQLError("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!le(e.charCodeAt(t)))throw new GraphQLError(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!ue(e.charCodeAt(0)))throw new GraphQLError(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Ut(e){return Pt(e)||Bt(e)||Jt(e)||Kt(e)||zt(e)||Yt(e)||Ht(e)||Wt(e)}function Pt(e){return rt(e,GraphQLScalarType)}function Bt(e){return rt(e,GraphQLObjectType)}function qt(e){return rt(e,GraphQLArgument)}function Jt(e){return rt(e,GraphQLInterfaceType)}function Kt(e){return rt(e,GraphQLUnionType)}function zt(e){return rt(e,GraphQLEnumType)}function Yt(e){return rt(e,GraphQLInputObjectType)}function Ht(e){return rt(e,GraphQLList)}function Wt(e){return rt(e,GraphQLNonNull)}function Xt(e){return Pt(e)||zt(e)||Yt(e)||on(e)&&Xt(e.ofType)}function Zt(e){return Pt(e)||Bt(e)||Jt(e)||Kt(e)||zt(e)||on(e)&&Zt(e.ofType)}function en(e){return Pt(e)||zt(e)}function tn(e){if(!en(e))throw new Error(`Expected ${tt(e)} to be a GraphQL leaf type.`);return e}function nn(e){return Bt(e)||Jt(e)||Kt(e)}function rn(e){return Jt(e)||Kt(e)}class GraphQLList{constructor(e){this.ofType=e}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class GraphQLNonNull{constructor(e){this.ofType=e}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function on(e){return Ht(e)||Wt(e)}function sn(e){return Ut(e)&&!Wt(e)}function an(e){if(e)return Wt(e)?e.ofType:e}function cn(e){return Pt(e)||Bt(e)||Jt(e)||Kt(e)||zt(e)||Yt(e)}function un(e){if(e){let t=e;for(;on(t);)t=t.ofType;return t}}function ln(e){return"function"==typeof e?e():e}function pn(e){return"function"==typeof e?e():e}class GraphQLScalarType{constructor(e){this.name=Mt(e.name),this.description=e.description,this.specifiedByURL=e.specifiedByURL,this.serialize=e.serialize??e.coerceOutputValue??vt,this.parseValue=e.parseValue??e.coerceInputValue??vt,this.parseLiteral=e.parseLiteral??((e,t)=>this.coerceInputValue(Rt(e,t))),this.coerceOutputValue=e.coerceOutputValue??this.serialize,this.coerceInputValue=e.coerceInputValue??this.parseValue,this.coerceInputLiteral=e.coerceInputLiteral,this.valueToLiteral=e.valueToLiteral,this.extensions=St(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],e.parseLiteral&&("function"==typeof e.parseValue&&"function"==typeof e.parseLiteral||et(0,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`)),e.coerceInputLiteral&&("function"==typeof e.coerceInputValue&&"function"==typeof e.coerceInputLiteral||et(0,`${this.name} must provide both "coerceInputValue" and "coerceInputLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,coerceOutputValue:this.coerceOutputValue,coerceInputValue:this.coerceInputValue,coerceInputLiteral:this.coerceInputLiteral,valueToLiteral:this.valueToLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class GraphQLObjectType{constructor(e){this.name=Mt(e.name),this.description=e.description,this.isTypeOf=e.isTypeOf,this.extensions=St(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._fields=fn.bind(void 0,this,e.fields),this._interfaces=dn.bind(void 0,e.interfaces)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:ft(this.getFields(),e=>e.toConfig()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function dn(e){return ln(e??[])}function fn(e,t){return ft(pn(t),(t,n)=>new GraphQLField(e,n,t))}class GraphQLField{constructor(e,t,n){this.parentType=e,this.name=Mt(t),this.description=n.description,this.type=n.type;const r=n.args;this.args=r?Object.entries(r).map(([e,t])=>new GraphQLArgument(this,e,t)):[],this.resolve=n.resolve,this.subscribe=n.subscribe,this.deprecationReason=n.deprecationReason,this.extensions=St(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLField"}toConfig(){return{description:this.description,type:this.type,args:yt(this.args,e=>e.name,e=>e.toConfig()),resolve:this.resolve,subscribe:this.subscribe,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parentType??"<meta>"}.${this.name}`}toJSON(){return this.toString()}}class GraphQLArgument{constructor(e,t,n){this.parent=e,this.name=Mt(t),this.description=n.description,this.type=n.type,this.defaultValue=n.defaultValue,this.default=n.default,this.deprecationReason=n.deprecationReason,this.extensions=St(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLArgument"}toConfig(){return{description:this.description,type:this.type,defaultValue:this.defaultValue,default:this.default,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parent}(${this.name}:)`}toJSON(){return this.toString()}}function hn(e){return Wt(e.type)&&void 0===e.default&&void 0===e.defaultValue}class GraphQLInterfaceType{constructor(e){this.name=Mt(e.name),this.description=e.description,this.resolveType=e.resolveType,this.extensions=St(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._fields=fn.bind(void 0,this,e.fields),this._interfaces=dn.bind(void 0,e.interfaces)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}getInterfaces(){return"function"==typeof this._interfaces&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:ft(this.getFields(),e=>e.toConfig()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class GraphQLUnionType{constructor(e){this.name=Mt(e.name),this.description=e.description,this.resolveType=e.resolveType,this.extensions=St(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._types=mn.bind(void 0,e.types)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return"function"==typeof this._types&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function mn(e){return ln(e)}class GraphQLEnumType{constructor(e){this.name=Mt(e.name),this.description=e.description,this.extensions=St(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._values="function"==typeof e.values?e.values:Object.entries(e.values).map(([e,t])=>new GraphQLEnumValue(this,e,t)),this._valueLookup=null,this._nameLookup=null}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return"function"==typeof this._values&&(this._values=Object.entries(this._values()).map(([e,t])=>new GraphQLEnumValue(this,e,t))),this._values}getValue(e){return null===this._nameLookup&&(this._nameLookup=dt(this.getValues(),e=>e.name)),this._nameLookup[e]}serialize(e){return this.coerceOutputValue(e)}coerceOutputValue(e){null===this._valueLookup&&(this._valueLookup=new Map(this.getValues().map(e=>[e.value,e])));const t=this._valueLookup.get(e);if(void 0===t)throw new GraphQLError(`Enum "${this.name}" cannot represent value: ${tt(e)}`);return t.name}parseValue(e,t){return this.coerceInputValue(e,t)}coerceInputValue(e,t){if("string"!=typeof e){const n=tt(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-string value: ${n}.`+(t?"":vn(this,n)))}const n=this.getValue(e);if(null==n)throw new GraphQLError(`Value "${e}" does not exist in "${this.name}" enum.`+(t?"":vn(this,e)));return n.value}parseLiteral(e,t,n){return this.coerceInputLiteral(e,n)}coerceInputLiteral(e,t){if(e.kind!==$){const n=$t(e);throw new GraphQLError(`Enum "${this.name}" cannot represent non-enum value: ${n}.`+(t?"":vn(this,n)),{nodes:e})}const n=this.getValue(e.value);if(null==n){const n=$t(e);throw new GraphQLError(`Value "${n}" does not exist in "${this.name}" enum.`+(t?"":vn(this,n)),{nodes:e})}return n.value}valueToLiteral(e){if("string"==typeof e&&this.getValue(e))return{kind:$,value:e}}toConfig(){return{name:this.name,description:this.description,values:yt(this.getValues(),e=>e.name,e=>e.toConfig()),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function vn(e,t){return mt("the enum value",Nt(t,e.getValues().map(e=>e.name)))}class GraphQLEnumValue{constructor(e,t,n){this.parentEnum=e,this.name=function(e){if("true"===e||"false"===e||"null"===e)throw new GraphQLError(`Enum values cannot be named: ${e}`);return Mt(e)}(t),this.description=n.description,this.value=void 0!==n.value?n.value:t,this.deprecationReason=n.deprecationReason,this.extensions=St(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLEnumValue"}toConfig(){return{description:this.description,value:this.value,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parentEnum.name}.${this.name}`}toJSON(){return this.toString()}}class GraphQLInputObjectType{constructor(e){this.name=Mt(e.name),this.description=e.description,this.extensions=St(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this.isOneOf=e.isOneOf??!1,this._fields=yn.bind(void 0,this,e.fields)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return"function"==typeof this._fields&&(this._fields=this._fields()),this._fields}toConfig(){return{name:this.name,description:this.description,fields:ft(this.getFields(),e=>e.toConfig()),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,isOneOf:this.isOneOf}}toString(){return this.name}toJSON(){return this.toString()}}function yn(e,t){return ft(pn(t),(t,n)=>new GraphQLInputField(e,n,t))}class GraphQLInputField{constructor(e,t,n){!("resolve"in n)||et(0,`${e}.${t} field has a resolve property, but Input Types cannot define resolvers.`),this.parentType=e,this.name=Mt(t),this.description=n.description,this.type=n.type,this.defaultValue=n.defaultValue,this.default=n.default,this.deprecationReason=n.deprecationReason,this.extensions=St(n.extensions),this.astNode=n.astNode}get[Symbol.toStringTag](){return"GraphQLInputField"}toConfig(){return{description:this.description,type:this.type,defaultValue:this.defaultValue,default:this.default,deprecationReason:this.deprecationReason,extensions:this.extensions,astNode:this.astNode}}toString(){return`${this.parentType}.${this.name}`}toJSON(){return this.toString()}}function gn(e){return Wt(e.type)&&void 0===e.defaultValue&&void 0===e.default}function Tn(e,t){return e===t||(Wt(e)&&Wt(t)||!(!Ht(e)||!Ht(t)))&&Tn(e.ofType,t.ofType)}function bn(e,t,n){return t===n||(Wt(n)?!!Wt(t)&&bn(e,t.ofType,n.ofType):Wt(t)?bn(e,t.ofType,n):Ht(n)?!!Ht(t)&&bn(e,t.ofType,n.ofType):!Ht(t)&&(rn(n)&&(Jt(t)||Bt(t))&&e.isSubType(n,t)))}function En(e,t,n){return t===n||(rn(t)?rn(n)?e.getPossibleTypes(t).some(t=>e.isSubType(n,t)):e.isSubType(t,n):!!rn(n)&&e.isSubType(n,t))}function Nn(e,t,n){return{prev:e,key:t,typename:n}}function wn(e){const t=[];let n=e;for(;n;)t.push(n.key),n=n.prev;return t.reverse()}function Sn(e,n){if(Wt(n)){if(null==e)return;return Sn(e,n.ofType)}if(null==e)return{kind:D};if(Ht(n)){if(!pt(e))return Sn(e,n.ofType);const t=[];for(const r of e){const e=Sn(r,n.ofType);if(!e)return;t.push(e)}return{kind:A,values:t}}if(Yt(n)){if(!t(e))return;const r=[],i=n.getFields();if(Object.keys(e).some(e=>!Object.hasOwn(i,e)))return;for(const t of Object.values(n.getFields())){if(void 0===e[t.name]){if(gn(t))return}else{const n=Sn(e[t.name],t.type);if(!n)return;r.push({kind:F,name:{kind:m,value:t.name},value:n})}}return{kind:G,fields:r}}const r=tn(n);if(r.valueToLiteral)try{return r.valueToLiteral(e)}catch(e){return}return In(e)}function In(e){if(null==e)return{kind:D};switch(typeof e){case"boolean":return{kind:x,value:e};case"string":return{kind:_,value:e,block:!1};case"number":{if(!Number.isFinite(e))return{kind:D};const t=String(e);return/^-?(?:0|[1-9][0-9]*)$/.test(t)?{kind:k,value:t}:{kind:O,value:t}}case"object":{if(pt(e))return{kind:A,values:Array.from(e,In)};const t=e,n=[];for(const e of Object.keys(t)){const r=t[e];void 0!==r&&n.push({kind:F,name:{kind:m,value:e},value:In(r)})}return{kind:G,fields:n}}}throw new TypeError(`Cannot convert value to AST: ${tt(e)}.`)}function Ln(e,t,n){switch(e.kind){case L:{const r=e.name.value,i=n?.sources[r];if(i){const e=i.value;if(void 0===e){const e=i.signature.default;return void 0!==e?e.literal:{kind:D}}return Ln(e,t,i.fragmentVariableValues)}const o=t?.sources[r];if(null==o)return{kind:D};if(void 0===o.value){const e=o.signature.default;if(void 0!==e)return e.literal}return Sn(o.value,o.signature.type)}case G:{const r=[];for(const i of e.fields){if(i.value.kind===L){const e=n?.sources[i.value.name.value]??t?.sources[i.value.name.value];if(void 0===e?.value&&void 0===e?.signature.default)continue}const e=Ln(i.value,t,n);r.push({...i,value:e})}return{...e,fields:r}}case A:{const r=[];for(const i of e.values){const e=Ln(i,t,n);r.push(e)}return{...e,values:r}}default:return e}}function kn(e,t,n,r){return On(e,t,n,r,void 0)}function On(e,n,r,i,o){if(Wt(n))return void 0===e?void _n(r,`Expected a value of non-null type "${n}" to be provided.`,o):null===e?void _n(r,`Expected value of non-null type "${n}" not to be null.`,o):On(e,n.ofType,r,i,o);if(null!=e)if(Ht(n))if(pt(e)){let t=0;for(const s of e)On(s,n.ofType,r,i,Nn(o,t++,void 0))}else On(e,n.ofType,r,i,o);else if(Yt(n)){if(!t(e)||Array.isArray(e))return void _n(r,`Expected value of type "${n}" to be an object, found: ${tt(e)}.`,o);const s=n.getFields();for(const t of Object.values(s)){const s=e[t.name];void 0===s?gn(t)&&_n(r,`Expected value of type "${n}" to include required field "${t.name}", found: ${tt(e)}.`,o):On(s,t.type,r,i,Nn(o,t.name,n.name))}const a=Object.keys(e);for(const t of a)if(!Object.hasOwn(s,t)){const i=mt(Nt(t,Object.keys(s)));_n(r,`Expected value of type "${n}" not to include unknown field "${t}"${i?`.${i} Found`:", found"}: ${tt(e)}.`,o)}if(n.isOneOf){1!==a.length&&_n(r,`Exactly one key must be specified for OneOf type "${n}".`,o);const t=a[0];null===e[t]&&_n(r,`Field "${t}" for OneOf type "${n}" must be non-null.`,o)}}else{let t,s;tn(n);try{t=n.coerceInputValue(e,i)}catch(e){if(e instanceof GraphQLError)return void r(e,wn(o));s=e}void 0===t&&_n(r,`Expected value of type "${n}"${null!=s?`, but encountered error "${null!=s.message&&""!==s.message?s.message:s}"; found`:", found"}: ${tt(e)}.`,o,s)}}function _n(e,t,n,r){e(new GraphQLError(t,{originalError:r}),wn(n))}function xn(e,t,n,r,i,o){return Dn({static:!r&&!i,onError:n,variables:r,fragmentVariableValues:i},e,t,o,void 0)}function Dn(e,t,n,r,i){if(t.kind===L){if(e.static)return;const r=$n(e,t),o=r?.coerced[t.name.value];return void(Wt(n)&&(void 0===o?An(e.onError,`Expected variable "$${t.name.value}" provided to type "${n}" to provide a runtime value.`,t,i):null===o&&An(e.onError,`Expected variable "$${t.name.value}" provided to non-null type "${n}" not to be null.`,t,i)))}if(Wt(n))return t.kind===D?void An(e.onError,`Expected value of non-null type "${n}" not to be null.`,t,i):Dn(e,t,n.ofType,r,i);if(t.kind!==D)if(Ht(n))if(t.kind!==A)Dn(e,t,n.ofType,r,i);else{let o=0;for(const s of t.values)Dn(e,s,n.ofType,r,Nn(i,o++,void 0))}else if(Yt(n)){if(t.kind!==G)return void An(e.onError,`Expected value of type "${n}" to be an object, found: ${$t(t)}.`,t,i);const o=n.getFields(),s=dt(t.fields,e=>e.name.value);for(const a of Object.values(o)){const o=s[a.name];if(void 0===o)gn(a)&&An(e.onError,`Expected value of type "${n}" to include required field "${a.name}", found: ${$t(t)}.`,t,i);else{const s=o.value;if(s.kind===L&&!e.static){const r=$n(e,s),o=s.name.value,c=r?.coerced[o];if(n.isOneOf)void 0===c?An(e.onError,`Expected variable "$${o}" provided to field "${a.name}" for OneOf Input Object type "${n}" to provide a runtime value.`,t,i):null===c&&An(e.onError,`Expected variable "$${o}" provided to field "${a.name}" for OneOf Input Object type "${n}" not to be null.`,t,i);else if(void 0===c&&!gn(a))continue}Dn(e,s,a.type,r,Nn(i,a.name,n.name))}}const a=t.fields;for(const s of a){const a=s.name.value;if(!Object.hasOwn(o,a)){const c=r?"":mt(Nt(a,Object.keys(o)));An(e.onError,`Expected value of type "${n}" not to include unknown field "${a}"${c?`.${c} Found`:", found"}: ${$t(t)}.`,s,i)}}if(n.isOneOf){if(1!==a.length)return void An(e.onError,`OneOf Input Object "${n}" must specify exactly one key.`,t,i);if(a[0].value.kind===D){const r=a[0].name.value;An(e.onError,`Field "${n}.${r}" used for OneOf Input Object must be non-null.`,t,Nn(i,r,void 0))}}}else{let o,s;tn(n);try{o=n.coerceInputLiteral?n.coerceInputLiteral(Ln(t,e.variables,e.fragmentVariableValues),r):n.parseLiteral(t,void 0,r)}catch(t){if(t instanceof GraphQLError)return void e.onError(t,wn(i));s=t}void 0===o&&An(e.onError,`Expected value of type "${n}"${null!=s?`, but encountered error "${null!=s.message&&""!==s.message?s.message:s}"; found`:", found"}: ${$t(t)}.`,t,i,s)}}function $n(e,t){const n=t.name.value,{fragmentVariableValues:r,variables:i}=e;return r?.sources[n]?r:i}function An(e,t,n,r,i){e(new GraphQLError(t,{nodes:n,originalError:i}),wn(r))}const Gn=2147483647,Fn=-2147483648,Qn=new GraphQLScalarType({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",coerceOutputValue(e){const t=Pn(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isInteger(n))throw new GraphQLError(`Int cannot represent non-integer value: ${tt(t)}`);if(n>Gn||n<Fn)throw new GraphQLError("Int cannot represent non 32-bit signed integer value: "+tt(t));return n},coerceInputValue(e){if("number"!=typeof e||!Number.isInteger(e))throw new GraphQLError(`Int cannot represent non-integer value: ${tt(e)}`);if(e>Gn||e<Fn)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},coerceInputLiteral(e){if(e.kind!==k)throw new GraphQLError(`Int cannot represent non-integer value: ${$t(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>Gn||t<Fn)throw new GraphQLError(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t},valueToLiteral(e){if("number"==typeof e&&Number.isInteger(e)&&e<=Gn&&e>=Fn)return{kind:k,value:String(e)}}}),Vn=new GraphQLScalarType({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",coerceOutputValue(e){const t=Pn(e);if("boolean"==typeof t)return t?1:0;let n=t;if("string"==typeof t&&""!==t&&(n=Number(t)),"number"!=typeof n||!Number.isFinite(n))throw new GraphQLError(`Float cannot represent non numeric value: ${tt(t)}`);return n},coerceInputValue(e){if("number"!=typeof e||!Number.isFinite(e))throw new GraphQLError(`Float cannot represent non numeric value: ${tt(e)}`);return e},coerceInputLiteral(e){if(e.kind!==O&&e.kind!==k)throw new GraphQLError(`Float cannot represent non numeric value: ${$t(e)}`,{nodes:e});return parseFloat(e.value)},valueToLiteral(e){const t=In(e);if(t.kind===O||t.kind===k)return t}}),Cn=new GraphQLScalarType({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",coerceOutputValue(e){const t=Pn(e);if("string"==typeof t)return t;if("boolean"==typeof t)return t?"true":"false";if("number"==typeof t&&Number.isFinite(t))return t.toString();throw new GraphQLError(`String cannot represent value: ${tt(e)}`)},coerceInputValue(e){if("string"!=typeof e)throw new GraphQLError(`String cannot represent a non string value: ${tt(e)}`);return e},coerceInputLiteral(e){if(e.kind!==_)throw new GraphQLError(`String cannot represent a non string value: ${$t(e)}`,{nodes:e});return e.value},valueToLiteral(e){const t=In(e);if(t.kind===_)return t}}),jn=new GraphQLScalarType({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",coerceOutputValue(e){const t=Pn(e);if("boolean"==typeof t)return t;if(Number.isFinite(t))return 0!==t;throw new GraphQLError(`Boolean cannot represent a non boolean value: ${tt(t)}`)},coerceInputValue(e){if("boolean"!=typeof e)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${tt(e)}`);return e},coerceInputLiteral(e){if(e.kind!==x)throw new GraphQLError(`Boolean cannot represent a non boolean value: ${$t(e)}`,{nodes:e});return e.value},valueToLiteral(e){const t=In(e);if(t.kind===x)return t}}),Rn=new GraphQLScalarType({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',coerceOutputValue(e){const t=Pn(e);if("string"==typeof t)return t;if(Number.isInteger(t))return String(t);throw new GraphQLError(`ID cannot represent value: ${tt(e)}`)},coerceInputValue(e){if("string"==typeof e)return e;if("number"==typeof e&&Number.isInteger(e))return e.toString();throw new GraphQLError(`ID cannot represent value: ${tt(e)}`)},coerceInputLiteral(e){if(e.kind!==_&&e.kind!==k)throw new GraphQLError("ID cannot represent a non-string and non-integer value: "+$t(e),{nodes:e});return e.value},valueToLiteral(e){const t=Number.isInteger(e)?String(e):e;if("string"==typeof t)return/^-?(?:0|[1-9][0-9]*)$/.test(t)?{kind:k,value:t}:{kind:_,value:t,block:!1}}}),Mn=Object.freeze([Cn,Qn,Vn,jn,Rn]);function Un(e){return Mn.some(({name:t})=>e.name===t)}function Pn(e){if(t(e)){if("function"==typeof e.valueOf){const n=e.valueOf();if(!t(n))return n}if("function"==typeof e.toJSON)return e.toJSON()}return e}function Bn(e){return rt(e,GraphQLDirective)}class GraphQLDirective{constructor(e){this.name=Mt(e.name),this.description=e.description,this.locations=e.locations,this.isRepeatable=e.isRepeatable??!1,this.extensions=St(e.extensions),this.astNode=e.astNode,Array.isArray(e.locations)||et(0,`@${this.name} locations must be an Array.`);const n=e.args??{};t(n)&&!Array.isArray(n)||et(0,`@${this.name} args must be an object with argument names as keys.`),this.args=Object.entries(n).map(([e,t])=>new GraphQLArgument(this,e,t))}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:yt(this.args,e=>e.name,e=>e.toConfig()),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const qn=new GraphQLDirective({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[h.FIELD,h.FRAGMENT_SPREAD,h.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(jn),description:"Included when true."}}}),Jn=new GraphQLDirective({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[h.FIELD,h.FRAGMENT_SPREAD,h.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(jn),description:"Skipped when true."}}}),Kn=new GraphQLDirective({name:"defer",description:"Directs the executor to defer this fragment when the `if` argument is true or undefined.",locations:[h.FRAGMENT_SPREAD,h.INLINE_FRAGMENT],args:{if:{type:new GraphQLNonNull(jn),description:"Deferred when true or undefined.",default:{value:!0}},label:{type:Cn,description:"Unique name"}}}),zn=new GraphQLDirective({name:"stream",description:"Directs the executor to stream plural fields when the `if` argument is true or undefined.",locations:[h.FIELD],args:{initialCount:{default:{value:0},type:new GraphQLNonNull(Qn),description:"Number of items to return immediately"},if:{type:new GraphQLNonNull(jn),description:"Stream when true or undefined.",default:{value:!0}},label:{type:Cn,description:"Unique name"}}}),Yn="No longer supported",Hn=new GraphQLDirective({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[h.FIELD_DEFINITION,h.ARGUMENT_DEFINITION,h.INPUT_FIELD_DEFINITION,h.ENUM_VALUE],args:{reason:{type:new GraphQLNonNull(Cn),description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",default:{value:Yn}}}}),Wn=new GraphQLDirective({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[h.SCALAR],args:{url:{type:new GraphQLNonNull(Cn),description:"The URL that specifies the behavior of this scalar."}}}),Xn=new GraphQLDirective({name:"oneOf",description:"Indicates exactly one field must be supplied and this field must not be `null`.",locations:[h.INPUT_OBJECT],args:{}});new GraphQLDirective({name:"experimental_disableErrorPropagation",description:"Disables error propagation.",locations:[h.QUERY,h.MUTATION,h.SUBSCRIPTION]});const Zn=Object.freeze([qn,Jn,Hn,Wn,Xn]);function er(e){return Zn.some(({name:t})=>t===e.name)}function tr(e,r){if(Wt(r)){const t=tr(e,r.ofType);return t?.kind===D?null:t}if(null===e)return{kind:D};if(void 0===e)return null;if(Ht(r)){const t=r.ofType;if(pt(e)){const n=[];for(const r of e){const e=tr(r,t);null!=e&&n.push(e)}return{kind:A,values:n}}return tr(e,t)}if(Yt(r)){if(!t(e))return null;const n=[];for(const t of Object.values(r.getFields())){const r=tr(e[t.name],t.type);r&&n.push({kind:F,name:{kind:m,value:t.name},value:r})}return{kind:G,fields:n}}if(en(r)){const t=r.coerceOutputValue(e);if(null==t)return null;if("boolean"==typeof t)return{kind:x,value:t};if("number"==typeof t&&Number.isFinite(t)){const e=String(t);return nr.test(e)?{kind:k,value:e}:{kind:O,value:e}}if("string"==typeof t)return zt(r)?{kind:$,value:t}:r===Rn&&nr.test(t)?{kind:k,value:t}:{kind:_,value:t};throw new TypeError(`Cannot convert value to AST: ${tt(t)}.`)}n(0,"Unexpected input type: "+tt(r))}const nr=/^-?(?:0|[1-9][0-9]*)$/;function rr(e){const t=e.type,r=e.default;if(r){const e=r.literal??Sn(r.value,t);return null!=e||n(0,"Invalid default value"),e}const i=e.defaultValue;if(void 0!==i){const e=tr(i,t);return null!=e||n(0,"Invalid default value"),e}}const ir=new GraphQLObjectType({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:Cn,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(ar))),resolve:e=>Object.values(e.getTypeMap())},queryType:{description:"The type that query operations will be rooted at.",type:new GraphQLNonNull(ar),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:ar,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:ar,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(or))),resolve:e=>e.getDirectives()}})}),or=new GraphQLObjectType({name:"__Directive",description:"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",fields:()=>({name:{type:new GraphQLNonNull(Cn),resolve:e=>e.name},description:{type:Cn,resolve:e=>e.description},isRepeatable:{type:new GraphQLNonNull(jn),resolve:e=>e.isRepeatable},locations:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(sr))),resolve:e=>e.locations},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(ur))),args:{includeDeprecated:{type:new GraphQLNonNull(jn),default:{value:!1}}},resolve:(e,{includeDeprecated:t})=>!0===t?e.args:e.args.filter(e=>null==e.deprecationReason)}})}),sr=new GraphQLEnumType({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:h.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:h.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:h.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:h.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:h.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:h.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:h.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:h.VARIABLE_DEFINITION,description:"Location adjacent to an operation variable definition."},FRAGMENT_VARIABLE_DEFINITION:{value:h.FRAGMENT_VARIABLE_DEFINITION,description:"Location adjacent to a fragment variable definition."},SCHEMA:{value:h.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:h.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:h.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:h.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:h.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:h.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:h.UNION,description:"Location adjacent to a union definition."},ENUM:{value:h.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:h.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:h.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:h.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),ar=new GraphQLObjectType({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new GraphQLNonNull(dr),resolve:e=>Pt(e)?pr.SCALAR:Bt(e)?pr.OBJECT:Jt(e)?pr.INTERFACE:Kt(e)?pr.UNION:zt(e)?pr.ENUM:Yt(e)?pr.INPUT_OBJECT:Ht(e)?pr.LIST:Wt(e)?pr.NON_NULL:void n(0,`Unexpected type: "${tt(e)}".`)},name:{type:Cn,resolve:e=>"name"in e?e.name:void 0},description:{type:Cn,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:Cn,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new GraphQLList(new GraphQLNonNull(cr)),args:{includeDeprecated:{type:new GraphQLNonNull(jn),default:{value:!1}}},resolve(e,{includeDeprecated:t}){if(Bt(e)||Jt(e)){const n=Object.values(e.getFields());return!0===t?n:n.filter(e=>null==e.deprecationReason)}}},interfaces:{type:new GraphQLList(new GraphQLNonNull(ar)),resolve(e){if(Bt(e)||Jt(e))return e.getInterfaces()}},possibleTypes:{type:new GraphQLList(new GraphQLNonNull(ar)),resolve(e,t,n,{schema:r}){if(rn(e))return r.getPossibleTypes(e)}},enumValues:{type:new GraphQLList(new GraphQLNonNull(lr)),args:{includeDeprecated:{type:new GraphQLNonNull(jn),default:{value:!1}}},resolve(e,{includeDeprecated:t}){if(zt(e)){const n=e.getValues();return!0===t?n:n.filter(e=>null==e.deprecationReason)}}},inputFields:{type:new GraphQLList(new GraphQLNonNull(ur)),args:{includeDeprecated:{type:new GraphQLNonNull(jn),default:{value:!1}}},resolve(e,{includeDeprecated:t}){if(Yt(e)){const n=Object.values(e.getFields());return!0===t?n:n.filter(e=>null==e.deprecationReason)}}},ofType:{type:ar,resolve:e=>"ofType"in e?e.ofType:void 0},isOneOf:{type:jn,resolve:e=>{if(Yt(e))return e.isOneOf}}})}),cr=new GraphQLObjectType({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new GraphQLNonNull(Cn),resolve:e=>e.name},description:{type:Cn,resolve:e=>e.description},args:{type:new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(ur))),args:{includeDeprecated:{type:new GraphQLNonNull(jn),default:{value:!1}}},resolve:(e,{includeDeprecated:t})=>!0===t?e.args:e.args.filter(e=>null==e.deprecationReason)},type:{type:new GraphQLNonNull(ar),resolve:e=>e.type},isDeprecated:{type:new GraphQLNonNull(jn),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:Cn,resolve:e=>e.deprecationReason}})}),ur=new GraphQLObjectType({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new GraphQLNonNull(Cn),resolve:e=>e.name},description:{type:Cn,resolve:e=>e.description},type:{type:new GraphQLNonNull(ar),resolve:e=>e.type},defaultValue:{type:Cn,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const t=rr(e);return t?$t(t):null}},isDeprecated:{type:new GraphQLNonNull(jn),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:Cn,resolve:e=>e.deprecationReason}})}),lr=new GraphQLObjectType({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new GraphQLNonNull(Cn),resolve:e=>e.name},description:{type:Cn,resolve:e=>e.description},isDeprecated:{type:new GraphQLNonNull(jn),resolve:e=>null!=e.deprecationReason},deprecationReason:{type:Cn,resolve:e=>e.deprecationReason}})}),pr={SCALAR:"SCALAR",OBJECT:"OBJECT",INTERFACE:"INTERFACE",UNION:"UNION",ENUM:"ENUM",INPUT_OBJECT:"INPUT_OBJECT",LIST:"LIST",NON_NULL:"NON_NULL"},dr=new GraphQLEnumType({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:pr.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:pr.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:pr.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:pr.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:pr.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:pr.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:pr.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:pr.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),fr=new GraphQLField(void 0,"__schema",{type:new GraphQLNonNull(ir),description:"Access the current type schema of this server.",resolve:(e,t,n,{schema:r})=>r}),hr=new GraphQLField(void 0,"__type",{type:ar,description:"Request the type information of a single type.",args:{name:{type:new GraphQLNonNull(Cn)}},resolve:(e,{name:t},n,{schema:r})=>r.getType(t)}),mr=new GraphQLField(void 0,"__typename",{type:new GraphQLNonNull(Cn),description:"The name of the current Object type at runtime.",resolve:(e,t,n,{parentType:r})=>r.name}),vr=Object.freeze([ir,or,sr,ar,cr,ur,lr,dr]);function yr(e){return vr.some(({name:t})=>e.name===t)}function gr(e){if(!function(e){return rt(e,GraphQLSchema)}(e))throw new Error(`Expected ${tt(e)} to be a GraphQL schema.`);return e}class GraphQLSchema{constructor(e){this.assumeValid=e.assumeValid??!1,this.__validationErrors=!0===e.assumeValid?[]:void 0,this.description=e.description,this.extensions=St(e.extensions),this.astNode=e.astNode,this.extensionASTNodes=e.extensionASTNodes??[],this._queryType=e.query,this._mutationType=e.mutation,this._subscriptionType=e.subscription,this._directives=e.directives??Zn;const t=new Set(e.types);if(null!=e.types)for(const n of e.types)t.delete(n),Tr(n,t);null!=this._queryType&&Tr(this._queryType,t),null!=this._mutationType&&Tr(this._mutationType,t),null!=this._subscriptionType&&Tr(this._subscriptionType,t);for(const e of this._directives)if(Bn(e))for(const n of e.args)Tr(n.type,t);Tr(ir,t),this._typeMap=Object.create(null),this._subTypeMap=new Map,this._implementationsMap=Object.create(null);for(const e of t){if(null==e)continue;const t=e.name;if(void 0!==this._typeMap[t])throw new Error(`Schema must contain uniquely named types but contains multiple types named "${t}".`);if(this._typeMap[t]=e,Jt(e)){for(const t of e.getInterfaces())if(Jt(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.interfaces.push(e)}}else if(Bt(e))for(const t of e.getInterfaces())if(Jt(t)){let n=this._implementationsMap[t.name];void 0===n&&(n=this._implementationsMap[t.name]={objects:[],interfaces:[]}),n.objects.push(e)}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(e){switch(e){case f.QUERY:return this.getQueryType();case f.MUTATION:return this.getMutationType();case f.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(e){return this.getTypeMap()[e]}getPossibleTypes(e){return Kt(e)?e.getTypes():this.getImplementations(e).objects}getImplementations(e){return this._implementationsMap[e.name]??{objects:[],interfaces:[]}}isSubType(e,t){let n=this._subTypeMap.get(e);if(void 0===n){if(Kt(e))n=new Set(e.getTypes());else{const t=this.getImplementations(e);n=new Set([...t.objects,...t.interfaces])}this._subTypeMap.set(e,n)}return n.has(t)}getDirectives(){return this._directives}getDirective(e){return this.getDirectives().find(t=>t.name===e)}getField(e,t){switch(t){case fr.name:return this.getQueryType()===e?fr:void 0;case hr.name:return this.getQueryType()===e?hr:void 0;case mr.name:return mr}if("getFields"in e)return e.getFields()[t]}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.assumeValid}}}function Tr(e,t){const n=un(e);if(!t.has(n))if(t.add(n),Kt(n))for(const e of n.getTypes())Tr(e,t);else if(Bt(n)||Jt(n)){for(const e of n.getInterfaces())Tr(e,t);for(const e of Object.values(n.getFields())){Tr(e.type,t);for(const n of e.args)Tr(n.type,t)}}else if(Yt(n))for(const e of Object.values(n.getFields()))Tr(e.type,t);return t}function br(e){if(gr(e),e.__validationErrors)return e.__validationErrors;const n=new SchemaValidationContext(e);!function(e){const t=e.schema;null==t.getQueryType()&&e.reportError("Query root type must be provided.",t.astNode);const n=new AccumulatorMap;for(const r of Object.values(f)){const i=t.getRootType(r);if(null!=i)if(Bt(i))n.add(i,r);else{const n=ct(r),o=tt(i);e.reportError(r===f.QUERY?`${n} root type must be Object type, it cannot be ${o}.`:`${n} root type must be Object type if provided, it cannot be ${o}.`,Er(t,r)??i.astNode)}}for(const[r,i]of n)if(i.length>1){const n=ut(i);e.reportError(`All root types must be different, "${r}" type is used as ${n} root types.`,i.map(e=>Er(t,e)))}}(n),function(e){for(const t of e.schema.getDirectives())if(Bn(t)){Sr(e,t),0===t.locations.length&&e.reportError(`Directive ${t} must include 1 or more locations.`,t.astNode);for(const n of t.args)Sr(e,n),Xt(n.type)||e.reportError(`The type of ${n} must be Input Type but got: ${tt(n.type)}.`,n.astNode),hn(n)&&null!=n.deprecationReason&&e.reportError(`Required argument ${n} cannot be deprecated.`,[Fr(n.astNode),n.astNode?.type]),Nr(e,n)}else e.reportError(`Expected directive but got: ${tt(t)}.`,t?.astNode)}(n),function(e){const n=function(e){const t=new Set,n=[],r=Object.create(null);return i;function i(o){if(t.has(o))return;t.add(o),r[o.name]=n.length;const s=Object.values(o.getFields());for(const t of s)if(Wt(t.type)&&Yt(t.type.ofType)){const s=t.type.ofType,a=r[s.name];if(n.push({fieldStr:`${o}.${t.name}`,astNode:t.astNode}),void 0===a)i(s);else{const t=n.slice(a),r=t.map(e=>e.fieldStr).join(", ");e.reportError(`Invalid circular reference. The Input Object ${s} references itself ${t.length>1?"via the non-null fields:":"in the non-null field"} ${r}.`,t.map(e=>e.astNode))}n.pop()}r[o.name]=void 0}}(e),r=function(e){const n=Object.create(null),r=[],i=Object.create(null);return function(e){return o(e,Object.create(null))};function o(e,n){if(pt(n))for(const t of n)o(e,t);else if(t(n))for(const t of Object.values(e.getFields())){const r=un(t.type);Yt(r)&&(Object.hasOwn(n,t.name)?o(r,n[t.name]):a(t,r,`${e}.${t.name}`))}}function s(e,t){if(t.kind===A){for(const n of t.values)s(e,n);return}if(t.kind!==G)return;const n=dt(t.fields,e=>e.name.value);for(const t of Object.values(e.getFields())){const r=un(t.type);Yt(r)&&(Object.hasOwn(n,t.name)?s(r,n[t.name].value):a(t,r,`${e}.${t.name}`))}}function a(t,a,c){const u=t.default;if(void 0===u)return;const l=i[c];void 0===l?void 0===n[c]&&(n[c]=!0,i[c]=r.push([c,t.astNode?.defaultValue]),u.literal?s(a,u.literal):o(a,u.value),r.pop(),i[c]=void 0):e.reportError(`Invalid circular reference. The default value of Input Object field ${c} references itself${l<r.length?` via the default values of: ${r.slice(l).map(([e])=>e).join(", ")}`:""}.`,r.slice(l-1).map(([,e])=>e))}}(e),i=e.schema.getTypeMap();for(const t of Object.values(i))cn(t)?(yr(t)||Sr(e,t),Bt(t)||Jt(t)?(Ir(e,t),Lr(e,t)):Kt(t)?_r(e,t):zt(t)?xr(e,t):Yt(t)&&(Dr(e,t),n(t),r(t))):e.reportError(`Expected GraphQL named type but got: ${tt(t)}.`,t.astNode)}(n);const r=n.getErrors();return e.__validationErrors=r,r}class SchemaValidationContext{constructor(e){this._errors=[],this.schema=e}reportError(e,t){const n=Array.isArray(t)?t.filter(Boolean):t;this._errors.push(new GraphQLError(e,{nodes:n}))}getErrors(){return this._errors}}function Er(e,t){return[e.astNode,...e.extensionASTNodes].flatMap(e=>e?.operationTypes??[]).find(e=>e.operation===t)?.type}function Nr(e,t){const n=t.default;if(n)if(n.literal)xn(n.literal,t.type,(n,r)=>{e.reportError(`${t} has invalid default value${ht(r)}: ${n.message}`,n.nodes)});else{const r=[];if(kn(n.value,t.type,(e,t)=>{r.push([e,t])}),r.length>0)try{const r=wr(n.value,t.type),i=[];if(kn(r,t.type,(e,t)=>{i.push([e,t])}),0===i.length)return void e.reportError(`${t} has invalid default value: ${tt(n.value)}. Did you mean: ${tt(r)}?`,t.astNode?.defaultValue)}catch(e){}for(const[n,i]of r)e.reportError(`${t} has invalid default value${ht(i)}: ${n.message}`,t.astNode?.defaultValue)}}function wr(e,r){if(Wt(r))return wr(e,r.ofType);if(null===e)return null;if(Ht(r))return pt(e)?Array.from(e,e=>wr(e,r.ofType)):[wr(e,r.ofType)];if(Yt(r)){t(e)||n();const i=r.getFields();return ft(e,(e,t)=>(t in i||n(),wr(e,i[t].type)))}return tn(r),r.coerceOutputValue(e)}function Sr(e,t){t.name.startsWith("__")&&e.reportError(`Name "${t.name}" must not begin with "__", which is reserved by GraphQL introspection.`,t.astNode)}function Ir(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Type ${t} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const t of n){Sr(e,t),Zt(t.type)||e.reportError(`The type of ${t} must be Output Type but got: ${tt(t.type)}.`,t.astNode?.type);for(const n of t.args)Sr(e,n),Xt(n.type)||e.reportError(`The type of ${n} must be Input Type but got: ${tt(n.type)}.`,n.astNode?.type),hn(n)&&null!=n.deprecationReason&&e.reportError(`Required argument ${n} cannot be deprecated.`,[Fr(n.astNode),n.astNode?.type]),Nr(e,n)}}function Lr(e,t){const n=new Set;for(const r of t.getInterfaces())Jt(r)?t!==r?n.has(r.name)?e.reportError(`Type ${t} can only implement ${r} once.`,Ar(t,r)):(n.add(r.name),Or(e,t,r),kr(e,t,r)):e.reportError(`Type ${t} cannot implement itself because it would create a circular reference.`,Ar(t,r)):e.reportError(`Type ${t} must only implement Interface types, it cannot implement ${tt(r)}.`,Ar(t,r))}function kr(e,t,n){const r=t.getFields();for(const i of Object.values(n.getFields())){const o=r[i.name];if(null!=o){bn(e.schema,o.type,i.type)||e.reportError(`Interface field ${i} expects type ${i.type} but ${o} is type ${o.type}.`,[i.astNode?.type,o.astNode?.type]);for(const t of i.args){const n=o.args.find(e=>e.name===t.name);n?Tn(t.type,n.type)||e.reportError(`Interface field argument ${t} expects type ${t.type} but ${n} is type ${n.type}.`,[t.astNode?.type,n.astNode?.type]):e.reportError(`Interface field argument ${t} expected but ${o} does not provide it.`,[t.astNode,o.astNode])}for(const t of o.args)if(hn(t)){i.args.find(e=>e.name===t.name)||e.reportError(`Argument "${t}" must not be required type "${t.type}" if not provided by the Interface field "${i}".`,[t.astNode,i.astNode])}null!=o.deprecationReason&&null==i.deprecationReason&&e.reportError(`Interface field ${n.name}.${i.name} is not deprecated, so implementation field ${t.name}.${o.name} must not be deprecated.`,[Fr(o.astNode),o.astNode?.type])}else e.reportError(`Interface field ${i} expected but ${t} does not provide it.`,[i.astNode,t.astNode,...t.extensionASTNodes])}}function Or(e,t,n){const r=t.getInterfaces();for(const i of n.getInterfaces())r.includes(i)||e.reportError(i===t?`Type ${t} cannot implement ${n} because it would create a circular reference.`:`Type ${t} must implement ${i} because it is implemented by ${n}.`,[...Ar(n,i),...Ar(t,n)])}function _r(e,t){const n=t.getTypes();0===n.length&&e.reportError(`Union type ${t} must define one or more member types.`,[t.astNode,...t.extensionASTNodes]);const r=new Set;for(const i of n)r.has(i.name)?e.reportError(`Union type ${t} can only include type ${i} once.`,Gr(t,i.name)):(r.add(i.name),Bt(i)||e.reportError(`Union type ${t} can only include Object types, it cannot include ${tt(i)}.`,Gr(t,String(i))))}function xr(e,t){const n=t.getValues();0===n.length&&e.reportError(`Enum type ${t} must define one or more values.`,[t.astNode,...t.extensionASTNodes]);for(const t of n)Sr(e,t)}function Dr(e,t){const n=Object.values(t.getFields());0===n.length&&e.reportError(`Input Object type ${t} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(const r of n)Sr(e,r),Xt(r.type)||e.reportError(`The type of ${r} must be Input Type but got: ${tt(r.type)}.`,r.astNode?.type),gn(r)&&null!=r.deprecationReason&&e.reportError(`Required input field ${r} cannot be deprecated.`,[Fr(r.astNode),r.astNode?.type]),Nr(e,r),t.isOneOf&&$r(t,r,e)}function $r(e,t,n){Wt(t.type)&&n.reportError(`OneOf input field ${e}.${t.name} must be nullable.`,t.astNode?.type),void 0===t.default&&void 0===t.defaultValue||n.reportError(`OneOf input field ${e}.${t.name} cannot have a default value.`,t.astNode)}function Ar(e,t){const{astNode:n,extensionASTNodes:r}=e;return(null!=n?[n,...r]:r).flatMap(e=>e.interfaces??[]).filter(e=>e.name.value===t.name)}function Gr(e,t){const{astNode:n,extensionASTNodes:r}=e;return(null!=n?[n,...r]:r).flatMap(e=>e.types??[]).filter(e=>e.name.value===t)}function Fr(e){return e?.directives?.find(e=>e.name.value===Hn.name)}function Qr(e,t){switch(t.kind){case C:{const n=Qr(e,t.type);return n&&new GraphQLList(n)}case j:{const n=Qr(e,t.type);return n&&new GraphQLNonNull(n)}case V:return e.getType(t.name.value)}}class TypeInfo{constructor(e,t,n){this._schema=e,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._fragmentSignaturesByName=n??(()=>null),this._fragmentSignature=null,this._fragmentArgument=null,t&&(Xt(t)&&this._inputTypeStack.push(t),nn(t)&&this._parentTypeStack.push(t),Zt(t)&&this._typeStack.push(t))}get[Symbol.toStringTag](){return"TypeInfo"}getType(){return this._typeStack.at(-1)}getParentType(){return this._parentTypeStack.at(-1)}getInputType(){return this._inputTypeStack.at(-1)}getParentInputType(){return this._inputTypeStack.at(-2)}getFieldDef(){return this._fieldDefStack.at(-1)}getDefaultValue(){return this._defaultValueStack.at(-1)}getDirective(){return this._directive}getArgument(){return this._argument}getFragmentSignature(){return this._fragmentSignature}getFragmentSignatureByName(){return this._fragmentSignaturesByName}getFragmentArgument(){return this._fragmentArgument}getEnumValue(){return this._enumValue}enter(e){const t=this._schema;switch(e.kind){case v:{const t=function(e){const t=new Map;for(const n of e.definitions)if(n.kind===I){const e=new Map;if(n.variableDefinitions)for(const t of n.variableDefinitions)e.set(t.variable.name.value,t);const r={definition:n,variableDefinitions:e};t.set(n.name.value,r)}return t}(e);this._fragmentSignaturesByName=e=>t.get(e);break}case T:{const e=un(this.getType());this._parentTypeStack.push(nn(e)?e:void 0);break}case b:{const n=this.getParentType();let r,i;n&&(r=t.getField(n,e.name.value),r&&(i=r.type)),this._fieldDefStack.push(r),this._typeStack.push(Zt(i)?i:void 0);break}case Q:this._directive=t.getDirective(e.name.value);break;case y:{const n=t.getRootType(e.operation);this._typeStack.push(Bt(n)?n:void 0);break}case w:this._fragmentSignature=this.getFragmentSignatureByName()(e.name.value);break;case S:case I:{const n=e.typeCondition,r=n?Qr(t,n):un(this.getType());this._typeStack.push(Zt(r)?r:void 0);break}case g:{const n=Qr(t,e.type);this._inputTypeStack.push(Xt(n)?n:void 0);break}case E:{let t,n;const r=this.getDirective()??this.getFieldDef();r&&(t=r.args.find(t=>t.name===e.name.value),t&&(n=t.type)),this._argument=t,this._defaultValueStack.push(t?.default??t?.defaultValue??void 0),this._inputTypeStack.push(Xt(n)?n:void 0);break}case N:{const t=this.getFragmentSignature(),n=t?.variableDefinitions.get(e.name.value);let r;this._fragmentArgument=n,n&&(r=Qr(this._schema,n.type)),this._inputTypeStack.push(Xt(r)?r:void 0);break}case A:{const e=an(this.getInputType()),t=Ht(e)?e.ofType:e;this._defaultValueStack.push(void 0),this._inputTypeStack.push(Xt(t)?t:void 0);break}case F:{const t=un(this.getInputType());let n,r;Yt(t)&&(r=t.getFields()[e.name.value],null!=r&&(n=r.type)),this._defaultValueStack.push(r?.default??r?.defaultValue??void 0),this._inputTypeStack.push(Xt(n)?n:void 0);break}case $:{const t=un(this.getInputType());let n;zt(t)&&(n=t.getValue(e.value)),this._enumValue=n;break}}}leave(e){switch(e.kind){case v:this._fragmentSignaturesByName=()=>null;break;case T:this._parentTypeStack.pop();break;case b:this._fieldDefStack.pop(),this._typeStack.pop();break;case Q:this._directive=null;break;case w:this._fragmentSignature=null;break;case y:case S:case I:this._typeStack.pop();break;case g:this._inputTypeStack.pop();break;case E:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case N:this._fragmentArgument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case A:case F:this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case $:this._enumValue=null}}}function Vr(e,t){return{enter(...n){const r=n[0];e.enter(r);const i=Dt(t,r.kind).enter;if(i){const o=i.apply(t,n);return void 0!==o&&(e.leave(r),d(o)&&e.enter(o)),o}},leave(...n){const r=n[0],i=Dt(t,r.kind).leave;let o;return i&&(o=i.apply(t,n)),e.leave(r),o}}}function Cr(e){const t=e.arguments?.find(e=>"if"===e.name.value);if(!t)return!1;if(t.value.kind===x){if(t.value.value)return!1}else if(t.value.kind!==L)return!1;return!0}function jr(e){return e.kind===y||e.kind===I}function Rr(e){return e.kind===U||e.kind===P||e.kind===J||e.kind===K||e.kind===z||e.kind===H}function Mr(e){return e.kind===Z||e.kind===ee||e.kind===te||e.kind===ne||e.kind===re||e.kind===ie}function Ur(e){const t=new Map,n=e.getSchema(),r=n?n.getDirectives():Zn;for(const e of r)t.set(e.name,e.args.map(e=>e.name));const i=e.getDocument().definitions;for(const e of i)if(e.kind===W){const n=e.arguments??[];t.set(e.name.value,n.map(e=>e.name.value))}return{Directive(n){const r=n.name.value,i=t.get(r);if(null!=n.arguments&&null!=i)for(const t of n.arguments){const n=t.name.value;if(!i.includes(n)){const o=Nt(n,i);e.reportError(new GraphQLError(`Unknown argument "${n}" on directive "@${r}".`+(e.hideSuggestions?"":mt(o)),{nodes:t}))}}return!1}}}function Pr(e){const t=new Map,r=e.getSchema(),i=r?r.getDirectives():Zn;for(const e of i)t.set(e.name,e.locations);const o=e.getDocument().definitions;for(const e of o)e.kind===W&&t.set(e.name.value,e.locations.map(e=>e.value));return{Directive(r,i,o,s,a){const c=r.name.value,u=t.get(c);if(null==u)return void e.reportError(new GraphQLError(`Unknown directive "@${c}".`,{nodes:r}));const l=function(e){const t=e.at(-1);switch(null!=t&&"kind"in t||n(),t.kind){case y:return function(e){switch(e){case f.QUERY:return h.QUERY;case f.MUTATION:return h.MUTATION;case f.SUBSCRIPTION:return h.SUBSCRIPTION}}(t.operation);case b:return h.FIELD;case w:return h.FRAGMENT_SPREAD;case S:return h.INLINE_FRAGMENT;case I:return h.FRAGMENT_DEFINITION;case g:{const t=e[e.length-3];return"kind"in t||n(),t.kind===y?h.VARIABLE_DEFINITION:h.FRAGMENT_VARIABLE_DEFINITION}case R:case X:return h.SCHEMA;case U:case Z:return h.SCALAR;case P:case ee:return h.OBJECT;case B:return h.FIELD_DEFINITION;case J:case te:return h.INTERFACE;case K:case ne:return h.UNION;case z:case re:return h.ENUM;case Y:return h.ENUM_VALUE;case H:case ie:return h.INPUT_OBJECT;case q:{const t=e.at(-3);return null!=t&&"kind"in t||n(),t.kind===H?h.INPUT_FIELD_DEFINITION:h.ARGUMENT_DEFINITION}default:n(0,"Unexpected kind: "+tt(t.kind))}}(a);null==l||u.includes(l)||e.reportError(new GraphQLError(`Directive "@${c}" may not be used on ${l}.`,{nodes:r}))}}}function Br(e){const{definitions:t}=e.getDocument(),n=e.getSchema()?.getTypeMap()??{},r=new Set([...Object.keys(n),...t.filter(Rr).map(e=>e.name.value)]);return{NamedType(t,n,i,o,s){const a=t.name.value;if(!r.has(a)){const n=s[2]??i,o=null!=n&&("kind"in(c=n)&&(function(e){return e.kind===R||Rr(e)||e.kind===W}(c)||function(e){return e.kind===X||Mr(e)}(c)));if(o&&qr.has(a))return;const u=e.hideSuggestions?[]:Nt(a,o?[...qr,...r]:[...r]);e.reportError(new GraphQLError(`Unknown type "${a}".`+mt(u),{nodes:t}))}var c}}}const qr=new Set([...Mn,...vr].map(e=>e.name));function Jr(e){const t=new Set,n=[];return{OperationDefinition(n){for(const r of e.getRecursivelyReferencedFragments(n))t.add(r.name.value);return!1},FragmentDefinition:e=>(n.push(e),!1),Document:{leave(){for(const r of n){const n=r.name.value;t.has(n)||e.reportError(new GraphQLError(`Fragment "${n}" is never used.`,{nodes:r}))}}}}}function Kr(e){switch(e.kind){case G:return{...e,fields:(t=e.fields,t.map(e=>({...e,value:Kr(e.value)})).sort((e,t)=>gt(e.name.value,t.name.value)))};case A:return{...e,values:e.values.map(Kr)};case k:case O:case _:case x:case D:case $:case L:return e}var t}function zr(e){return Array.isArray(e)?e.map(([e,t])=>`subfields "${e}" conflict because `+zr(t)).join(" and "):e}function Yr(e,t,n,r,i,o,s,a){if(r.has(s,a.key,o))return;r.add(s,a.key,o);const c=e.getFragment(a.node.name.value);if(!c)return;const[u,l]=oi(e,n,c,a.varMap);if(s!==u){Wr(e,t,n,r,i,o,s,void 0,u,a.varMap);for(const a of l)Yr(e,t,n,r,i,o,s,a)}}function Hr(e,t,n,r,i,o,s,a){if(s.key===a.key)return;if(s.node.name.value===a.node.name.value&&!Zr(s.node.arguments,s.varMap,a.node.arguments,a.varMap))return void e.reportError(new GraphQLError(`Spreads "${s.node.name.value}" conflict because ${s.key} and ${a.key} have different fragment arguments.`,{nodes:[s.node,a.node]}));if(i.has(s.key,a.key,o))return;i.add(s.key,a.key,o);const c=e.getFragment(s.node.name.value),u=e.getFragment(a.node.name.value);if(!c||!u)return;const[l,p]=oi(e,n,c,s.varMap),[d,f]=oi(e,n,u,a.varMap);Wr(e,t,n,r,i,o,l,s.varMap,d,a.varMap);for(const a of f)Hr(e,t,n,r,i,o,s,a);for(const s of p)Hr(e,t,n,r,i,o,s,a)}function Wr(e,t,n,r,i,o,s,a,c,u){for(const[l,p]of s.entries()){const s=c.get(l);if(null!=s)for(const c of p)for(const p of s){const s=Xr(e,n,r,i,o,l,c,a,p,u);s&&t.push(s)}}}function Xr(e,t,n,r,i,o,s,a,c,u){const[l,p,d]=s,[f,h,m]=c,v=i||l!==f&&Bt(l)&&Bt(f);if(!v){const e=p.name.value,t=h.name.value;if(e!==t)return[[o,`"${e}" and "${t}" are different fields`],[p],[h]];if(!Zr(p.arguments,a,h.arguments,u))return[[o,"they have differing arguments"],[p],[h]]}const y=function(e,t,n,r){const i=ni(e),o=ni(n);if(!i&&!o)return;if(i&&o)return Zr(i.arguments,t,o.arguments,r)?"they have overlapping stream directives. See https://github.com/graphql/defer-stream-wg/discussions/100":"they have overlapping stream directives";return"they have overlapping stream directives"}(p.directives??[],a,h.directives??[],u);if(void 0!==y)return[[o,y],[p],[h]];const g=d?.type,T=m?.type;if(g&&T&&ri(g,T))return[[o,`they return conflicting types "${tt(g)}" and "${tt(T)}"`],[p],[h]];const b=p.selectionSet,E=h.selectionSet;if(b&&E){const i=function(e,t,n,r,i,o,s,a,c,u,l){const p=[],[d,f]=ii(e,t,o,s,a),[h,m]=ii(e,t,c,u,l);Wr(e,p,t,n,r,i,d,a,h,l);for(const o of m)Yr(e,p,t,n,r,i,d,o);for(const o of f)Yr(e,p,t,n,r,i,h,o);for(const o of f)for(const s of m)Hr(e,p,t,n,r,i,o,s);return p}(e,t,n,r,v,un(g),b,a,un(T),E,u);return function(e,t,n,r){if(e.length>0)return[[t,e.map(([e])=>e)],[n,...e.map(([,e])=>e).flat()],[r,...e.map(([,,e])=>e).flat()]]}(i,o,p,h)}}function Zr(e,t,n,r){if(void 0===e||0===e.length)return void 0===n||0===n.length;if(void 0===n||0===n.length)return!1;if(e.length!==n.length)return!1;const i=new Map(n.map(({name:e,value:t})=>[e.value,void 0===r?t:ei(t,r)]));return e.every(e=>{let n=e.value;t&&(n=ei(n,t));const r=i.get(e.name.value);return void 0!==r&&ti(n)===ti(r)})}function ei(e,t){switch(e.kind){case L:return t.get(e.name.value)??e;case A:return{...e,values:e.values.map(e=>ei(e,t))};case G:return{...e,fields:e.fields.map(e=>({...e,value:ei(e.value,t)}))};default:return e}}function ti(e){return $t(Kr(e))}function ni(e){return e.find(e=>"stream"===e.name.value)}function ri(e,t){return Ht(e)?!Ht(t)||ri(e.ofType,t.ofType):!!Ht(t)||(Wt(e)?!Wt(t)||ri(e.ofType,t.ofType):!!Wt(t)||!(!en(e)&&!en(t))&&e!==t)}function ii(e,t,n,r,i){const o=t.get(r);if(o)return o;const s=new Map,a=new Map;si(e,n,r,s,a,i);const c=[s,Array.from(a.values())];return t.set(r,c),c}function oi(e,t,n,r){const i=t.get(n.selectionSet);if(i)return i;const o=Qr(e.getSchema(),n.typeCondition);return ii(e,t,o,n.selectionSet,r)}function si(e,t,n,r,i,o){for(const s of n.selections)switch(s.kind){case b:{const e=s.name.value;let n;(Bt(t)||Jt(t))&&(n=t.getFields()[e]);const i=s.alias?s.alias.value:e;let o=r.get(i);null==o&&(o=[],r.set(i,o)),o.push([t,s,n]);break}case w:{const t=ai(e,s,o);i.set(t.key,t);break}case S:{const n=s.typeCondition,a=n?Qr(e.getSchema(),n):t;si(e,a,s.selectionSet,r,i,o);break}}}function ai(e,t,n){let r="";const i=new Map,o=e.getFragmentSignatureByName()(t.name.value),s=new Map;if(t.arguments)for(const e of t.arguments)s.set(e.name.value,e.value);if(o?.variableDefinitions){r+=t.name.value+"(";for(const[e,t]of o.variableDefinitions){const o=s.get(e);o&&(r+=e+": "+$t(Kr(o)));const a=s.get(e);void 0!==a?i.set(e,void 0!==n?ei(a,n):a):t.defaultValue&&i.set(e,t.defaultValue)}r+=")"}return{key:r,node:t,varMap:i.size>0?i:void 0}}class OrderedPairSet{constructor(){this._data=new Map}has(e,t,n){const r=this._data.get(e)?.get(t);return void 0!==r&&(!!n||n===r)}add(e,t,n){const r=this._data.get(e);void 0===r?this._data.set(e,new Map([[t,n]])):r.set(t,n)}}class PairSet{constructor(){this._orderedPairSet=new OrderedPairSet}has(e,t,n){return e<t?this._orderedPairSet.has(e,t,n):this._orderedPairSet.has(t,e,n)}add(e,t,n){e<t?this._orderedPairSet.add(e,t,n):this._orderedPairSet.add(t,e,n)}}const ci={[U]:Z,[P]:ee,[J]:te,[K]:ne,[z]:re,[H]:ie};function ui(e){const t=new Map,n=e.getSchema(),r=n?.getDirectives()??Zn;for(const e of r)t.set(e.name,new Map(e.args.filter(hn).map(e=>[e.name,e])));const i=e.getDocument().definitions;for(const e of i)if(e.kind===W){const n=e.arguments??[];t.set(e.name.value,new Map(n.filter(li).map(e=>[e.name.value,e])))}return{Directive:{leave(n){const r=n.name.value,i=t.get(r);if(null!=i){const t=n.arguments??[],o=new Set(t.map(e=>e.name.value));for(const[t,s]of i.entries())if(!o.has(t)){const i=Ut(s.type)?tt(s.type):$t(s.type);e.reportError(new GraphQLError(`Argument "@${r}(${t}:)" of type "${i}" is required, but it was not provided.`,{nodes:n}))}}}}}}function li(e){return e.type.kind===j&&null==e.defaultValue}function pi(e,n){if(Wt(n)){if(null==e)return;return pi(e,n.ofType)}if(null==e)return null;if(Ht(n)){if(!pt(e)){const t=pi(e,n.ofType);if(void 0===t)return;return[t]}const t=[];for(const r of e){const e=pi(r,n.ofType);if(void 0===e)return;t.push(e)}return t}if(Yt(n)){if(!t(e)||Array.isArray(e))return;const r={},i=n.getFields();if(Object.keys(e).some(e=>!Object.hasOwn(i,e)))return;for(const t of Object.values(i)){const n=e[t.name];if(void 0===n){if(gn(t))return;const e=hi(t);void 0!==e&&(r[t.name]=e)}else{const e=pi(n,t.type);if(void 0===e)return;r[t.name]=e}}if(n.isOneOf){const e=Object.keys(r);if(1!==e.length)return;if(null===r[e[0]])return}return r}const r=tn(n);try{return r.coerceInputValue(e)}catch(e){}}function di(e,t,n,r){if(e.kind===L){const i=fi(e,n,r);if(null==i&&Wt(t))return;return i}if(Wt(t)){if(e.kind===D)return;return di(e,t.ofType,n,r)}if(e.kind===D)return null;if(Ht(t)){if(e.kind!==A){const i=di(e,t.ofType,n,r);if(void 0===i)return;return[i]}const i=[];for(const o of e.values){let e=di(o,t.ofType,n,r);if(void 0===e){if(o.kind!==L||null!=fi(o,n,r)||Wt(t.ofType))return;e=null}i.push(e)}return i}if(Yt(t)){if(e.kind!==G)return;const i={},o=t.getFields();if(e.fields.some(e=>!Object.hasOwn(o,e.name.value)))return;const s=new Map(e.fields.map(e=>[e.name.value,e]));for(const e of Object.values(o)){const t=s.get(e.name);if(!t||t.value.kind===L&&null==fi(t.value,n,r)){if(gn(e))return;const t=hi(e);void 0!==t&&(i[e.name]=t)}else{const o=di(t.value,e.type,n,r);if(void 0===o)return;i[e.name]=o}}if(t.isOneOf){const e=Object.keys(i);if(1!==e.length)return;if(null===i[e[0]])return}return i}const i=tn(t);try{return i.coerceInputLiteral?i.coerceInputLiteral(Ln(e,n,r)):i.parseLiteral(e,n?.coerced)}catch(e){}}function fi(e,t,n){const r=e.name.value;return void 0!==n?.sources[r]?n.coerced[r]:t?.coerced[r]}function hi(e){let t=e._memoizedCoercedDefaultValue;if(void 0!==t)return t;const r=e.default;if(void 0!==r)return t=r.literal?di(r.literal,e.type):pi(r.value,e.type),void 0!==t||n(),e._memoizedCoercedDefaultValue=t,t;const i=e.defaultValue;return void 0!==i&&(e._memoizedCoercedDefaultValue=i),i}function mi(e,t,n,r,i){const o=e.arguments??[],s=new Map(o.map(e=>[e.name.value,e])),a=Object.create(null),c=Object.create(null);for(const[o,u]of Object.entries(t)){a[o]={signature:u};const t=s.get(o);if(void 0!==t){const e=a[o];e.value=t.value,e.fragmentVariableValues=r}yi(c,e,o,u,t,n,r,i)}return{sources:a,coerced:c}}function vi(e,t,n,r,i){const o={},s=t.arguments??[],a=new Map(s.map(e=>[e.name.value,e]));for(const s of e.args){yi(o,t,s.name,s,a.get(s.name),n,r,i)}return o}function yi(e,t,r,i,o,s,a,c){const u=i.type;if(!o){if(hn(i))throw new GraphQLError(`Argument "${qt(i)?i:r}" of required type "${u}" was not provided.`,{nodes:t});const n=hi(i);return void(void 0!==n&&(e[r]=n))}const l=o.value;if(l.kind===L){const t=l.name.value,n=a?.sources[t]?a:s;if(!(null!=n&&Object.hasOwn(n.coerced,t)||hn(i))){const t=hi(i);return void(void 0!==t&&(e[r]=t))}}const p=di(l,u,s,a);void 0===p&&(xn(l,u,(e,t)=>{throw e.message=`Argument "${qt(i)?i:i.name}" has invalid value${ht(t)}: ${e.message}`,e},s,a,c),n(0,"Invalid argument")),e[r]=p}function gi(e,t,n,r,i){const o=t.directives?.find(t=>t.name.value===e.name);if(o)return vi(e,o,n,r,i)}function Ti(e,t,n,r,i,o,s=!1){const a=new AccumulatorMap,c=[],u={schema:e,fragments:t,variableValues:n,runtimeType:r,visitedFragmentNames:new Set,hideSuggestions:o,forbiddenDirectiveInstances:[],forbidSkipAndInclude:s};return bi(u,i,a,c),{groupedFieldSet:a,newDeferUsages:c,forbiddenDirectiveInstances:u.forbiddenDirectiveInstances}}function bi(e,t,n,r,i,o){const{schema:s,fragments:a,variableValues:c,runtimeType:u,visitedFragmentNames:l,hideSuggestions:p}=e;for(const d of t.selections)switch(d.kind){case b:if(!Ni(e,d,c,o))continue;n.add(Si(d),{node:d,deferUsage:i,fragmentVariableValues:o});break;case S:{if(!Ni(e,d,c,o)||!wi(s,d,u))continue;const t=Ei(c,o,d,i);t?(r.push(t),bi(e,d.selectionSet,n,r,t,o)):bi(e,d.selectionSet,n,r,i,o);break}case w:{const t=d.name.value;if(l.has(t)||!Ni(e,d,c,o))continue;const f=a[t];if(null==f||!wi(s,f.definition,u))continue;const h=Ei(c,o,d,i),m=f.variableSignatures;let v;m&&(v=mi(d,m,c,o,p)),h?(r.push(h),bi(e,f.definition.selectionSet,n,r,h,v)):(l.add(t),bi(e,f.definition.selectionSet,n,r,i,v));break}}}function Ei(e,t,n,r){const i=gi(Kn,n,e,t);if(i&&!1!==i.if)return{label:"string"==typeof i.label?i.label:void 0,parentDeferUsage:r}}function Ni(e,t,n,r){const i=t.directives?.find(e=>e.name.value===Jn.name);if(i&&e.forbidSkipAndInclude)return e.forbiddenDirectiveInstances.push(i),!1;const o=i?vi(Jn,i,n,r,e.hideSuggestions):void 0;if(!0===o?.if)return!1;const s=t.directives?.find(e=>e.name.value===qn.name);if(s&&e.forbidSkipAndInclude)return e.forbiddenDirectiveInstances.push(s),!1;const a=s?vi(qn,s,n,r,e.hideSuggestions):void 0;return!1!==a?.if}function wi(e,t,n){const r=t.typeCondition;if(!r)return!0;const i=Qr(e,r);return i===n||!!rn(i)&&e.isSubType(i,n)}function Si(e){return e.alias?e.alias.value:e.name.value}function Ii(e){return e.map(e=>e.node)}function Li(e,t){const n=new AccumulatorMap;for(const r of e)n.add(t(r),r);return n}function ki(e){return{Field:t,Directive:t};function t(t){const n=Li(t.arguments??[],e=>e.name.value);for(const[t,r]of n)r.length>1&&e.reportError(new GraphQLError(`There can be only one argument named "${t}".`,{nodes:r.map(e=>e.name)}))}}function Oi(e){const t=new Map,n=e.getSchema(),r=n?n.getDirectives():Zn;for(const e of r)t.set(e.name,!e.isRepeatable);const i=e.getDocument().definitions;for(const e of i)e.kind===W&&t.set(e.name.value,!e.repeatable);const o=new Map,s=new Map;return{enter(n){if(!("directives"in n)||!n.directives)return;let r;if(n.kind===R||n.kind===X)r=o;else if(Rr(n)||Mr(n)){const e=n.name.value;r=s.get(e),void 0===r&&(r=new Map,s.set(e,r))}else r=new Map;for(const i of n.directives){const n=i.name.value;if(!0===t.get(n)){const t=r.get(n);null!=t?e.reportError(new GraphQLError(`The directive "@${n}" can only be used once at this location.`,{nodes:[t,i]})):r.set(n,i)}}}}}function _i(e,t){return!!(Bt(e)||Jt(e)||Yt(e))&&null!=e.getFields()[t]}function xi(e){const t=[];let r=new Map;return{ObjectValue:{enter(){t.push(r),r=new Map},leave(){const e=t.pop();null!=e||n(),r=e}},ObjectField(t){const n=t.name.value,i=r.get(n);null!=i?e.reportError(new GraphQLError(`There can be only one input field named "${n}".`,{nodes:[i,t.name]})):r.set(n,t.name)}}}function Di(e,t,n){return n&&xn(t,n,t=>{e.reportError(t)},void 0,void 0,e.hideSuggestions),!1}function $i(e,t,n,r,i){if(Wt(r)&&!Wt(t)){if(!(null!=n&&n.kind!==D)&&!(void 0!==i))return!1;return bn(e,t,r.ofType)}return bn(e,t,r)}const Ai=Object.freeze([function(e){function t(n,r=Object.create(null),i=0){if(n.kind===w){const o=n.name.value;if(!0===r[o])return!1;const s=e.getFragment(o);if(!s)return!1;try{return r[o]=!0,t(s,r,i)}finally{r[o]=void 0}}if(n.kind===b&&("fields"===n.name.value||"interfaces"===n.name.value||"possibleTypes"===n.name.value||"inputFields"===n.name.value)&&++i>=3)return!0;if("selectionSet"in n&&n.selectionSet)for(const e of n.selectionSet.selections)if(t(e,r,i))return!0;return!1}return{Field(n){if(("__schema"===n.name.value||"__type"===n.name.value)&&t(n))return e.reportError(new GraphQLError("Maximum introspection depth exceeded",{nodes:[n]})),!1}}}]),Gi=Object.freeze([function(e){return{Document(t){for(const n of t.definitions)if(!jr(n)){const t=n.kind===R||n.kind===X?"schema":'"'+n.name.value+'"';e.reportError(new GraphQLError(`The ${t} definition is not executable.`,{nodes:n}))}return!1}}},function(e){const t=e.getSchema();return{OperationDefinition(n){const r=n.operation;t.getRootType(r)||e.reportError(new GraphQLError(`The ${r} operation is not supported by the schema.`,{nodes:n}))}}},function(e){const t=new Map;return{OperationDefinition(n){const r=n.name;if(null!=r){const n=t.get(r.value);null!=n?e.reportError(new GraphQLError(`There can be only one operation named "${r.value}".`,{nodes:[n,r]})):t.set(r.value,r)}return!1},FragmentDefinition:()=>!1}},function(e){let t=0;return{Document(e){t=e.definitions.filter(e=>e.kind===y).length},OperationDefinition(n){!n.name&&t>1&&e.reportError(new GraphQLError("This anonymous operation must be the only defined operation.",{nodes:n}))}}},function(e){return{OperationDefinition(t){if("subscription"===t.operation){const n=e.getSchema(),r=n.getSubscriptionType();if(r){const i=t.name?t.name.value:null,o=Object.create(null),s=e.getDocument(),a=Object.create(null);for(const e of s.definitions)e.kind===I&&(a[e.name.value]={definition:e});const{groupedFieldSet:c,forbiddenDirectiveInstances:u}=Ti(n,a,o,r,t.selectionSet,e.hideSuggestions,!0);if(u.length>0)return void e.reportError(new GraphQLError(null!=i?`Subscription "${i}" must not use \`@skip\` or \`@include\` directives in the top level selection.`:"Anonymous Subscription must not use `@skip` or `@include` directives in the top level selection.",{nodes:u}));if(c.size>1){const t=[...c.values()].slice(1).flatMap(e=>Ii(e));e.reportError(new GraphQLError(null!=i?`Subscription "${i}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",{nodes:t}))}for(const t of c.values()){Ii(t)[0].name.value.startsWith("__")&&e.reportError(new GraphQLError(null!=i?`Subscription "${i}" must not select an introspection top level field.`:"Anonymous Subscription must not select an introspection top level field.",{nodes:Ii(t)}))}}}}}},Br,function(e){return{InlineFragment(t){const n=t.typeCondition;if(n){const t=Qr(e.getSchema(),n);if(t&&!nn(t)){const t=$t(n);e.reportError(new GraphQLError(`Fragment cannot condition on non composite type "${t}".`,{nodes:n}))}}},FragmentDefinition(t){const n=Qr(e.getSchema(),t.typeCondition);if(n&&!nn(n)){const n=$t(t.typeCondition);e.reportError(new GraphQLError(`Fragment "${t.name.value}" cannot condition on non composite type "${n}".`,{nodes:t.typeCondition}))}}}},function(e){return{VariableDefinition(t){const n=Qr(e.getSchema(),t.type);if(void 0!==n&&!Xt(n)){const n=t.variable.name.value,r=$t(t.type);e.reportError(new GraphQLError(`Variable "$${n}" cannot be non-input type "${r}".`,{nodes:t.type}))}}}},function(e){return{Field(t){const n=e.getType(),r=t.selectionSet;if(n)if(en(un(n))){if(r){const i=t.name.value,o=tt(n);e.reportError(new GraphQLError(`Field "${i}" must not have a selection since type "${o}" has no subfields.`,{nodes:r}))}}else if(r){if(0===r.selections.length){const r=t.name.value,i=tt(n);e.reportError(new GraphQLError(`Field "${r}" of type "${i}" must have at least one field selected.`,{nodes:t}))}}else{const r=t.name.value,i=tt(n);e.reportError(new GraphQLError(`Field "${r}" of type "${i}" must have a selection of subfields. Did you mean "${r} { ... }"?`,{nodes:t}))}}}},function(e){return{Field(t){const n=e.getParentType();if(n){if(!e.getFieldDef()){const r=e.getSchema(),i=t.name.value;let o=mt("to use an inline fragment on",e.hideSuggestions?[]:function(e,t,n){if(!rn(t))return[];const r=new Set,i=Object.create(null);for(const o of e.getPossibleTypes(t))if(null!=o.getFields()[n]){r.add(o),i[o.name]=1;for(const e of o.getInterfaces())null!=e.getFields()[n]&&(r.add(e),i[e.name]=(i[e.name]??0)+1)}return[...r].sort((t,n)=>{const r=i[n.name]-i[t.name];return 0!==r?r:Jt(t)&&e.isSubType(t,n)?-1:Jt(n)&&e.isSubType(n,t)?1:gt(t.name,n.name)}).map(e=>e.name)}(r,n,i));""===o&&(o=mt(e.hideSuggestions?[]:function(e,t){if(Bt(e)||Jt(e)){return Nt(t,Object.keys(e.getFields()))}return[]}(n,i))),e.reportError(new GraphQLError(`Cannot query field "${i}" on type "${n}".`+o,{nodes:t}))}}}}},function(e){const t=new Map;return{OperationDefinition:()=>!1,FragmentDefinition(n){const r=n.name.value,i=t.get(r);return null!=i?e.reportError(new GraphQLError(`There can be only one fragment named "${r}".`,{nodes:[i,n.name]})):t.set(r,n.name),!1}}},function(e){return{FragmentSpread(t){const n=t.name.value;e.getFragment(n)||e.reportError(new GraphQLError(`Unknown fragment "${n}".`,{nodes:t.name}))}}},Jr,function(e){return{InlineFragment(t){const n=e.getType(),r=e.getParentType();if(nn(n)&&nn(r)&&!En(e.getSchema(),n,r)){const i=tt(r),o=tt(n);e.reportError(new GraphQLError(`Fragment cannot be spread here as objects of type "${i}" can never be of type "${o}".`,{nodes:t}))}},FragmentSpread(t){const n=t.name.value,r=function(e,t){const n=e.getFragment(t);if(n){const t=Qr(e.getSchema(),n.typeCondition);if(nn(t))return t}}(e,n),i=e.getParentType();if(r&&i&&!En(e.getSchema(),r,i)){const o=tt(i),s=tt(r);e.reportError(new GraphQLError(`Fragment "${n}" cannot be spread here as objects of type "${o}" can never be of type "${s}".`,{nodes:t}))}}}},function(e){const t=new Set,n=[],r=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition:e=>(i(e),!1)};function i(o){if(t.has(o.name.value))return;const s=o.name.value;t.add(s);const a=e.getFragmentSpreads(o.selectionSet);if(0!==a.length){r[s]=n.length;for(const t of a){const o=t.name.value,s=r[o];if(n.push(t),void 0===s){const t=e.getFragment(o);t&&i(t)}else{const t=n.slice(s),r=t.slice(0,-1).map(e=>'"'+e.name.value+'"').join(", ");e.reportError(new GraphQLError(`Cannot spread fragment "${o}" within itself`+(""!==r?` via ${r}.`:"."),{nodes:t}))}n.pop()}r[s]=void 0}}},function(e){return{OperationDefinition(t){const n=Li(t.variableDefinitions??[],e=>e.variable.name.value);for(const[t,r]of n)r.length>1&&e.reportError(new GraphQLError(`There can be only one variable named "$${t}".`,{nodes:r.map(e=>e.variable.name)}))}}},function(e){return{OperationDefinition(t){const n=new Set(t.variableDefinitions?.map(e=>e.variable.name.value)),r=e.getRecursiveVariableUsages(t);for(const{node:i,fragmentVariableDefinition:o}of r){if(o)continue;const r=i.name.value;n.has(r)||e.reportError(new GraphQLError(t.name?`Variable "$${r}" is not defined by operation "${t.name.value}".`:`Variable "$${r}" is not defined.`,{nodes:[i,t]}))}}}},function(e){return{FragmentDefinition(t){const n=e.getVariableUsages(t),r=new Set(n.map(({node:e})=>e.name.value)),i=t.variableDefinitions??[];for(const n of i){const i=n.variable.name.value;r.has(i)||e.reportError(new GraphQLError(`Variable "$${i}" is never used in fragment "${t.name.value}".`,{nodes:n}))}},OperationDefinition(t){const n=e.getRecursiveVariableUsages(t),r=new Set;for(const{node:e,fragmentVariableDefinition:t}of n){const n=e.name.value;t||r.add(n)}const i=t.variableDefinitions??[];for(const n of i){const i=n.variable.name.value;r.has(i)||e.reportError(new GraphQLError(t.name?`Variable "$${i}" is never used in operation "${t.name.value}".`:`Variable "$${i}" is never used.`,{nodes:n}))}}}},Pr,Oi,function(e){return{Directive(t){const n=e.getSchema().getMutationType(),r=e.getSchema().getSubscriptionType(),i=e.getParentType();i&&t.name.value===Kn.name&&(n&&i===n&&e.reportError(new GraphQLError(`Defer directive cannot be used on root mutation type "${i}".`,{nodes:t})),r&&i===r&&e.reportError(new GraphQLError(`Defer directive cannot be used on root subscription type "${i}".`,{nodes:t}))),i&&t.name.value===zn.name&&(n&&i===n&&e.reportError(new GraphQLError(`Stream directive cannot be used on root mutation type "${i}".`,{nodes:t})),r&&i===r&&e.reportError(new GraphQLError(`Stream directive cannot be used on root subscription type "${i}".`,{nodes:t})))}}},function(e){const t=new Set;return{OperationDefinition(n){if(n.operation===f.SUBSCRIPTION)for(const r of e.getRecursivelyReferencedFragments(n))t.add(r.name.value)},Directive(n,r,i,o,s){const a=s[2];"kind"in a&&(a.kind===I&&t.has(a.name.value)||a.kind===y&&a.operation===f.SUBSCRIPTION)&&(n.name.value===Kn.name?Cr(n)||e.reportError(new GraphQLError("Defer directive not supported on subscription operations. Disable `@defer` by setting the `if` argument to `false`.",{nodes:n})):n.name.value===zn.name&&(Cr(n)||e.reportError(new GraphQLError("Stream directive not supported on subscription operations. Disable `@stream` by setting the `if` argument to `false`.",{nodes:n}))))}}},function(e){const t=new Map;return{Directive(n){if(n.name.value===Kn.name||n.name.value===zn.name){const r=n.arguments?.find(e=>"label"===e.name.value),i=r?.value;if(!i)return;if(i.kind!==_)return void e.reportError(new GraphQLError(`Argument "@${n.name.value}(label:)" must be a static string.`,{nodes:n}));const o=t.get(i.value);null!=o?e.reportError(new GraphQLError('Value for arguments "defer(label:)" and "stream(label:)" must be unique across all Defer/Stream directive usages.',{nodes:[o,n]})):t.set(i.value,n)}}}},function(e){return{Directive(t){const n=e.getFieldDef(),r=e.getParentType();n&&r&&t.name.value===zn.name&&!(Ht(n.type)||on(n.type)&&Ht(n.type.ofType))&&e.reportError(new GraphQLError(`Directive "@stream" cannot be used on non-list field "${r}.${n.name}".`,{nodes:t}))}}},function(e){return{...Ur(e),FragmentArgument(t){const n=e.getFragmentSignature();if(n){if(!n.variableDefinitions.get(t.name.value)){const r=t.name.value,i=e.hideSuggestions?[]:Nt(r,Array.from(n.variableDefinitions.values()).map(e=>e.variable.name.value));e.reportError(new GraphQLError(`Unknown argument "${r}" on fragment "${n.definition.name.value}".`+mt(i),{nodes:t}))}}},Argument(t){const n=e.getArgument(),r=e.getFieldDef();if(!n&&r){const n=t.name.value,i=e.hideSuggestions?[]:Nt(n,r.args.map(e=>e.name));e.reportError(new GraphQLError(`Unknown argument "${n}" on field "${r}".`+mt(i),{nodes:t}))}}}},ki,function(e){return{NullValue:t=>Di(e,t,e.getInputType()),ListValue:t=>Di(e,t,e.getParentInputType()),ObjectValue:t=>Di(e,t,e.getInputType()),EnumValue:t=>Di(e,t,e.getInputType()),IntValue:t=>Di(e,t,e.getInputType()),FloatValue:t=>Di(e,t,e.getInputType()),StringValue:t=>Di(e,t,e.getInputType()),BooleanValue:t=>Di(e,t,e.getInputType())}},function(e){return{...ui(e),Field:{leave(t){const n=e.getFieldDef();if(!n)return!1;const r=new Set(t.arguments?.map(e=>e.name.value));for(const i of n.args)!r.has(i.name)&&hn(i)&&e.reportError(new GraphQLError(`Argument "${i}" of type "${i.type}" is required, but it was not provided.`,{nodes:t}))}},FragmentSpread:{leave(t){const n=e.getFragmentSignature();if(!n)return!1;const r=new Set(t.arguments?.map(e=>e.name.value));for(const[i,o]of n.variableDefinitions)if(!r.has(i)&&li(o)){const n=tt(Qr(e.getSchema(),o.type));e.reportError(new GraphQLError(`Fragment "${t.name.value}" argument "${i}" of type "${n}" is required, but it was not provided.`,{nodes:t}))}}}}},function(e){let t;return{OperationDefinition:{enter(){t=new Map},leave(n){const r=e.getRecursiveVariableUsages(n);for(const{node:n,type:i,parentType:o,defaultValue:s,fragmentVariableDefinition:a}of r){const r=n.name.value;let c=a;if(c||(c=t.get(r)),c&&i){const t=e.getSchema(),a=Qr(t,c.type);a&&!$i(t,a,c.defaultValue,i,s)&&e.reportError(new GraphQLError(`Variable "$${r}" of type "${a}" used in position expecting type "${i}".`,{nodes:[c,n]})),Yt(o)&&o.isOneOf&&sn(a)&&e.reportError(new GraphQLError(`Variable "$${r}" is of type "${a}" but must be non-nullable to be used for OneOf Input Object "${o}".`,{nodes:[c,n]}))}}}},VariableDefinition(e){t.set(e.variable.name.value,e)}}},function(e){const t=new OrderedPairSet,n=new PairSet,r=new Map;return{SelectionSet(i){const o=function(e,t,n,r,i,o){const s=[],[a,c]=ii(e,t,i,o,void 0);if(function(e,t,n,r,i,o){for(const[s,a]of o.entries())if(a.length>1)for(let o=0;o<a.length;o++)for(let c=o+1;c<a.length;c++){const u=Xr(e,n,r,i,!1,s,a[o],void 0,a[c],void 0);u&&t.push(u)}}(e,s,t,n,r,a),0!==c.length)for(let i=0;i<c.length;i++){Yr(e,s,t,n,r,!1,a,c[i]);for(let o=i+1;o<c.length;o++)Hr(e,s,t,n,r,!1,c[i],c[o])}return s}(e,r,t,n,e.getParentType(),i);for(const[[t,n],r,i]of o){const o=zr(n);e.reportError(new GraphQLError(`Fields "${t}" conflict because ${o}. Use different aliases on the fields to fetch both if this was intentional.`,{nodes:r.concat(i)}))}}}},xi,...Ai]),Fi=Object.freeze([function(e){const t=e.getSchema(),n=t?.astNode??t?.getQueryType()??t?.getMutationType()??t?.getSubscriptionType();let r=0;return{SchemaDefinition(t){n?e.reportError(new GraphQLError("Cannot define a new schema within a schema extension.",{nodes:t})):(r>0&&e.reportError(new GraphQLError("Must provide only one schema definition.",{nodes:t})),++r)}}},function(e){const t=e.getSchema(),n=new Map,r=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:i,SchemaExtension:i};function i(t){const i=t.operationTypes??[];for(const t of i){const i=t.operation,o=n.get(i);r[i]?e.reportError(new GraphQLError(`Type for ${i} already defined in the schema. It cannot be redefined.`,{nodes:t})):o?e.reportError(new GraphQLError(`There can be only one ${i} type in schema.`,{nodes:[o,t]})):n.set(i,t)}return!1}},function(e){const t=new Map,n=e.getSchema();return{ScalarTypeDefinition:r,ObjectTypeDefinition:r,InterfaceTypeDefinition:r,UnionTypeDefinition:r,EnumTypeDefinition:r,InputObjectTypeDefinition:r};function r(r){const i=r.name.value;if(n?.getType(i))return void e.reportError(new GraphQLError(`Type "${i}" already exists in the schema. It cannot also be defined in this type definition.`,{nodes:r.name}));const o=t.get(i);return null!=o?e.reportError(new GraphQLError(`There can be only one type named "${i}".`,{nodes:[o,r.name]})):t.set(i,r.name),!1}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=new Map;return{EnumTypeDefinition:i,EnumTypeExtension:i};function i(t){const i=t.name.value;let o=r.get(i);null==o&&(o=new Map,r.set(i,o));const s=t.values??[];for(const t of s){const r=t.name.value,s=n[i];if(zt(s)&&s.getValue(r)){e.reportError(new GraphQLError(`Enum value "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name}));continue}const a=o.get(r);null!=a?e.reportError(new GraphQLError(`Enum value "${i}.${r}" can only be defined once.`,{nodes:[a,t.name]})):o.set(r,t.name)}return!1}},function(e){const t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=new Map;return{InputObjectTypeDefinition:i,InputObjectTypeExtension:i,InterfaceTypeDefinition:i,InterfaceTypeExtension:i,ObjectTypeDefinition:i,ObjectTypeExtension:i};function i(t){const i=t.name.value;let o=r.get(i);null==o&&(o=new Map,r.set(i,o));const s=t.fields??[];for(const t of s){const r=t.name.value;if(_i(n[i],r)){e.reportError(new GraphQLError(`Field "${i}.${r}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:t.name}));continue}const s=o.get(r);null!=s?e.reportError(new GraphQLError(`Field "${i}.${r}" can only be defined once.`,{nodes:[s,t.name]})):o.set(r,t.name)}return!1}},function(e){return{DirectiveDefinition(e){const t=e.arguments??[];return n(`@${e.name.value}`,t)},InterfaceTypeDefinition:t,InterfaceTypeExtension:t,ObjectTypeDefinition:t,ObjectTypeExtension:t};function t(e){const t=e.name.value,r=e.fields??[];for(const e of r){n(`${t}.${e.name.value}`,e.arguments??[])}return!1}function n(t,n){const r=Li(n,e=>e.name.value);for(const[n,i]of r)i.length>1&&e.reportError(new GraphQLError(`Argument "${t}(${n}:)" can only be defined once.`,{nodes:i.map(e=>e.name)}));return!1}},function(e){const t=new Map,n=e.getSchema();return{DirectiveDefinition(r){const i=r.name.value;if(n?.getDirective(i))return void e.reportError(new GraphQLError(`Directive "@${i}" already exists in the schema. It cannot be redefined.`,{nodes:r.name}));const o=t.get(i);return o?e.reportError(new GraphQLError(`There can be only one directive named "@${i}".`,{nodes:[o,r.name]})):t.set(i,r.name),!1}}},Br,Pr,Oi,function(e){const t=e.getSchema(),r=new Map;for(const t of e.getDocument().definitions)Rr(t)&&r.set(t.name.value,t);return{ScalarTypeExtension:i,ObjectTypeExtension:i,InterfaceTypeExtension:i,UnionTypeExtension:i,EnumTypeExtension:i,InputObjectTypeExtension:i};function i(i){const o=i.name.value,s=r.get(o),a=t?.getType(o);let c;if(null!=s?c=ci[s.kind]:a&&(c=function(e){if(Pt(e))return Z;if(Bt(e))return ee;if(Jt(e))return te;if(Kt(e))return ne;if(zt(e))return re;if(Yt(e))return ie;n(0,"Unexpected type: "+tt(e))}(a)),null!=c){if(c!==i.kind){const t=function(e){switch(e){case Z:return"scalar";case ee:return"object";case te:return"interface";case ne:return"union";case re:return"enum";case ie:return"input object";default:n(0,"Unexpected kind: "+tt(e))}}(i.kind);e.reportError(new GraphQLError(`Cannot extend non-${t} type "${o}".`,{nodes:s?[s,i]:i}))}}else{const n=[...r.keys(),...Object.keys(t?.getTypeMap()??{})];e.reportError(new GraphQLError(`Cannot extend type "${o}" because it is not defined.`+mt(Nt(o,n)),{nodes:i.name}))}}},Ur,ki,xi,ui]);class ASTValidationContext{constructor(e,t){this._ast=e,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=t}get[Symbol.toStringTag](){return"ASTValidationContext"}reportError(e){this._onError(e)}getDocument(){return this._ast}getFragment(e){let t;if(this._fragments)t=this._fragments;else{t=Object.create(null);for(const e of this.getDocument().definitions)e.kind===I&&(t[e.name.value]=e);this._fragments=t}return t[e]}getFragmentSpreads(e){let t=this._fragmentSpreads.get(e);if(!t){t=[];const n=[e];let r;for(;r=n.pop();)for(const e of r.selections)e.kind===w?t.push(e):e.selectionSet&&n.push(e.selectionSet);this._fragmentSpreads.set(e,t)}return t}getRecursivelyReferencedFragments(e){let t=this._recursivelyReferencedFragments.get(e);if(!t){t=[];const n=new Set,r=[e.selectionSet];let i;for(;i=r.pop();)for(const e of this.getFragmentSpreads(i)){const i=e.name.value;if(!n.has(i)){n.add(i);const e=this.getFragment(i);e&&(t.push(e),r.push(e.selectionSet))}}this._recursivelyReferencedFragments.set(e,t)}return t}}class SDLValidationContext extends ASTValidationContext{constructor(e,t,n){super(e,n),this._schema=t}get hideSuggestions(){return!1}get[Symbol.toStringTag](){return"SDLValidationContext"}getSchema(){return this._schema}}class ValidationContext extends ASTValidationContext{constructor(e,t,n,r,i){super(t,r),this._schema=e,this._typeInfo=n,this._variableUsages=new Map,this._recursiveVariableUsages=new Map,this._hideSuggestions=i??!1}get[Symbol.toStringTag](){return"ValidationContext"}get hideSuggestions(){return this._hideSuggestions}getSchema(){return this._schema}getVariableUsages(e){let t=this._variableUsages.get(e);if(!t){const n=[],r=new TypeInfo(this._schema,void 0,this._typeInfo.getFragmentSignatureByName()),i=e.kind===I?e:void 0;_t(e,Vr(r,{VariableDefinition:()=>!1,Variable(e){let t;if(i){const o=r.getFragmentSignatureByName()(i.name.value);t=o?.variableDefinitions.get(e.name.value),n.push({node:e,type:r.getInputType(),parentType:r.getParentInputType(),defaultValue:void 0,fragmentVariableDefinition:t})}else n.push({node:e,type:r.getInputType(),parentType:r.getParentInputType(),defaultValue:r.getDefaultValue(),fragmentVariableDefinition:void 0})}})),t=n,this._variableUsages.set(e,t)}return t}getRecursiveVariableUsages(e){let t=this._recursiveVariableUsages.get(e);if(!t){t=this.getVariableUsages(e);for(const n of this.getRecursivelyReferencedFragments(e))t=t.concat(this.getVariableUsages(n));this._recursiveVariableUsages.set(e,t)}return t}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getFragmentSignature(){return this._typeInfo.getFragmentSignature()}getFragmentSignatureByName(){return this._typeInfo.getFragmentSignatureByName()}getEnumValue(){return this._typeInfo.getEnumValue()}}function Qi(e,t,n=Gi,r){!function(e){const t=br(e);if(0!==t.length)throw new Error(t.map(e=>e.message).join("\n\n"))}(e);const i=new GraphQLError("Too many validation errors, error limit reached. Validation aborted."),o=[],s=new TypeInfo(e),a=new ValidationContext(e,t,s,e=>{if(o.length>=100)throw i;o.push(e)},!1),c=xt(n.map(e=>e(a)));try{_t(t,Vr(s,c))}catch(e){if(e!==i)throw e;o.push(i)}return o}function Vi(e,n){t(e)&&t(e.__schema)||et(0,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${tt(e)}.`);const r=e.__schema,i=new Map(r.types.map(e=>[e.name,f(e)]));for(const e of[...Mn,...vr])i.has(e.name)&&i.set(e.name,e);const o=null!=r.queryType?p(r.queryType):null,s=null!=r.mutationType?p(r.mutationType):null,a=null!=r.subscriptionType?p(r.subscriptionType):null,c=null!=r.directives?r.directives.map(function(e){if(null==e.args){const t=tt(e);throw new Error(`Introspection result missing directive args: ${t}.`)}if(null==e.locations){const t=tt(e);throw new Error(`Introspection result missing directive locations: ${t}.`)}return new GraphQLDirective({name:e.name,description:e.description,isRepeatable:e.isRepeatable,locations:e.locations.slice(),args:y(e.args)})}):[];return new GraphQLSchema({description:r.description,query:o,mutation:s,subscription:a,types:[...i.values()],directives:c,assumeValid:n?.assumeValid});function u(e){if(e.kind===pr.LIST){const t=e.ofType;if(null==t)throw new Error("Decorated type deeper than introspection query.");return new GraphQLList(u(t))}if(e.kind===pr.NON_NULL){const t=e.ofType;if(null==t)throw new Error("Decorated type deeper than introspection query.");const n=u(t);return new GraphQLNonNull(function(e){if(!sn(e))throw new Error(`Expected ${tt(e)} to be a GraphQL nullable type.`);return e}(n))}return l(e)}function l(e){const t=e.name;if(!t)throw new Error(`Unknown type reference: ${tt(e)}.`);const n=i.get(t);if(null==n)throw new Error(`Invalid or incomplete schema, unknown type: ${t}. Ensure that a full introspection query is used in order to build a client schema.`);return n}function p(e){return function(e){if(!Bt(e))throw new Error(`Expected ${tt(e)} to be a GraphQL Object type.`);return e}(l(e))}function d(e){return function(e){if(!Jt(e))throw new Error(`Expected ${tt(e)} to be a GraphQL Interface type.`);return e}(l(e))}function f(e){switch(e.kind){case pr.SCALAR:return new GraphQLScalarType({name:(r=e).name,description:r.description,specifiedByURL:r.specifiedByURL});case pr.OBJECT:return new GraphQLObjectType({name:(n=e).name,description:n.description,interfaces:()=>h(n),fields:()=>m(n)});case pr.INTERFACE:return new GraphQLInterfaceType({name:(t=e).name,description:t.description,interfaces:()=>h(t),fields:()=>m(t)});case pr.UNION:return function(e){if(null==e.possibleTypes){const t=tt(e);throw new Error(`Introspection result missing possibleTypes: ${t}.`)}return new GraphQLUnionType({name:e.name,description:e.description,types:()=>e.possibleTypes.map(p)})}(e);case pr.ENUM:return function(e){if(null==e.enumValues){const t=tt(e);throw new Error(`Introspection result missing enumValues: ${t}.`)}return new GraphQLEnumType({name:e.name,description:e.description,values:yt(e.enumValues,e=>e.name,e=>({description:e.description,deprecationReason:e.deprecationReason}))})}(e);case pr.INPUT_OBJECT:return function(e){if(null==e.inputFields){const t=tt(e);throw new Error(`Introspection result missing inputFields: ${t}.`)}return new GraphQLInputObjectType({name:e.name,description:e.description,fields:()=>y(e.inputFields),isOneOf:e.isOneOf})}(e)}var t,n,r;throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${tt(e)}.`)}function h(e){if(null===e.interfaces&&e.kind===pr.INTERFACE)return[];if(null==e.interfaces){const t=tt(e);throw new Error(`Introspection result missing interfaces: ${t}.`)}return e.interfaces.map(d)}function m(e){if(null==e.fields)throw new Error(`Introspection result missing fields: ${tt(e)}.`);return yt(e.fields,e=>e.name,v)}function v(e){const t=u(e.type);if(!Zt(t)){const e=tt(t);throw new Error(`Introspection must provide output type for fields, but received: ${e}.`)}if(null==e.args){const t=tt(e);throw new Error(`Introspection result missing field args: ${t}.`)}return{description:e.description,deprecationReason:e.deprecationReason,type:t,args:y(e.args)}}function y(e){return yt(e,e=>e.name,g)}function g(e){const t=u(e.type);if(!Xt(t)){const e=tt(t);throw new Error(`Introspection must provide input type for arguments, but received: ${e}.`)}return{description:e.description,type:t,default:null!=e.defaultValue?{literal:ot(e.defaultValue)}:void 0,deprecationReason:e.deprecationReason}}}const Ci="SCHEMA",ji="SCALAR",Ri="OBJECT",Mi="FIELD",Ui="ARGUMENT",Pi="INTERFACE",Bi="UNION",qi="ENUM",Ji="ENUM_VALUE",Ki="INPUT_OBJECT",zi="INPUT_FIELD",Yi="DIRECTIVE";function Hi(e,t){const r=t({getNamedType:u,setNamedType:function(e){i.set(e.name,e)},getNamedTypes:function(){return Array.from(i.values())}}),i=new Map;for(const t of e.types){const e=t.name,n=l(t);n&&i.set(e,n)}const o=[];for(const t of e.directives){if(er(t)){o.push(t);continue}const e=m(t.toConfig());e&&o.push(new GraphQLDirective(e))}const s={...e,query:e.query&&u(e.query.name),mutation:e.mutation&&u(e.mutation.name),subscription:e.subscription&&u(e.subscription.name),types:Array.from(i.values()),directives:o},a=r[Ci];return null==a?s:a(s);function c(e){return Ht(e)?new GraphQLList(c(e.ofType)):Wt(e)?new GraphQLNonNull(c(e.ofType)):u(e.name)}function u(e){const t=Wi.get(e)??i.get(e);return void 0!==t||n(0,`Unknown type: "${e}".`),t}function l(e){return yr(e)||Un(e)?e:Pt(e)?function(e){let t=e.toConfig();const n=r[ji];return t=null==n?t:n(t),new GraphQLScalarType(t)}(e):Bt(e)?function(e){const t=e.toConfig();let n={...t,interfaces:()=>t.interfaces.map(e=>u(e.name)),fields:()=>p(t.fields,e.name)};const i=r[Ri];return n=null==i?n:i(n),new GraphQLObjectType(n)}(e):Jt(e)?function(e){const t=e.toConfig();let n={...t,interfaces:()=>t.interfaces.map(e=>u(e.name)),fields:()=>p(t.fields,e.name)};const i=r[Pi];return n=null==i?n:i(n),new GraphQLInterfaceType(n)}(e):Kt(e)?function(e){const t=e.toConfig();let n={...t,types:()=>t.types.map(e=>u(e.name))};const i=r[Bi];return n=null==i?n:i(n),new GraphQLUnionType(n)}(e):zt(e)?function(e){const t=e.toConfig();let n={...t,values:()=>{const n=Object.create(null);for(const[r,i]of Object.entries(t.values)){const t=f(i,r,e.name);n[r]=t}return n}};const i=r[qi];return n=null==i?n:i(n),new GraphQLEnumType(n)}(e):Yt(e)?function(e){const t=e.toConfig();let n={...t,fields:()=>{const n=Object.create(null);for(const[r,i]of Object.entries(t.fields)){const t=h(i,r,e.name);n[r]=t}return n}};const i=r[Ki];return n=null==i?n:i(n),new GraphQLInputObjectType(n)}(e):void n(0,"Unexpected type: "+tt(e))}function p(e,t){const n=Object.create(null);for(const[i,o]of Object.entries(e)){let e={...o,type:c(o.type),args:d(o.args,t,i)};const s=r[Mi];s&&(e=s(e,t)),n[i]=e}return n}function d(e,t,n){const i=Object.create(null);for(const[o,s]of Object.entries(e)){let e={...s,type:c(s.type)};const a=r[Ui];a&&(e=a(e,t,n)),i[o]=e}return i}function f(e,t,n){const i={...e},o=r[Ji];return null==o?i:o(i,t,n)}function h(e,t,n){const i={...e,type:c(e.type)},o=r[zi];return null==o?i:o(i,t,n)}function m(e){const t={...e,args:d(e.args,e.name,void 0)},n=r[Yi];return null==n?t:n(t)}}const Wi=new Map([...Mn,...vr].map(e=>[e.name,e]));function Xi(e,t,r){const i=[],o=new AccumulatorMap,s=new AccumulatorMap,a=new AccumulatorMap,c=new AccumulatorMap,u=new AccumulatorMap,l=new AccumulatorMap,p=[];let d;const f=[];let h=!1;for(const e of t.definitions){switch(e.kind){case R:d=e;break;case X:f.push(e);break;case W:p.push(e);break;case U:case P:case J:case K:case z:case H:i.push(e);break;case Z:o.add(e.name.value,e);break;case ee:s.add(e.name.value,e);break;case te:a.add(e.name.value,e);break;case ne:c.add(e.name.value,e);break;case re:u.add(e.name.value,e);break;case ie:l.add(e.name.value,e);break;default:continue}h=!0}return h?Hi(e,e=>{const{getNamedType:t,setNamedType:h,getNamedTypes:m}=e;return{[Ci]:e=>{for(const e of i){const t=Zi.get(e.name.value)??L(e);h(t)}const n={query:e.query&&t(e.query.name),mutation:e.mutation&&t(e.mutation.name),subscription:e.subscription&&t(e.subscription.name),...d&&v([d]),...v(f)};return{description:d?.description?.value??e.description,...n,types:m(),directives:[...e.directives,...p.map(T)],extensions:e.extensions,astNode:d??e.astNode,extensionASTNodes:e.extensionASTNodes.concat(f),assumeValid:r?.assumeValid??!1}},[Ki]:e=>{const t=l.get(e.name)??[];return{...e,fields:()=>({...e.fields(),...N(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[qi]:e=>{const t=u.get(e.name)??[];return{...e,values:()=>({...e.values(),...w(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[ji]:e=>{const t=o.get(e.name)??[];let n=e.specifiedByURL;for(const e of t)n=to(e)??n;return{...e,specifiedByURL:n,extensionASTNodes:e.extensionASTNodes.concat(t)}},[Ri]:e=>{const t=s.get(e.name)??[];return{...e,interfaces:()=>[...e.interfaces(),...S(t)],fields:()=>({...e.fields(),...b(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[Pi]:e=>{const t=a.get(e.name)??[];return{...e,interfaces:()=>[...e.interfaces(),...S(t)],fields:()=>({...e.fields(),...b(t)}),extensionASTNodes:e.extensionASTNodes.concat(t)}},[Bi]:e=>{const t=c.get(e.name)??[];return{...e,types:()=>[...e.types(),...I(t)],extensionASTNodes:e.extensionASTNodes.concat(t)}}};function v(e){const t={};for(const n of e){const e=n.operationTypes??[];for(const n of e)t[n.operation]=y(n.type)}return t}function y(e){const r=e.name.value,i=t(r);return void 0!==i||n(0,`Unknown type: "${r}".`),i}function g(e){return e.kind===C?new GraphQLList(g(e.type)):e.kind===j?new GraphQLNonNull(g(e.type)):y(e)}function T(e){return new GraphQLDirective({name:e.name.value,description:e.description?.value,locations:e.locations.map(({value:e})=>e),isRepeatable:e.repeatable,args:E(e.arguments),astNode:e})}function b(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e)t[n.name.value]={type:g(n.type),description:n.description?.value,args:E(n.arguments),deprecationReason:eo(n),astNode:n}}return t}function E(e){const t=e??[],n=Object.create(null);for(const e of t){const t=g(e.type);n[e.name.value]={type:t,description:e.description?.value,default:e.defaultValue&&{literal:e.defaultValue},deprecationReason:eo(e),astNode:e}}return n}function N(e){const t=Object.create(null);for(const n of e){const e=n.fields??[];for(const n of e){const e=g(n.type);t[n.name.value]={type:e,description:n.description?.value,default:n.defaultValue&&{literal:n.defaultValue},deprecationReason:eo(n),astNode:n}}}return t}function w(e){const t=Object.create(null);for(const n of e){const e=n.values??[];for(const n of e)t[n.name.value]={description:n.description?.value,deprecationReason:eo(n),astNode:n}}return t}function S(e){return e.flatMap(e=>e.interfaces?.map(y)??[])}function I(e){return e.flatMap(e=>e.types?.map(y)??[])}function L(e){const t=e.name.value;switch(e.kind){case P:{const n=s.get(t)??[],r=[e,...n];return new GraphQLObjectType({name:t,description:e.description?.value,interfaces:()=>S(r),fields:()=>b(r),astNode:e,extensionASTNodes:n})}case J:{const n=a.get(t)??[],r=[e,...n];return new GraphQLInterfaceType({name:t,description:e.description?.value,interfaces:()=>S(r),fields:()=>b(r),astNode:e,extensionASTNodes:n})}case z:{const n=u.get(t)??[],r=[e,...n];return new GraphQLEnumType({name:t,description:e.description?.value,values:()=>w(r),astNode:e,extensionASTNodes:n})}case K:{const n=c.get(t)??[],r=[e,...n];return new GraphQLUnionType({name:t,description:e.description?.value,types:()=>I(r),astNode:e,extensionASTNodes:n})}case U:{const n=o.get(t)??[];return new GraphQLScalarType({name:t,description:e.description?.value,specifiedByURL:to(e),astNode:e,extensionASTNodes:n})}case H:{const r=l.get(t)??[],i=[e,...r];return new GraphQLInputObjectType({name:t,description:e.description?.value,fields:()=>N(i),astNode:e,extensionASTNodes:r,isOneOf:(n=e,Boolean(gi(Xn,n)))})}}var n}}):e}const Zi=new Map([...Mn,...vr].map(e=>[e.name,e]));function eo(e){const t=gi(Hn,e);return t?.reason}function to(e){const t=gi(Wn,e);return t?.url}function no(e){return function(e,t,r){const i=e.getDirectives().filter(t),o=Object.values(e.getTypeMap()).filter(r);return[io(e),...i.map(e=>function(e){return po(e)+`directive ${e}`+co(e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}(e)),...o.map(e=>function(e){if(Pt(e))return function(e){return po(e)+`scalar ${e}`+function(e){if(null==e.specifiedByURL)return"";return` @specifiedBy(url: ${$t({kind:_,value:e.specifiedByURL})})`}(e)}(e);if(Bt(e))return function(e){return po(e)+`type ${e}`+oo(e)+so(e)}(e);if(Jt(e))return function(e){return po(e)+`interface ${e}`+oo(e)+so(e)}(e);if(Kt(e))return function(e){const t=e.getTypes(),n=t.length?" = "+t.join(" | "):"";return po(e)+`union ${e.name}`+n}(e);if(zt(e))return function(e){const t=e.getValues().map((e,t)=>po(e,"  ",!t)+"  "+e.name+lo(e.deprecationReason));return po(e)+`enum ${e}`+ao(t)}(e);if(Yt(e))return function(e){const t=Object.values(e.getFields()).map((e,t)=>po(e,"  ",!t)+"  "+uo(e));return po(e)+`input ${e}`+(e.isOneOf?" @oneOf":"")+ao(t)}(e);n(0,"Unexpected type: "+tt(e))}(e))].filter(Boolean).join("\n\n")}(e,e=>!er(e),ro)}function ro(e){return!Un(e)&&!yr(e)}function io(e){const t=e.getQueryType(),n=e.getMutationType(),r=e.getSubscriptionType();if(t||n||r)return null==e.description&&function(e){return e.getQueryType()==e.getType("Query")&&e.getMutationType()==e.getType("Mutation")&&e.getSubscriptionType()==e.getType("Subscription")}(e)?void 0:po(e)+"schema {\n"+(t?`  query: ${t}\n`:"")+(n?`  mutation: ${n}\n`:"")+(r?`  subscription: ${r}\n`:"")+"}"}function oo(e){const t=e.getInterfaces();return t.length?" implements "+t.map(e=>e.name).join(" & "):""}function so(e){return ao(Object.values(e.getFields()).map((e,t)=>po(e,"  ",!t)+"  "+e.name+co(e.args,"  ")+": "+String(e.type)+lo(e.deprecationReason)))}function ao(e){return 0!==e.length?" {\n"+e.join("\n")+"\n}":""}function co(e,t=""){return 0===e.length?"":e.every(e=>null==e.description)?"("+e.map(uo).join(", ")+")":"(\n"+e.map((e,n)=>po(e,"  "+t,!n)+"  "+t+uo(e)).join("\n")+"\n"+t+")"}function uo(e){let t=e.name+": "+String(e.type);const n=rr(e);return n&&(t+=` = ${$t(n)}`),t+lo(e.deprecationReason)}function lo(e){if(null==e)return"";if(e!==Yn){return` @deprecated(reason: ${$t({kind:_,value:e})})`}return" @deprecated"}function po(e,t="",n=!0){const{description:r}=e;if(null==r)return"";return(t&&!n?"\n"+t:t)+$t({kind:_,value:r,block:fe(r)}).replaceAll("\n","\n"+t)+"\n"}function fo(e){const t=[];for(const n of e)t.push(...n.definitions);return{kind:v,definitions:t}}const ho=[Jr];function mo(e){var t;const n=function(e){if(e)return function(t){const n=e;return{Field(e){var r;const i=(null!==(r=e.alias)&&void 0!==r?r:e.name).value,o=i.charAt(0).toLowerCase()+i.slice(1);n.includes(o)&&t.reportError(new GraphQLError(`Field name "${i}" is not allowed because it conflicts with generated object APIs. Please use an alias to change the field name.`,{nodes:e}))}}};return}(null===(t=e.disallowedFieldNames)||void 0===t?void 0:t.allFields),r=function(e){if(e)return function(t){const n=e;return{VariableDefinition(e){const r=e.variable.name.value,i=r.charAt(0).toLowerCase()+r.slice(1);n.includes(i)&&t.reportError(new GraphQLError(`Input Parameter name "${r}" is not allowed because it conflicts with generated object APIs.`,{nodes:e}))}}};return}(e.disallowedInputParameterNames);return[vo,yo,go,To,...n?[n]:[],...r?[r]:[],...Gi.filter(e=>!ho.includes(e))]}function vo(e){return{OperationDefinition:t=>(t.name||e.reportError(new GraphQLError("Apollo does not support anonymous operations because operation names are used during code generation. Please give this operation a name.",{nodes:t})),!1)}}function yo(e){return{Field(t){"__typename"==(t.alias&&t.alias.value)&&e.reportError(new GraphQLError("Apollo needs to be able to insert __typename when needed, so using it as an alias is not supported.",{nodes:t}))}}}function go(e){return{InlineFragment(t){if(t.directives)for(const n of t.directives)n.name.value==Kn.name&&null==t.typeCondition&&e.reportError(new GraphQLError("Apollo does not support deferred inline fragments without a type condition. Please add a type condition to this inline fragment.",{nodes:t}))}}}function To(e){return{InlineFragment(t){var n;if(t.directives)for(const r of t.directives)r.name.value!=Kn.name||(null===(n=r.arguments)||void 0===n?void 0:n.find(e=>"label"==e.name.value))||e.reportError(new GraphQLError("Apollo does not support deferred inline fragments without a 'label' argument. Please add a 'label' argument to the @defer directive on this inline fragment.",{nodes:t}))}}}function bo(e){return{kind:m,value:e}}function Eo(e){return{kind:_,value:e}}function No(e){return{kind:W,description:e.description?Eo(e.description):void 0,name:bo(e.name),repeatable:!1,locations:e.locations.map(e=>bo(e)),arguments:e.args.map(e=>function(e){return{kind:q,description:Eo(e.description),name:bo(e.name),type:wo(un(e.type))}}(e))}}function wo(e){return{kind:V,name:bo(e.name)}}function So(e){return{kind:j,type:e}}const Io={kind:W,description:Eo("A directive used by the Apollo iOS client to annotate operations or fragments that should be used exclusively for generating local cache mutations instead of as standard operations."),name:bo("apollo_client_ios_localCacheMutation"),repeatable:!1,locations:[bo("QUERY"),bo("MUTATION"),bo("SUBSCRIPTION"),bo("FRAGMENT_DEFINITION")]},Lo={kind:W,description:Eo("Attach extra information to a given type."),name:bo("typePolicy"),arguments:[{kind:q,description:Eo("A selection set containing fields used to compute the cache key of an object. Referenced fields must have non-nullable scalar types. Order is important."),name:bo("keyFields"),type:So(wo(Cn))}],repeatable:!1,locations:[bo("OBJECT"),bo("INTERFACE")]},ko={kind:W,description:Eo("A directive used by Apollo iOS to map query input data to cache keys of objects."),name:bo("fieldPolicy"),arguments:[{kind:q,description:Eo("The field you are setting the @fieldPolicy for."),name:bo("forField"),type:So(wo(Cn))},{kind:q,description:Eo("Set of fields used to compute the cache key."),name:bo("keyArgs"),type:So(wo(Cn))}],repeatable:!0,locations:[bo("OBJECT"),bo("INTERFACE")]},Oo={kind:W,description:Eo("A directive used by the Apollo iOS code generation engine to generate custom import statements in operation or fragment definition files. An import statement to import a module with the name provided in the `module` argument will be added to the generated definition file."),name:bo("import"),arguments:[{kind:q,description:Eo("The name of the module to import."),name:bo("module"),type:So(wo(Cn))}],repeatable:!0,locations:[bo("QUERY"),bo("MUTATION"),bo("SUBSCRIPTION"),bo("FRAGMENT_DEFINITION")]},_o=[Io,Oo,Lo,ko];const xo={kind:b,name:{kind:m,value:"__typename"}};class GraphQLSchemaValidationError extends Error{constructor(e){super(e.map(e=>e.message).join("\n\n")),this.validationErrors=e,this.name="GraphQLSchemaValidationError"}}function Do(e){const t=function(e,t,n=Fi){const r=[],i=new SDLValidationContext(e,t,e=>{r.push(e)});return _t(e,xt(n.map(e=>e(i)))),r}(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}function $o(e){const t=br(e);if(0!==t.length)throw new GraphQLSchemaValidationError(t)}function Ao(e){return e.startsWith("__")}function Go(e){if(!e)return!1;for(const t of e)if(t.name.value==Io.name.value)return!0;return!1}const Fo={kind:b,name:{kind:m,value:"__typename"}};function Qo(e,t){return t&&(e=function(e){return _t(e,{enter:e=>e.kind!==T?void 0:{...e,selections:e.selections.filter(e=>!("Field"===e.kind&&"__typename"===e.name.value))},leave(e){if((e.kind===b||e.kind===I||e.kind===S)&&e.selectionSet)return{...e,selectionSet:{...e.selectionSet,selections:[xo,...e.selectionSet.selections]}}}})}(e)),_t(e,{SelectionSet:{leave:(e,t,n)=>d(n)&&![b,I].includes(n.kind)?e:function(e){const t=e.selections.find(e=>e.kind==Fo.kind&&e.name.value==Fo.name.value);return t?e:{...e,selections:[Fo,...e.selections]}}(e)},Field:{enter:e=>function(e){return e.name.value==Fo.name.value?{...e,alias:void 0,directives:void 0}:e}(e)},Directive:{enter:e=>function(e){const t=[Io,Oo];for(const n of t)if(e.name.value==n.name.value)return null;return e}(e)}})}function Vo(e){return null!=e}function Co(e){switch(e.kind){case L:return{kind:e.kind,value:e.name.value};case A:return{kind:e.kind,value:e.values.map(Co)};case G:return{kind:e.kind,value:e.fields.reduce((e,t)=>(e[t.name.value]=Co(t.value),e),{})};default:return e}}function jo(e){var t,n;return null===(n=null===(t=e.loc)||void 0===t?void 0:t.source)||void 0===n?void 0:n.name}function Ro(e,t,n,r,i){var o,s,a;const c=new Map;for(const e of t.definitions)e.kind===I&&c.set(e.name.value,e);const u=[],l=new Map,p=new Set,d=r,f=e.getQueryType();if(void 0===f)throw new GraphQLError("GraphQL Schema must contain a 'query' root type definition.",{});const h={queryType:f,mutationType:null!==(o=e.getMutationType())&&void 0!==o?o:void 0,subscriptionType:null!==(s=e.getSubscriptionType())&&void 0!==s?s:void 0};for(const e of t.definitions)e.kind===y&&u.push(g(e));for(const[e,t]of c.entries())l.set(e,T(t));return{rootTypes:h,operations:u,fragments:Array.from(l.values()),referencedTypes:Array.from(p.values()),schemaDocumentation:null!==(a=e.description)&&void 0!==a?a:void 0};function m(t){if(!p.has(t)){if(p.add(t),Jt(t)){const n=e.getPossibleTypes(t);t._implementingObjects=n;for(const e of n)d&&!v(e)||m(un(e))}if(Kt(t)){const e=t.getTypes();for(t of e)m(un(t))}if(Yt(t)&&function(e){const t=e.getFields();for(const e in t){m(un(t[e].type))}}(t),Bt(t))for(const e of t.getInterfaces())m(un(e))}}function v(e){var t,n;const r=Lo.name.value;for(const i of null!==(n=null===(t=e.astNode)||void 0===t?void 0:t.directives)&&void 0!==n?n:[])if(i.name.value===r)return!0;return!1}function g(t){var r;if(!t.name)throw new GraphQLError("Operations should be named",{nodes:t});const i=jo(t),o=t.name.value,s=t.operation,a=new Set,c=(t.variableDefinitions||[]).map(t=>{const n=t.variable.name.value,r=t.defaultValue?Co(t.defaultValue):void 0,i=Qr(e,t.type);if(!i)throw new GraphQLError(`Couldn't get type from type node "${t.type}"`,{nodes:t});return m(un(i)),{name:n,type:i,defaultValue:r}}),u=$t(Qo(t,n)),l=e.getRootType(s),[p]=null!==(r=O(t.directives))&&void 0!==r?r:[void 0,void 0];m(l);const d=N(t.selectionSet,l,a),f=Array.from(a.values());return Go(t.directives)&&E(f),{name:o,operationType:s,variables:c,rootType:l,selectionSet:d,directives:p,referencedFragments:f,source:u,filePath:i}}function T(t){var r;const i=t.name.value,o=jo(t),s=$t(Qo(t,n)),a=new Set,c=Qr(e,t.typeCondition),[u]=null!==(r=O(t.directives))&&void 0!==r?r:[void 0,void 0];m(un(c));const l=N(t.selectionSet,c,a),p=Array.from(a.values());return Go(t.directives)&&E(p),{name:i,filePath:o,source:s,typeCondition:c,selectionSet:l,directives:u,referencedFragments:p,overrideAsLocalCacheMutation:!1}}function E(e){e.forEach(e=>{e.overrideAsLocalCacheMutation=!0,E(e.referencedFragments)})}function N(t,n,r){return{parentType:n,selections:t.selections.map(t=>function(t,n,r){var o,s,a,u;const[p,d]=null!==(o=O(t.directives))&&void 0!==o?o:[void 0,void 0];switch(t.kind){case b:{const f=t.name.value;if("__typename"==f)return;const h=null===(s=t.alias)||void 0===s?void 0:s.value,v=function(e,t,n){return n===fr.name&&e.getQueryType()===t?fr:n===hr.name&&e.getQueryType()===t?hr:n===mr.name&&(Bt(t)||Jt(t)||Kt(t))?mr:Bt(t)||Jt(t)?t.getFields()[n]:void 0}(e,n,f);if(!v)throw new GraphQLError(`Cannot query field "${f}" on type "${String(n)}"`,{nodes:t});const y=v.type,g=un(v.type);m(un(g));const{description:E,deprecationReason:I}=v;let L={kind:"Field",name:f,alias:h,type:y,arguments:k(v,t.arguments),inclusionConditions:d,description:!Ao(f)&&E?E:void 0,deprecationReason:I||void 0,directives:p,fieldPolicyKeys:v._apolloFieldPolicies||void 0};function _(e,t,n){var r;if(t&&n){const i=(null!==(r=e.alias)&&void 0!==r?r:e.name).value,o=i.charAt(0).toLowerCase()+i.slice(1);if(null==t?void 0:t.includes(o))throw new GraphQLError(`Schema name "${n}" conflicts with name of a generated object API. Please choose a different schema name. Suggestions: "${n}Schema", "${n}GraphQL", "${n}API"`,{nodes:e})}}if(Ht(y)||Wt(y)&&Ht(y.ofType)?_(t,null===(a=i.disallowedFieldNames)||void 0===a?void 0:a.entityList,i.schemaNamespace):nn(g)&&_(t,null===(u=i.disallowedFieldNames)||void 0===u?void 0:u.entity,i.schemaNamespace),nn(g)){const x=t.selectionSet;if(!x)throw new GraphQLError(`Composite field "${f}" on type "${String(n)}" requires selection set`,{nodes:t});L.selectionSet=N(x,g,r)}return L}case S:{const D=t.typeCondition,$=D?Qr(e,D):n;return m($),{kind:"InlineFragment",selectionSet:N(t.selectionSet,$,r),inclusionConditions:d,directives:p}}case w:{const A=t.name.value,G=function(e){let t=l.get(e);if(t)return t;const n=c.get(e);return n?(c.delete(e),t=T(n),l.set(e,t),t):void 0}(A);if(!G)throw new GraphQLError(`Unknown fragment "${A}".`,{nodes:t.name});r.add(G);return{kind:"FragmentSpread",fragment:G,inclusionConditions:d,directives:p}}}}(t,n,r)).filter(Vo)}}function k(...e){const t=e[0].args;return e[1]&&e[1].length>0?e[1].map(e=>{var n;const r=e.name.value,i=t.find(t=>t.name===e.name.value),o=null==i?void 0:i.type;if(!o)throw new GraphQLError(`Cannot find directive argument type for argument "${r}".`,{nodes:[e]});return{name:r,value:Co(e.value),type:o,deprecationReason:null!==(n=i.deprecationReason)&&void 0!==n?n:void 0}}):void 0}function O(t){if(t&&t.length>0){const n=[],r=[];for(const i of t){const t=i.name.value,o=e.getDirective(t);if(!o)throw new GraphQLError(`Cannot find directive "${t}".`,{nodes:i});n.push({name:t,arguments:k(o,i.arguments)});const s=_(i,o);s&&r.push(s)}return[n,r.length>0?r:void 0]}}function _(e,t){var n;if("include"==t.name||"skip"==t.name){const r=null===(n=e.arguments)||void 0===n?void 0:n[0].value,i="skip"==t.name;switch(null==r?void 0:r.kind){case x:return i?r.value?"SKIPPED":"INCLUDED":r.value?"INCLUDED":"SKIPPED";case L:return{variable:r.name.value,isInverted:i};default:throw new GraphQLError('Conditional inclusion directive has invalid "if" argument.',{nodes:e})}}}}function Mo(e){return e.kind===W&&e.name.value===Kn.name}function Uo(){return{kind:v,definitions:[No(Kn)]}}const Po=Lo.name.value;function Bo(e,t){var n,r;return(null!==(n=e.arguments)&&void 0!==n?n:[]).map(e=>JSON.stringify([e.name.value,Rt(e.value)])).sort().toString()===(null!==(r=t.arguments)&&void 0!==r?r:[]).map(e=>JSON.stringify([e.name.value,Rt(e.value)])).sort().toString()}function qo(e){var t,n,r,i;if(Kt(e))return;for(const r of null!==(t=e.extensionASTNodes)&&void 0!==t?t:[]){const t=null===(n=r.directives)||void 0===n?void 0:n.find(e=>e.name.value===Po);if(t)return{directive:t,source:e}}let o;for(const t of null!==(i=null===(r=e.astNode)||void 0===r?void 0:r.directives)&&void 0!==i?i:[])if(t.name.value===Po){o={directive:t,source:e};break}if("getInterfaces"in e)for(const t of e.getInterfaces()){const n=qo(t);if(n)if(o){if(!Bo(o.directive,n.directive))throw o.source===e?new GraphQLError(`Type "${e.name}" has a @typePolicy directive which conflicts with the @typePolicy directive on interface "${n.source.name}".`,{nodes:e.astNode}):new GraphQLError(`Type "${e.name}" inherits conflicting @typePolicy directives from interfaces "${o.source.name}" and "${n.source.name}".`,{nodes:e.astNode})}else o=n}return o}function Jo(e){var t,n,r;const i=qo(e);if(!i)return[];const o=null===(r=null===(n=null===(t=i.directive)||void 0===t?void 0:t.arguments)||void 0===n?void 0:n.find(e=>"keyFields"===e.name.value))||void 0===r?void 0:r.value;if(!o||o.kind!==_)return[];const s=o.value.split(" ");return function(e,t){const{directive:n,source:r}=e;if(Kt(r))return;const i=Jt(r)?"interface":"object";var o=r.getFields();for(const e of t){if(!e)throw new GraphQLError("Key fields must be a space-separated list of identifiers.",{nodes:n});const t=o[e];if(!t)throw new GraphQLError(`Key field "${e}" does not exist on ${i} "${r.name}".`,{nodes:r.astNode?[r.astNode,n]:n});if(!Wt(t.type))throw new GraphQLError(`Key field "${e}" on ${i} "${r.name}" must be non-nullable.`,{nodes:t.astNode?[t.astNode,n]:n});if(!Pt(t.type.ofType))throw new GraphQLError(`Key field "${e}" on ${i} "${r.name}" must be a scalar type, got ${t.type}.`,{nodes:t.astNode?[t.astNode,n]:n})}}(i,s),s}function Ko(e){const t=e.getTypeMap();for(const e in t){const n=t[e];(n instanceof GraphQLObjectType||n instanceof GraphQLInterfaceType)&&(n._apolloKeyFields=Jo(n))}}const zo=ko.name.value;function Yo(e){const t=e.getTypeMap();for(const e in t){const n=t[e];(n instanceof GraphQLObjectType||n instanceof GraphQLInterfaceType)&&Ho(n)}}function Ho(e){var t,n,r,i;const o=Wo(e);if(!o||Kt(e))return;const s=e.getFields();for(const a of o){const o=null===(n=null===(t=a.arguments)||void 0===t?void 0:t.find(e=>"forField"===e.name.value))||void 0===n?void 0:n.value;let c;if((null==o?void 0:o.kind)===_&&(c=o.value),!c)throw new GraphQLError("@fieldPolicy directive must have a 'forField' value.",{nodes:a});const u=null===(i=null===(r=a.arguments)||void 0===r?void 0:r.find(e=>"keyArgs"===e.name.value))||void 0===i?void 0:i.value;let l=[];if((null==u?void 0:u.kind)===_){const e=u.value.split(/\s+/);l=[...new Set(e.filter(Boolean))]}if(0===l.length)throw new GraphQLError("'keyArgs' must be a space-separated list of identifiers.",{nodes:a});const p=s[c];if(!p)throw new GraphQLError(`Field "${c}" does not exist on type "${e.name}".`,{nodes:e.astNode?[e.astNode,a]:a});Zo(p,l),is(p),p._apolloFieldPolicies=l}}function Wo(e){var t,n,r,i;if(!Bt(e)&&!Jt(e))return;const o=[];for(const r of null!==(t=e.extensionASTNodes)&&void 0!==t?t:[]){const e=null===(n=r.directives)||void 0===n?void 0:n.find(e=>e.name.value===zo);e&&o.push(e)}for(const t of null!==(i=null===(r=e.astNode)||void 0===r?void 0:r.directives)&&void 0!==i?i:[])t.name.value===zo&&o.push(t);if("getInterfaces"in e)for(const t of e.getInterfaces()){const e=Wo(t);if(e)for(const t of e){var s=!1;for(const e of o)if(Xo(e,t)){s=!0;break}s||o.push(t)}}return o}function Xo(e,t){var n,r;return(null!==(n=e.arguments)&&void 0!==n?n:[]).map(e=>JSON.stringify([e.name.value,Rt(e.value)])).sort().toString()===(null!==(r=t.arguments)&&void 0!==r?r:[]).map(e=>JSON.stringify([e.name.value,Rt(e.value)])).sort().toString()}function Zo(e,t){for(const n of t)es(e,n)}function es(e,t){const n=t.split(".").filter(Boolean),[r,...i]=n,o=e.args.find(e=>e.name===r);if(!o)throw new GraphQLError(`@fieldPolicy key argument "${t}" does not exist as an input argument of field "${e.name}".`,{nodes:e.astNode});let s=ts(o.type);for(let n=0;n<i.length;n++){const r=i[n];if(!Yt(s))throw new GraphQLError(`@fieldPolicy key "${t}" traverses "${r}" on non-object input type "${String(s)}".`,{nodes:e.astNode});const o=s.getFields(),a=o[r];if(!a){const n=Object.keys(o).join(", ");throw new GraphQLError(`@fieldPolicy key "${t}" refers to unknown input field "${r}" on "${s.name}". Known fields: ${n}`,{nodes:e.astNode})}s=ts(a.type)}if(!n.length||Yt(s))throw new GraphQLError(`@fieldPolicy key "${t}" must resolve to a leaf input type (scalar/enum), got "${String(s)}".`,{nodes:e.astNode})}function ts(e){return un(e)}function ns(e){return Ht(an(e))}function rs(e){let t=Wt(e)?e.ofType:e;return!!Ht(t)&&Ht(Wt(t.ofType)?t.ofType.ofType:t.ofType)}function is(e){const t=Ht(an(e.type));let n=0;for(const t of e.args)if(ns(t.type)&&(n+=1,rs(t.type)))throw new GraphQLError(`@fieldPolicy does not allow nested list input parameters. Argument "${t.name}" has type "${String(t.type)}".`,{nodes:e.astNode});if(n>1)throw new GraphQLError("@fieldPolicy can only have at most 1 List type input parameter.",{nodes:e.astNode});if(t&&1!==n||!t&&0!==n)throw new GraphQLError("@fieldPolicy requires either both a List return type and exactly 1 List input parameter, or neither.",{nodes:e.astNode})}return e.GraphQLEnumType=GraphQLEnumType,e.GraphQLError=GraphQLError,e.GraphQLInputObjectType=GraphQLInputObjectType,e.GraphQLInterfaceType=GraphQLInterfaceType,e.GraphQLObjectType=GraphQLObjectType,e.GraphQLScalarType=GraphQLScalarType,e.GraphQLSchema=GraphQLSchema,e.GraphQLSchemaValidationError=GraphQLSchemaValidationError,e.GraphQLUnionType=GraphQLUnionType,e.Source=Source,e.compileDocument=function(e,t,n,r,i){return Ro(e,t,n,r,i)},e.loadSchemaFromSources=function(e){var t,n=new Array;for(const r of e)if(r.name.endsWith(".json")){if(t)throw new Error(`Schema search paths can only include one JSON schema definition.\n        Found "${t.name} & "${r.name}".`);t=r}else n.push(it(r));var r=function(e){const t=_o.filter(t=>!e.definitions.some(e=>e.kind==W&&e.name.value==t.name.value));return fo([e,{kind:v,definitions:t}])}(fo(n));if(t){var i=function(e){let t=JSON.parse(e);t.data&&(t=t.data);const n=Vi(t);return n}(t.body);return r=function(e,t){const n=e.getDirective(Kn.name);return n?function(e,t){return e.isRepeatable===t.isRepeatable&&e.locations.slice(0).sort().toString()===t.locations.slice(0).sort().toString()&&e.args.map(e=>e.name).sort().toString()===t.args.map(e=>e.name).sort().toString()}(n,Kn)?t:(console.warn(`Unsupported ${n.name} directive found. It will be replaced with a supported definition instead.`),fo([t,Uo()])):fo([t,Uo()])}(i,r),Ko(i=function(e,t,n){gr(e);const r=e.toConfig(),i=Xi(r,t,n);return r===i?e:new GraphQLSchema(i)}(i,r,{assumeValid:!0})),Yo(i),$o(i),i}{Do(r=function(e){const t=e.definitions.find(Mo);if(!t)return fo([e,Uo()]);const n=t;if(!function(e,t){var n;return e.repeatable===t.isRepeatable&&e.locations.map(e=>e.value).sort().toString()===t.locations.slice(0).sort().toString()&&(null===(n=e.arguments)||void 0===n?void 0:n.map(e=>e.name.value).sort().toString())===t.args.map(e=>e.name).sort().toString()}(n,Kn))return console.warn(`Unsupported ${n.name.value} directive found. It will be replaced with a supported definition instead.`),{kind:v,definitions:e.definitions.filter(e=>Mo(e)?void 0:e).concat(No(Kn))};return e}(r));const e=function(e,t){const n=Xi({description:void 0,types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:!1},e,t);if(null==n.astNode)for(const e of n.types)switch(e.name){case"Query":n.query=e;break;case"Mutation":n.mutation=e;break;case"Subscription":n.subscription=e}const r=[...n.directives,...Zn.filter(e=>n.directives.every(t=>t.name!==e.name))];return new GraphQLSchema({...n,directives:r})}(r,{assumeValid:!0});return Ko(e),Yo(e),$o(e),e}},e.mergeDocuments=function(e){return fo(e)},e.parseOperationDocument=function(e){return it(e)},e.printSchemaToSDL=function(e){return no(e)},e.validateDocument=function(e,t,n){return Qi(e,t,mo(n))},e}({});"#